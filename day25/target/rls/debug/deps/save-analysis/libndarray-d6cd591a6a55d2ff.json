{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4","program":"/home/rstar284/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ndarray","--edition=2018","/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=d6cd591a6a55d2ff","-C","extra-filename=-d6cd591a6a55d2ff","--out-dir","/home/rstar284/Desktop/aoc/day25/target/rls/debug/deps","-L","dependency=/home/rstar284/Desktop/aoc/day25/target/rls/debug/deps","--extern","matrixmultiply=/home/rstar284/Desktop/aoc/day25/target/rls/debug/deps/libmatrixmultiply-4646bf8d0c53395a.rmeta","--extern","num_complex=/home/rstar284/Desktop/aoc/day25/target/rls/debug/deps/libnum_complex-0ca95802568b0983.rmeta","--extern","num_integer=/home/rstar284/Desktop/aoc/day25/target/rls/debug/deps/libnum_integer-88e425e177decc46.rmeta","--extern","num_traits=/home/rstar284/Desktop/aoc/day25/target/rls/debug/deps/libnum_traits-77005e81d77c6bf7.rmeta","--extern","rawpointer=/home/rstar284/Desktop/aoc/day25/target/rls/debug/deps/librawpointer-45f0cbfb48f4eabd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/rstar284/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/rstar284/Desktop/aoc/day25/target/rls/debug/deps/libndarray-d6cd591a6a55d2ff.rmeta"},"prelude":{"crate_id":{"name":"ndarray","disambiguator":[11440759523181912038,2602889174797703516]},"crate_root":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src","external_crates":[{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","num":18,"id":{"name":"rawpointer","disambiguator":[5707017390045444148,223783039588986145]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/geomspace.rs","num":19,"id":{"name":"num_traits","disambiguator":[18339337599245497517,17096616519426662800]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/mod.rs","num":20,"id":{"name":"num_integer","disambiguator":[5733259648137750546,14739122035573241666]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","num":21,"id":{"name":"num_complex","disambiguator":[12076121252205092968,12757446284485568491]}},{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","num":22,"id":{"name":"matrixmultiply","disambiguator":[8861828337944220849,2237616990000006784]}}],"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":356,"byte_end":55428,"line_start":8,"line_end":1604,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5949,"byte_end":5950,"line_start":131,"line_end":131,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Dim","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5766},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5979,"byte_end":5983,"line_start":132,"line_end":132,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5767},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5979,"byte_end":5983,"line_start":132,"line_end":132,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5750},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5985,"byte_end":6000,"line_start":132,"line_end":132,"column_start":34,"column_end":49},"alias_span":null,"name":"AxisDescription","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2533},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6002,"byte_end":6011,"line_start":132,"line_end":132,"column_start":51,"column_end":60},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2433},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6013,"byte_end":6026,"line_start":132,"line_end":132,"column_start":62,"column_end":75},"alias_span":null,"name":"IntoDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2857},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6028,"byte_end":6038,"line_start":132,"line_end":132,"column_start":77,"column_end":87},"alias_span":null,"name":"RemoveAxis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2838},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6068,"byte_end":6074,"line_start":133,"line_end":133,"column_start":28,"column_end":34},"alias_span":null,"name":"DimAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2411},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6076,"byte_end":6082,"line_start":133,"line_end":133,"column_start":36,"column_end":42},"alias_span":null,"name":"DimMax","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6234},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6112,"byte_end":6121,"line_start":135,"line_end":135,"column_start":27,"column_end":36},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2791},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6149,"byte_end":6156,"line_start":136,"line_end":136,"column_start":27,"column_end":34},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4285},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6181,"byte_end":6190,"line_start":137,"line_end":137,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4281},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6192,"byte_end":6202,"line_start":137,"line_end":137,"column_start":35,"column_end":45},"alias_span":null,"name":"ShapeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6230,"byte_end":6237,"line_start":138,"line_end":138,"column_start":26,"column_end":33},"alias_span":null,"name":"indices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6239,"byte_end":6249,"line_start":138,"line_end":138,"column_start":35,"column_end":45},"alias_span":null,"name":"indices_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4718},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6274,"byte_end":6279,"line_start":139,"line_end":139,"column_start":23,"column_end":28},"alias_span":null,"name":"Order","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1983},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6309,"byte_end":6322,"line_start":141,"line_end":141,"column_start":5,"column_end":18},"alias_span":null,"name":"MultiSliceArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4800},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6324,"byte_end":6331,"line_start":141,"line_end":141,"column_start":20,"column_end":27},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4801},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6324,"byte_end":6331,"line_start":141,"line_end":141,"column_start":20,"column_end":27},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":0,"index":4781},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6333,"byte_end":6338,"line_start":141,"line_end":141,"column_start":29,"column_end":34},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1900},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6340,"byte_end":6348,"line_start":141,"line_end":141,"column_start":36,"column_end":44},"alias_span":null,"name":"SliceArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4951},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6350,"byte_end":6359,"line_start":141,"line_end":141,"column_start":46,"column_end":55},"alias_span":null,"name":"SliceInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4807},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6361,"byte_end":6374,"line_start":141,"line_end":141,"column_start":57,"column_end":70},"alias_span":null,"name":"SliceInfoElem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1974},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6376,"byte_end":6388,"line_start":141,"line_end":141,"column_start":72,"column_end":84},"alias_span":null,"name":"SliceNextDim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6525,"byte_end":6532,"line_start":147,"line_end":147,"column_start":29,"column_end":36},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6588,"byte_end":6595,"line_start":149,"line_end":149,"column_start":31,"column_end":38},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1666},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6627,"byte_end":6639,"line_start":150,"line_end":150,"column_start":31,"column_end":43},"alias_span":null,"name":"LinalgScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2041},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6707,"byte_end":6718,"line_start":153,"line_end":153,"column_start":27,"column_end":38},"alias_span":null,"name":"concatenate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2038},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6720,"byte_end":6725,"line_start":153,"line_end":153,"column_start":40,"column_end":45},"alias_span":null,"name":"stack","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2046},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6727,"byte_end":6741,"line_start":153,"line_end":153,"column_start":47,"column_end":61},"alias_span":null,"name":"stack_new_axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4711},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6771,"byte_end":6779,"line_start":155,"line_end":155,"column_start":27,"column_end":35},"alias_span":null,"name":"MathCell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4019},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6808,"byte_end":6819,"line_start":156,"line_end":156,"column_start":28,"column_end":39},"alias_span":null,"name":"IndexLonger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4734},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6852,"byte_end":6857,"line_start":157,"line_end":157,"column_start":32,"column_end":37},"alias_span":null,"name":"Shape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1807},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6859,"byte_end":6871,"line_start":157,"line_end":157,"column_start":39,"column_end":51},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1841},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6873,"byte_end":6881,"line_start":157,"line_end":157,"column_start":53,"column_end":61},"alias_span":null,"name":"ShapeArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4752},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":6883,"byte_end":6894,"line_start":157,"line_end":157,"column_start":63,"column_end":74},"alias_span":null,"name":"StrideShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7125,"byte_end":7135,"line_start":171,"line_end":171,"column_start":33,"column_end":43},"alias_span":null,"name":"AssignElem","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7194,"byte_end":7195,"line_start":175,"line_end":175,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"ArrayViewMut5, ArrayViewMut2, ArrayViewD, ArrayView4, ArrayView1, Array6, Array3, Array0, ArrayViewMutD, ArrayViewMut4, IxDyn, ArrayViewMut1, ArrayView6, Ix6, ArrayView3, Ix5, Ix1, ArrayView0, Array5, Ix4, Array2, Ix3, Ix2, ArcArray2, ArrayViewMut6, ArrayViewMut3, ArrayViewMut0, ArrayView5, ArrayView2, Ix0, ArrayD, Array4, Array1, ArcArray1","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7232,"byte_end":7236,"line_start":178,"line_end":178,"column_start":5,"column_end":9},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7238,"byte_end":7245,"line_start":178,"line_end":178,"column_start":11,"column_end":18},"alias_span":null,"name":"DataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7247,"byte_end":7256,"line_start":178,"line_end":178,"column_start":20,"column_end":29},"alias_span":null,"name":"DataOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7258,"byte_end":7268,"line_start":178,"line_end":178,"column_start":31,"column_end":41},"alias_span":null,"name":"DataShared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":481},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7270,"byte_end":7277,"line_start":178,"line_end":178,"column_start":43,"column_end":50},"alias_span":null,"name":"RawData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7279,"byte_end":7291,"line_start":178,"line_end":178,"column_start":52,"column_end":64},"alias_span":null,"name":"RawDataClone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7293,"byte_end":7303,"line_start":178,"line_end":178,"column_start":66,"column_end":76},"alias_span":null,"name":"RawDataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":655},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7309,"byte_end":7321,"line_start":179,"line_end":179,"column_start":5,"column_end":17},"alias_span":null,"name":"RawDataSubst","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7378,"byte_end":7379,"line_start":183,"line_end":183,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"arr1, aview_mut1, aview2, arr0, arr2, aview0, aview1","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1006},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7407,"byte_end":7411,"line_start":184,"line_end":184,"column_start":27,"column_end":31},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5739},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211799,"byte_end":211803,"line_start":9,"line_end":9,"column_start":27,"column_end":31},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":4311},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211830,"byte_end":211837,"line_start":10,"line_end":10,"column_start":26,"column_end":33},"alias_span":null,"name":"Indices","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":4304},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211839,"byte_end":211850,"line_start":10,"line_end":10,"column_start":35,"column_end":46},"alias_span":null,"name":"IndicesIter","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1546},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211885,"byte_end":211899,"line_start":12,"line_end":12,"column_start":5,"column_end":19},"alias_span":null,"name":"AxisChunksIter","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1563},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211901,"byte_end":211918,"line_start":12,"line_end":12,"column_start":21,"column_end":38},"alias_span":null,"name":"AxisChunksIterMut","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":4538},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211920,"byte_end":211928,"line_start":12,"line_end":12,"column_start":40,"column_end":48},"alias_span":null,"name":"AxisIter","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211930,"byte_end":211941,"line_start":12,"line_end":12,"column_start":50,"column_end":61},"alias_span":null,"name":"AxisIterMut","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":900},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211943,"byte_end":211954,"line_start":12,"line_end":12,"column_start":63,"column_end":74},"alias_span":null,"name":"ExactChunks","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211956,"byte_end":211971,"line_start":12,"line_end":12,"column_start":76,"column_end":91},"alias_span":null,"name":"ExactChunksIter","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":947},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211977,"byte_end":211995,"line_start":13,"line_end":13,"column_start":5,"column_end":23},"alias_span":null,"name":"ExactChunksIterMut","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":927},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211997,"byte_end":212011,"line_start":13,"line_end":13,"column_start":25,"column_end":39},"alias_span":null,"name":"ExactChunksMut","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":4505},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212013,"byte_end":212024,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":4506},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212013,"byte_end":212024,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":1020}},{"kind":"Use","ref_id":{"krate":0,"index":1244},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212026,"byte_end":212040,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212026,"byte_end":212040,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":1021}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212042,"byte_end":212046,"line_start":13,"line_end":13,"column_start":70,"column_end":74},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1228},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212048,"byte_end":212055,"line_start":13,"line_end":13,"column_start":76,"column_end":83},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1037},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212057,"byte_end":212062,"line_start":13,"line_end":13,"column_start":85,"column_end":90},"alias_span":null,"name":"Lanes","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212068,"byte_end":212077,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"alias_span":null,"name":"LanesIter","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1409},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212079,"byte_end":212091,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"alias_span":null,"name":"LanesIterMut","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1057},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212093,"byte_end":212101,"line_start":14,"line_end":14,"column_start":30,"column_end":38},"alias_span":null,"name":"LanesMut","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":212103,"byte_end":212110,"line_start":14,"line_end":14,"column_start":40,"column_end":47},"alias_span":null,"name":"Windows","value":"","parent":{"krate":0,"index":1006}},{"kind":"Use","ref_id":{"krate":0,"index":5739},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/mod.rs","byte_start":342660,"byte_end":342664,"line_start":15,"line_end":15,"column_start":22,"column_end":26},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":2325}},{"kind":"Use","ref_id":{"krate":0,"index":6234},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/mod.rs","byte_start":342876,"byte_end":342885,"line_start":21,"line_end":21,"column_start":29,"column_end":38},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":2325}},{"kind":"Use","ref_id":{"krate":0,"index":2791},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/mod.rs","byte_start":342910,"byte_end":342917,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":2325}},{"kind":"Use","ref_id":{"krate":0,"index":5723},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7750,"byte_end":7759,"line_start":210,"line_end":210,"column_start":22,"column_end":31},"alias_span":null,"name":"FoldWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2069},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7761,"byte_end":7775,"line_start":210,"line_end":210,"column_start":33,"column_end":47},"alias_span":null,"name":"IntoNdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2080},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7777,"byte_end":7787,"line_start":210,"line_end":210,"column_start":49,"column_end":59},"alias_span":null,"name":"NdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5151},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7789,"byte_end":7792,"line_start":210,"line_end":210,"column_start":61,"column_end":64},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4705},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":7819,"byte_end":7825,"line_start":212,"line_end":212,"column_start":24,"column_end":30},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3102},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458428,"byte_end":458436,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"alias_span":null,"name":"ArcArray","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":3105},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458438,"byte_end":458443,"line_start":22,"line_end":22,"column_start":15,"column_end":20},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":3095},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458445,"byte_end":458454,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"alias_span":null,"name":"ArrayBase","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":3112},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458456,"byte_end":458465,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"alias_span":null,"name":"ArrayView","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":3116},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458467,"byte_end":458479,"line_start":22,"line_end":22,"column_start":44,"column_end":56},"alias_span":null,"name":"ArrayViewMut","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":3108},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458481,"byte_end":458489,"line_start":22,"line_end":22,"column_start":58,"column_end":66},"alias_span":null,"name":"CowArray","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":3120},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458491,"byte_end":458503,"line_start":22,"line_end":22,"column_start":68,"column_end":80},"alias_span":null,"name":"RawArrayView","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":3123},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458505,"byte_end":458520,"line_start":22,"line_end":22,"column_start":82,"column_end":97},"alias_span":null,"name":"RawArrayViewMut","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":5766},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458560,"byte_end":458564,"line_start":26,"line_end":26,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":5767},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458560,"byte_end":458564,"line_start":26,"line_end":26,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":3038}},{"kind":"Use","ref_id":{"krate":0,"index":6079},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458566,"byte_end":458569,"line_start":26,"line_end":26,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":2469},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458566,"byte_end":458569,"line_start":26,"line_end":26,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":3039}},{"kind":"Use","ref_id":{"krate":0,"index":2533},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458571,"byte_end":458580,"line_start":26,"line_end":26,"column_start":28,"column_end":37},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458618,"byte_end":458624,"line_start":29,"line_end":29,"column_start":17,"column_end":23},"alias_span":null,"name":"Array0","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458626,"byte_end":458632,"line_start":29,"line_end":29,"column_start":25,"column_end":31},"alias_span":null,"name":"Array1","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458634,"byte_end":458640,"line_start":29,"line_end":29,"column_start":33,"column_end":39},"alias_span":null,"name":"Array2","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458642,"byte_end":458648,"line_start":29,"line_end":29,"column_start":41,"column_end":47},"alias_span":null,"name":"Array3","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":105},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458650,"byte_end":458656,"line_start":29,"line_end":29,"column_start":49,"column_end":55},"alias_span":null,"name":"Array4","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":107},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458658,"byte_end":458664,"line_start":29,"line_end":29,"column_start":57,"column_end":63},"alias_span":null,"name":"Array5","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":109},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458666,"byte_end":458672,"line_start":29,"line_end":29,"column_start":65,"column_end":71},"alias_span":null,"name":"Array6","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458674,"byte_end":458680,"line_start":29,"line_end":29,"column_start":73,"column_end":79},"alias_span":null,"name":"ArrayD","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458723,"byte_end":458733,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"alias_span":null,"name":"ArrayView0","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458735,"byte_end":458745,"line_start":33,"line_end":33,"column_start":17,"column_end":27},"alias_span":null,"name":"ArrayView1","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458747,"byte_end":458757,"line_start":33,"line_end":33,"column_start":29,"column_end":39},"alias_span":null,"name":"ArrayView2","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458759,"byte_end":458769,"line_start":33,"line_end":33,"column_start":41,"column_end":51},"alias_span":null,"name":"ArrayView3","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458771,"byte_end":458781,"line_start":33,"line_end":33,"column_start":53,"column_end":63},"alias_span":null,"name":"ArrayView4","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458783,"byte_end":458793,"line_start":33,"line_end":33,"column_start":65,"column_end":75},"alias_span":null,"name":"ArrayView5","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458795,"byte_end":458805,"line_start":33,"line_end":33,"column_start":77,"column_end":87},"alias_span":null,"name":"ArrayView6","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458807,"byte_end":458817,"line_start":33,"line_end":33,"column_start":89,"column_end":99},"alias_span":null,"name":"ArrayViewD","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458862,"byte_end":458875,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut0","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458877,"byte_end":458890,"line_start":38,"line_end":38,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMut1","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458892,"byte_end":458905,"line_start":38,"line_end":38,"column_start":35,"column_end":48},"alias_span":null,"name":"ArrayViewMut2","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458907,"byte_end":458920,"line_start":38,"line_end":38,"column_start":50,"column_end":63},"alias_span":null,"name":"ArrayViewMut3","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":149},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458922,"byte_end":458935,"line_start":38,"line_end":38,"column_start":65,"column_end":78},"alias_span":null,"name":"ArrayViewMut4","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458937,"byte_end":458950,"line_start":38,"line_end":38,"column_start":80,"column_end":93},"alias_span":null,"name":"ArrayViewMut5","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458956,"byte_end":458969,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut6","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458971,"byte_end":458984,"line_start":39,"line_end":39,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMutD","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459024,"byte_end":459027,"line_start":43,"line_end":43,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459024,"byte_end":459027,"line_start":43,"line_end":43,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":3069}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459029,"byte_end":459032,"line_start":43,"line_end":43,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459029,"byte_end":459032,"line_start":43,"line_end":43,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":3070}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459034,"byte_end":459037,"line_start":43,"line_end":43,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459034,"byte_end":459037,"line_start":43,"line_end":43,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":3071}},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459039,"byte_end":459042,"line_start":43,"line_end":43,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459039,"byte_end":459042,"line_start":43,"line_end":43,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":3072}},{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459044,"byte_end":459047,"line_start":43,"line_end":43,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459044,"byte_end":459047,"line_start":43,"line_end":43,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":3073}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459049,"byte_end":459052,"line_start":43,"line_end":43,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459049,"byte_end":459052,"line_start":43,"line_end":43,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":3074}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459054,"byte_end":459057,"line_start":43,"line_end":43,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459054,"byte_end":459057,"line_start":43,"line_end":43,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":3075}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459059,"byte_end":459064,"line_start":43,"line_end":43,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459059,"byte_end":459064,"line_start":43,"line_end":43,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":3076}},{"kind":"Use","ref_id":{"krate":0,"index":720},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459102,"byte_end":459106,"line_start":46,"line_end":46,"column_start":17,"column_end":21},"alias_span":null,"name":"arr0","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459108,"byte_end":459112,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"alias_span":null,"name":"arr1","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":743},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459114,"byte_end":459118,"line_start":46,"line_end":46,"column_start":29,"column_end":33},"alias_span":null,"name":"arr2","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459120,"byte_end":459126,"line_start":46,"line_end":46,"column_start":35,"column_end":41},"alias_span":null,"name":"aview0","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":728},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459128,"byte_end":459134,"line_start":46,"line_end":46,"column_start":43,"column_end":49},"alias_span":null,"name":"aview1","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459136,"byte_end":459142,"line_start":46,"line_end":46,"column_start":51,"column_end":57},"alias_span":null,"name":"aview2","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":733},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459144,"byte_end":459154,"line_start":46,"line_end":46,"column_start":59,"column_end":69},"alias_span":null,"name":"aview_mut1","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459174,"byte_end":459179,"line_start":48,"line_end":48,"column_start":17,"column_end":22},"alias_span":null,"name":"array","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":2063},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459181,"byte_end":459185,"line_start":48,"line_end":48,"column_start":24,"column_end":28},"alias_span":null,"name":"azip","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":1982},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459187,"byte_end":459188,"line_start":48,"line_end":48,"column_start":30,"column_end":31},"alias_span":null,"name":"s","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":1807},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459225,"byte_end":459237,"line_start":51,"line_end":51,"column_start":16,"column_end":28},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":4800},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459273,"byte_end":459280,"line_start":54,"line_end":54,"column_start":16,"column_end":23},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":4801},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459273,"byte_end":459280,"line_start":54,"line_end":54,"column_start":16,"column_end":23},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":3090}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459316,"byte_end":459323,"line_start":57,"line_end":57,"column_start":16,"column_end":23},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":459383,"byte_end":459390,"line_start":61,"line_end":61,"column_start":16,"column_end":23},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":3027}},{"kind":"Use","ref_id":{"krate":0,"index":4163},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50888,"byte_end":50897,"line_start":1421,"line_end":1421,"column_start":20,"column_end":29},"alias_span":null,"name":"OwnedRepr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3795},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/mod.rs","byte_start":639876,"byte_end":639891,"line_start":11,"line_end":11,"column_start":28,"column_end":43},"alias_span":null,"name":"general_mat_mul","value":"","parent":{"krate":0,"index":3721}},{"kind":"Use","ref_id":{"krate":0,"index":3800},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/mod.rs","byte_start":639920,"byte_end":639939,"line_start":12,"line_end":12,"column_start":28,"column_end":47},"alias_span":null,"name":"general_mat_vec_mul","value":"","parent":{"krate":0,"index":3721}},{"kind":"Use","ref_id":{"krate":0,"index":3748},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/mod.rs","byte_start":639968,"byte_end":639971,"line_start":13,"line_end":13,"column_start":28,"column_end":31},"alias_span":null,"name":"Dot","value":"","parent":{"krate":0,"index":3721}},{"kind":"Use","ref_id":{"krate":0,"index":3811},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/mod.rs","byte_start":640000,"byte_end":640004,"line_start":14,"line_end":14,"column_start":28,"column_end":32},"alias_span":null,"name":"kron","value":"","parent":{"krate":0,"index":3721}},{"kind":"Use","ref_id":{"krate":0,"index":3830},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":55051,"byte_end":55064,"line_start":1587,"line_end":1587,"column_start":26,"column_end":39},"alias_span":null,"name":"ScalarOperand","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":356,"byte_end":55428,"line_start":8,"line_end":1604,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8759},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":8763},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":8793},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":165},{"krate":0,"index":173},{"krate":0,"index":196},{"krate":0,"index":265},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":462},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":788},{"krate":0,"index":796},{"krate":0,"index":817},{"krate":0,"index":878},{"krate":0,"index":1624},{"krate":0,"index":1648},{"krate":0,"index":1672},{"krate":0,"index":1694},{"krate":0,"index":1716},{"krate":0,"index":1756},{"krate":0,"index":1768},{"krate":0,"index":1777},{"krate":0,"index":1792},{"krate":0,"index":1852},{"krate":0,"index":2010},{"krate":0,"index":2030},{"krate":0,"index":2053},{"krate":0,"index":2061},{"krate":0,"index":2325},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3027},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3102},{"krate":0,"index":3105},{"krate":0,"index":3108},{"krate":0,"index":3112},{"krate":0,"index":3116},{"krate":0,"index":3120},{"krate":0,"index":3123},{"krate":0,"index":3126},{"krate":0,"index":6564},{"krate":0,"index":6568},{"krate":0,"index":3127},{"krate":0,"index":6571},{"krate":0,"index":6577},{"krate":0,"index":6574},{"krate":0,"index":3130},{"krate":0,"index":6579},{"krate":0,"index":6585},{"krate":0,"index":6582},{"krate":0,"index":3133},{"krate":0,"index":3136},{"krate":0,"index":3145},{"krate":0,"index":3150},{"krate":0,"index":3161},{"krate":0,"index":3174},{"krate":0,"index":3261},{"krate":0,"index":3568},{"krate":0,"index":3637},{"krate":0,"index":3646},{"krate":0,"index":3659},{"krate":0,"index":3669},{"krate":0,"index":3681},{"krate":0,"index":3688},{"krate":0,"index":3721},{"krate":0,"index":3826},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":4076},{"krate":0,"index":4124},{"krate":0,"index":4153}],"decl_id":null,"docs":" The `ndarray` crate provides an *n*-dimensional container for general elements\n and for numerics.","sig":null,"attributes":[{"value":"crate_name = \"ndarray\"","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":356,"byte_end":382,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"allow(clippy :: many_single_char_names, clippy :: deref_addrof, clippy ::\n        unreadable_literal, clippy :: manual_map, clippy ::\n        while_let_on_iterator, clippy :: from_iter_instead_of_collect, clippy\n        :: redundant_closure,)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":527,"byte_end":868,"line_start":11,"line_end":19,"column_start":1,"column_end":3}},{"value":"/ The `ndarray` crate provides an *n*-dimensional container for general elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1033,"byte_end":1115,"line_start":25,"line_end":25,"column_start":1,"column_end":83}},{"value":"/ and for numerics.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1116,"byte_end":1137,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1138,"byte_end":1141,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include, for example, 1-dimensional rows or columns,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1142,"byte_end":1220,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1221,"byte_end":1300,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element in the array is accessed by using that many indices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1301,"byte_end":1385,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/ Each dimension is also called an *axis*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1386,"byte_end":1430,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1431,"byte_end":1434,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - **[`ArrayBase`]**:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1435,"byte_end":1459,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/   The *n*-dimensional array type itself.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1460,"byte_end":1508,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/   It is used to implement both the owned arrays and the views; see its docs","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1509,"byte_end":1588,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/   for an overview of all array features.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1589,"byte_end":1637,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/ - The main specific array type is **[`Array`]**, which owns","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1638,"byte_end":1701,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/ its elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1702,"byte_end":1719,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1720,"byte_end":1723,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Highlights","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1724,"byte_end":1741,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1742,"byte_end":1745,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - Generic *n*-dimensional array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1746,"byte_end":1781,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/ - Slicing, also with arbitrary step size, and negative indices to mean","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1782,"byte_end":1856,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/   elements from the end of the axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1857,"byte_end":1897,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ - Views and subviews of arrays; iterators that yield subviews.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1898,"byte_end":1964,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ - Higher order operations and arithmetic are performant","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":1965,"byte_end":2024,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/ - Array views can be used to slice and mutate any `[T]` data using","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2025,"byte_end":2095,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/   `ArrayView::from` and `ArrayViewMut::from`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2096,"byte_end":2145,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/ - [`Zip`] for lock step function application across two or more arrays or other","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2146,"byte_end":2229,"line_start":49,"line_end":49,"column_start":1,"column_end":84}},{"value":"/   item producers ([`NdProducer`] trait).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2230,"byte_end":2274,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2275,"byte_end":2278,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Crate Status","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2279,"byte_end":2298,"line_start":52,"line_end":52,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2299,"byte_end":2302,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ - Still iterating on and evolving the crate","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2303,"byte_end":2350,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/   + The crate is continuously developing, and breaking changes are expected","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2351,"byte_end":2430,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/     during evolution from version to version. We adopt the newest stable","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2431,"byte_end":2507,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/     rust features if we need them.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2508,"byte_end":2546,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/   + Note that functions/methods/traits/etc. hidden from the docs are not","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2547,"byte_end":2623,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/     considered part of the public API, so changes to them are not","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2624,"byte_end":2693,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/     considered breaking changes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2694,"byte_end":2730,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/ - Performance:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2731,"byte_end":2749,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/   + Prefer higher order methods and arithmetic operations on arrays first,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2750,"byte_end":2828,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/     then iteration, and as a last priority using indexed algorithms.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2829,"byte_end":2901,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/   + The higher order functions like [`.map()`](ArrayBase::map),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2902,"byte_end":2969,"line_start":64,"line_end":64,"column_start":1,"column_end":68}},{"value":"/     [`.map_inplace()`](ArrayBase::map_inplace), [`.zip_mut_with()`](ArrayBase::zip_mut_with),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":2970,"byte_end":3067,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/     [`Zip`] and [`azip!()`](azip) are the most efficient ways","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3068,"byte_end":3133,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/     to perform single traversal and lock step traversal respectively.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3134,"byte_end":3207,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/   + Performance of an operation depends on the memory layout of the array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3208,"byte_end":3285,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/     or array view. Especially if it's a binary operation, which","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3286,"byte_end":3353,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/     needs matching memory layout to be efficient (with some exceptions).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3354,"byte_end":3430,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/   + Efficient floating point matrix multiplication even for very large","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3431,"byte_end":3505,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/     matrices; can optionally use BLAS to improve it further.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3506,"byte_end":3570,"line_start":72,"line_end":72,"column_start":1,"column_end":65}},{"value":"/ - **Requires Rust 1.49 or later**","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3571,"byte_end":3608,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3609,"byte_end":3612,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3613,"byte_end":3639,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3640,"byte_end":3643,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The following crate feature flags are available. They are configured in your","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3644,"byte_end":3724,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ `Cargo.toml`. See [`doc::crate_feature_flags`] for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3725,"byte_end":3797,"line_start":78,"line_end":78,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3798,"byte_end":3801,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - `std`: Rust standard library-using functionality (enabled by default)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3802,"byte_end":3877,"line_start":80,"line_end":80,"column_start":1,"column_end":76}},{"value":"/ - `serde`: serialization support for serde 1.x","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3878,"byte_end":3928,"line_start":81,"line_end":81,"column_start":1,"column_end":51}},{"value":"/ - `rayon`: Parallel iterators, parallelized methods, the [`parallel`] module and [`par_azip!`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":3929,"byte_end":4028,"line_start":82,"line_end":82,"column_start":1,"column_end":100}},{"value":"/ - `approx` Implementations of traits from version 0.4 of the [`approx`] crate.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4029,"byte_end":4111,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ - `approx-0_5`: Implementations of traits from version 0.5 of the [`approx`] crate.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4112,"byte_end":4199,"line_start":84,"line_end":84,"column_start":1,"column_end":88}},{"value":"/ - `blas`: transparent BLAS support for matrix multiplication, needs configuration.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4200,"byte_end":4286,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/ - `matrixmultiply-threading`: Use threading from `matrixmultiply`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4287,"byte_end":4357,"line_start":86,"line_end":86,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4358,"byte_end":4361,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ## Documentation","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4362,"byte_end":4382,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4383,"byte_end":4386,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ * The docs for [`ArrayBase`] provide an overview of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4387,"byte_end":4442,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/   the *n*-dimensional array type. Other good pages to look at are the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4443,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/   documentation for the [`s![]`](s!) and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4517,"byte_end":4561,"line_start":92,"line_end":92,"column_start":1,"column_end":45}},{"value":"/   [`azip!()`](azip!) macros.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4562,"byte_end":4594,"line_start":93,"line_end":93,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4595,"byte_end":4598,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ * If you have experience with NumPy, you may also be interested in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4599,"byte_end":4669,"line_start":95,"line_end":95,"column_start":1,"column_end":71}},{"value":"/   [`ndarray_for_numpy_users`](doc::ndarray_for_numpy_users).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4670,"byte_end":4734,"line_start":96,"line_end":96,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4735,"byte_end":4738,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ## The ndarray ecosystem","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4739,"byte_end":4767,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4768,"byte_end":4771,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ `ndarray` provides a lot of functionality, but it's not a one-stop solution.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4772,"byte_end":4852,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4853,"byte_end":4856,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ `ndarray` includes matrix multiplication and other binary/unary operations out of the box.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4857,"byte_end":4951,"line_start":102,"line_end":102,"column_start":1,"column_end":95}},{"value":"/ More advanced linear algebra routines (e.g. SVD decomposition or eigenvalue computation)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":4952,"byte_end":5044,"line_start":103,"line_end":103,"column_start":1,"column_end":93}},{"value":"/ can be found in [`ndarray-linalg`](https://crates.io/crates/ndarray-linalg).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5045,"byte_end":5125,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5126,"byte_end":5129,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The same holds for statistics: `ndarray` provides some basic functionalities (e.g. `mean`)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5130,"byte_end":5224,"line_start":106,"line_end":106,"column_start":1,"column_end":95}},{"value":"/ but more advanced routines can be found in [`ndarray-stats`](https://crates.io/crates/ndarray-stats).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5225,"byte_end":5330,"line_start":107,"line_end":107,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5331,"byte_end":5334,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ If you are looking to generate random arrays instead, check out [`ndarray-rand`](https://crates.io/crates/ndarray-rand).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5335,"byte_end":5459,"line_start":109,"line_end":109,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5460,"byte_end":5463,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ For conversion between `ndarray`, [`nalgebra`](https://crates.io/crates/nalgebra) and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5464,"byte_end":5553,"line_start":111,"line_end":111,"column_start":1,"column_end":90}},{"value":"/ [`image`](https://crates.io/crates/image) check out [`nshare`](https://crates.io/crates/nshare).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":5554,"byte_end":5654,"line_start":112,"line_end":112,"column_start":1,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":61},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/private.rs","byte_start":57866,"byte_end":57879,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/private.rs","byte_start":57734,"byte_end":57799,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/private.rs","byte_start":57800,"byte_end":57854,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58547,"byte_end":58550,"line_start":10,"line_end":10,"column_start":8,"column_end":11},"name":"Ix0","qualname":"::aliases::Ix0","value":"pub fn Ix0() -> Ix0","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58461,"byte_end":58496,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58497,"byte_end":58521,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58522,"byte_end":58539,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58666,"byte_end":58669,"line_start":16,"line_end":16,"column_start":8,"column_end":11},"name":"Ix1","qualname":"::aliases::Ix1","value":"pub fn Ix1(Ix) -> Ix1","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58581,"byte_end":58615,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58616,"byte_end":58640,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58641,"byte_end":58658,"line_start":15,"line_end":15,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58793,"byte_end":58796,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"Ix2","qualname":"::aliases::Ix2","value":"pub fn Ix2(Ix, Ix) -> Ix2","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a two-dimensional index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58708,"byte_end":58742,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58743,"byte_end":58767,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58768,"byte_end":58785,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58934,"byte_end":58937,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"Ix3","qualname":"::aliases::Ix3","value":"pub fn Ix3(Ix, Ix, Ix) -> Ix3","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58847,"byte_end":58883,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58884,"byte_end":58908,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":58909,"byte_end":58926,"line_start":27,"line_end":27,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59086,"byte_end":59089,"line_start":34,"line_end":34,"column_start":8,"column_end":11},"name":"Ix4","qualname":"::aliases::Ix4","value":"pub fn Ix4(Ix, Ix, Ix, Ix) -> Ix4","parent":null,"children":[],"decl_id":null,"docs":" Create a four-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a four-dimensional index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59000,"byte_end":59035,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59036,"byte_end":59060,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59061,"byte_end":59078,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59250,"byte_end":59253,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"Ix5","qualname":"::aliases::Ix5","value":"pub fn Ix5(Ix, Ix, Ix, Ix, Ix) -> Ix5","parent":null,"children":[],"decl_id":null,"docs":" Create a five-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a five-dimensional index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59164,"byte_end":59199,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59200,"byte_end":59224,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59225,"byte_end":59242,"line_start":39,"line_end":39,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59425,"byte_end":59428,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"Ix6","qualname":"::aliases::Ix6","value":"pub fn Ix6(Ix, Ix, Ix, Ix, Ix, Ix) -> Ix6","parent":null,"children":[],"decl_id":null,"docs":" Create a six-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a six-dimensional index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59340,"byte_end":59374,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59375,"byte_end":59399,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59400,"byte_end":59417,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59617,"byte_end":59622,"line_start":53,"line_end":53,"column_start":8,"column_end":13},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"pub fn IxDyn(&[Ix]) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a dynamic-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a dynamic-dimensional index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59528,"byte_end":59566,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59567,"byte_end":59591,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59592,"byte_end":59609,"line_start":52,"line_end":52,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59691,"byte_end":59694,"line_start":58,"line_end":58,"column_start":10,"column_end":13},"name":"Ix0","qualname":"::aliases::Ix0","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensionial\n","sig":null,"attributes":[{"value":"/ zero-dimensionial","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59660,"byte_end":59681,"line_start":57,"line_end":57,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":84},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59740,"byte_end":59743,"line_start":60,"line_end":60,"column_start":10,"column_end":13},"name":"Ix1","qualname":"::aliases::Ix1","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional\n","sig":null,"attributes":[{"value":"/ one-dimensional","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59711,"byte_end":59730,"line_start":59,"line_end":59,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":86},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59789,"byte_end":59792,"line_start":62,"line_end":62,"column_start":10,"column_end":13},"name":"Ix2","qualname":"::aliases::Ix2","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional\n","sig":null,"attributes":[{"value":"/ two-dimensional","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59760,"byte_end":59779,"line_start":61,"line_end":61,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":88},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59840,"byte_end":59843,"line_start":64,"line_end":64,"column_start":10,"column_end":13},"name":"Ix3","qualname":"::aliases::Ix3","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional\n","sig":null,"attributes":[{"value":"/ three-dimensional","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59809,"byte_end":59830,"line_start":63,"line_end":63,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":90},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59890,"byte_end":59893,"line_start":66,"line_end":66,"column_start":10,"column_end":13},"name":"Ix4","qualname":"::aliases::Ix4","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional\n","sig":null,"attributes":[{"value":"/ four-dimensional","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59860,"byte_end":59880,"line_start":65,"line_end":65,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59940,"byte_end":59943,"line_start":68,"line_end":68,"column_start":10,"column_end":13},"name":"Ix5","qualname":"::aliases::Ix5","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional\n","sig":null,"attributes":[{"value":"/ five-dimensional","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59910,"byte_end":59930,"line_start":67,"line_end":67,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":94},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59989,"byte_end":59992,"line_start":70,"line_end":70,"column_start":10,"column_end":13},"name":"Ix6","qualname":"::aliases::Ix6","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional\n","sig":null,"attributes":[{"value":"/ six-dimensional","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":59960,"byte_end":59979,"line_start":69,"line_end":69,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61061,"byte_end":61066,"line_start":99,"line_end":99,"column_start":10,"column_end":15},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"Dim<IxDynImpl>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional","sig":null,"attributes":[{"value":"/ dynamic-dimensional","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60009,"byte_end":60032,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60033,"byte_end":60036,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ You can use the `IxDyn` function to create a dimension for an array with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60037,"byte_end":60113,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/ dynamic number of dimensions.  (`Vec<usize>` and `&[usize]` also implement","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60114,"byte_end":60192,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ `IntoDimension` to produce `IxDyn`).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60193,"byte_end":60233,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60234,"byte_end":60237,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60238,"byte_end":60245,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use ndarray::ArrayD;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60246,"byte_end":60270,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/ use ndarray::IxDyn;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60271,"byte_end":60294,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60295,"byte_end":60298,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Create a 5 × 6 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60299,"byte_end":60370,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ let mut a = ArrayD::<f64>::zeros(IxDyn(&[5, 6, 3, 4]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60371,"byte_end":60430,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"/ // Create a 1 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60431,"byte_end":60497,"line_start":83,"line_end":83,"column_start":1,"column_end":65}},{"value":"/ let mut b = ArrayD::<f64>::zeros(IxDyn(&[1, 3, 4]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60498,"byte_end":60554,"line_start":84,"line_end":84,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60555,"byte_end":60558,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // We can use broadcasting to add arrays of compatible shapes together:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60559,"byte_end":60634,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ a += &b;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60635,"byte_end":60647,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60648,"byte_end":60651,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // We can index into a, b using fixed size arrays:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60652,"byte_end":60706,"line_start":89,"line_end":89,"column_start":1,"column_end":55}},{"value":"/ a[[0, 0, 0, 0]] = 0.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60707,"byte_end":60732,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/ b[[0, 2, 3]] = a[[0, 0, 2, 3]];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60733,"byte_end":60768,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/ // Note: indexing will panic at runtime if the number of indices given does","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60769,"byte_end":60848,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ // not match the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60849,"byte_end":60876,"line_start":93,"line_end":93,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60877,"byte_end":60880,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // We can keep them in the same vector because both the arrays have","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60881,"byte_end":60952,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/ // the same type `Array<f64, IxDyn>` a.k.a `ArrayD<f64>`:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":60953,"byte_end":61014,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/ let arrays = vec![a, b];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61015,"byte_end":61043,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61044,"byte_end":61051,"line_start":98,"line_end":98,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61122,"byte_end":61128,"line_start":102,"line_end":102,"column_start":10,"column_end":16},"name":"Array0","qualname":"::aliases::Array0","value":"Array<A, Ix0>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array\n","sig":null,"attributes":[{"value":"/ zero-dimensional array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61086,"byte_end":61112,"line_start":101,"line_end":101,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61184,"byte_end":61190,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Array1","qualname":"::aliases::Array1","value":"Array<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array\n","sig":null,"attributes":[{"value":"/ one-dimensional array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61149,"byte_end":61174,"line_start":103,"line_end":103,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":101},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61246,"byte_end":61252,"line_start":106,"line_end":106,"column_start":10,"column_end":16},"name":"Array2","qualname":"::aliases::Array2","value":"Array<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array\n","sig":null,"attributes":[{"value":"/ two-dimensional array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61211,"byte_end":61236,"line_start":105,"line_end":105,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":103},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61310,"byte_end":61316,"line_start":108,"line_end":108,"column_start":10,"column_end":16},"name":"Array3","qualname":"::aliases::Array3","value":"Array<A, Ix3>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array\n","sig":null,"attributes":[{"value":"/ three-dimensional array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61273,"byte_end":61300,"line_start":107,"line_end":107,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":105},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61373,"byte_end":61379,"line_start":110,"line_end":110,"column_start":10,"column_end":16},"name":"Array4","qualname":"::aliases::Array4","value":"Array<A, Ix4>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array\n","sig":null,"attributes":[{"value":"/ four-dimensional array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61337,"byte_end":61363,"line_start":109,"line_end":109,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":107},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61436,"byte_end":61442,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"Array5","qualname":"::aliases::Array5","value":"Array<A, Ix5>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array\n","sig":null,"attributes":[{"value":"/ five-dimensional array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61400,"byte_end":61426,"line_start":111,"line_end":111,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":109},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61498,"byte_end":61504,"line_start":114,"line_end":114,"column_start":10,"column_end":16},"name":"Array6","qualname":"::aliases::Array6","value":"Array<A, Ix6>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array\n","sig":null,"attributes":[{"value":"/ six-dimensional array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61463,"byte_end":61488,"line_start":113,"line_end":113,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":111},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61564,"byte_end":61570,"line_start":116,"line_end":116,"column_start":10,"column_end":16},"name":"ArrayD","qualname":"::aliases::ArrayD","value":"Array<A, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61525,"byte_end":61554,"line_start":115,"line_end":115,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":113},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61635,"byte_end":61645,"line_start":119,"line_end":119,"column_start":10,"column_end":20},"name":"ArrayView0","qualname":"::aliases::ArrayView0","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61594,"byte_end":61625,"line_start":118,"line_end":118,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":116},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61718,"byte_end":61728,"line_start":121,"line_end":121,"column_start":10,"column_end":20},"name":"ArrayView1","qualname":"::aliases::ArrayView1","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array view\n","sig":null,"attributes":[{"value":"/ one-dimensional array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61678,"byte_end":61708,"line_start":120,"line_end":120,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61801,"byte_end":61811,"line_start":123,"line_end":123,"column_start":10,"column_end":20},"name":"ArrayView2","qualname":"::aliases::ArrayView2","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array view\n","sig":null,"attributes":[{"value":"/ two-dimensional array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61761,"byte_end":61791,"line_start":122,"line_end":122,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":122},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61886,"byte_end":61896,"line_start":125,"line_end":125,"column_start":10,"column_end":20},"name":"ArrayView3","qualname":"::aliases::ArrayView3","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array view\n","sig":null,"attributes":[{"value":"/ three-dimensional array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61844,"byte_end":61876,"line_start":124,"line_end":124,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":125},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61970,"byte_end":61980,"line_start":127,"line_end":127,"column_start":10,"column_end":20},"name":"ArrayView4","qualname":"::aliases::ArrayView4","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array view\n","sig":null,"attributes":[{"value":"/ four-dimensional array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":61929,"byte_end":61960,"line_start":126,"line_end":126,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":128},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62054,"byte_end":62064,"line_start":129,"line_end":129,"column_start":10,"column_end":20},"name":"ArrayView5","qualname":"::aliases::ArrayView5","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array view\n","sig":null,"attributes":[{"value":"/ five-dimensional array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62013,"byte_end":62044,"line_start":128,"line_end":128,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":131},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62137,"byte_end":62147,"line_start":131,"line_end":131,"column_start":10,"column_end":20},"name":"ArrayView6","qualname":"::aliases::ArrayView6","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array view\n","sig":null,"attributes":[{"value":"/ six-dimensional array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62097,"byte_end":62127,"line_start":130,"line_end":130,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":134},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62224,"byte_end":62234,"line_start":133,"line_end":133,"column_start":10,"column_end":20},"name":"ArrayViewD","qualname":"::aliases::ArrayViewD","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62180,"byte_end":62214,"line_start":132,"line_end":132,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":137},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62322,"byte_end":62335,"line_start":136,"line_end":136,"column_start":10,"column_end":23},"name":"ArrayViewMut0","qualname":"::aliases::ArrayViewMut0","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional read-write array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62270,"byte_end":62312,"line_start":135,"line_end":135,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":140},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62422,"byte_end":62435,"line_start":138,"line_end":138,"column_start":10,"column_end":23},"name":"ArrayViewMut1","qualname":"::aliases::ArrayViewMut1","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ one-dimensional read-write array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62371,"byte_end":62412,"line_start":137,"line_end":137,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":143},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62522,"byte_end":62535,"line_start":140,"line_end":140,"column_start":10,"column_end":23},"name":"ArrayViewMut2","qualname":"::aliases::ArrayViewMut2","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ two-dimensional read-write array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62471,"byte_end":62512,"line_start":139,"line_end":139,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":146},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62624,"byte_end":62637,"line_start":142,"line_end":142,"column_start":10,"column_end":23},"name":"ArrayViewMut3","qualname":"::aliases::ArrayViewMut3","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ three-dimensional read-write array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62571,"byte_end":62614,"line_start":141,"line_end":141,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":149},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62725,"byte_end":62738,"line_start":144,"line_end":144,"column_start":10,"column_end":23},"name":"ArrayViewMut4","qualname":"::aliases::ArrayViewMut4","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ four-dimensional read-write array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62673,"byte_end":62715,"line_start":143,"line_end":143,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":152},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62826,"byte_end":62839,"line_start":146,"line_end":146,"column_start":10,"column_end":23},"name":"ArrayViewMut5","qualname":"::aliases::ArrayViewMut5","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ five-dimensional read-write array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62774,"byte_end":62816,"line_start":145,"line_end":145,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":155},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62926,"byte_end":62939,"line_start":148,"line_end":148,"column_start":10,"column_end":23},"name":"ArrayViewMut6","qualname":"::aliases::ArrayViewMut6","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ six-dimensional read-write array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62875,"byte_end":62916,"line_start":147,"line_end":147,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":158},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":63030,"byte_end":63043,"line_start":150,"line_end":150,"column_start":10,"column_end":23},"name":"ArrayViewMutD","qualname":"::aliases::ArrayViewMutD","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional read-write array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":62975,"byte_end":63020,"line_start":149,"line_end":149,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":63134,"byte_end":63143,"line_start":153,"line_end":153,"column_start":10,"column_end":19},"name":"ArcArray1","qualname":"::aliases::ArcArray1","value":"ArcArray<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ one-dimensional shared ownership array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":63082,"byte_end":63124,"line_start":152,"line_end":152,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":163},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":63219,"byte_end":63228,"line_start":155,"line_end":155,"column_start":10,"column_end":19},"name":"ArcArray2","qualname":"::aliases::ArcArray2","value":"ArcArray<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ two-dimensional shared ownership array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/aliases.rs","byte_start":63167,"byte_end":63209,"line_start":154,"line_end":154,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/argument_traits.rs","byte_start":67069,"byte_end":67079,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"AssignElem","qualname":"::argument_traits::AssignElem","value":"AssignElem<T>","parent":null,"children":[{"krate":0,"index":179}],"decl_id":null,"docs":" A producer element that can be assigned to once\n","sig":null,"attributes":[{"value":"/ A producer element that can be assigned to once","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/argument_traits.rs","byte_start":67007,"byte_end":67058,"line_start":6,"line_end":6,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/argument_traits.rs","byte_start":67162,"byte_end":67173,"line_start":9,"line_end":9,"column_start":8,"column_end":19},"name":"assign_elem","qualname":"::argument_traits::AssignElem::assign_elem","value":"pub fn assign_elem(Self, T)","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Assign the value `input` to the element that self represents.\n","sig":null,"attributes":[{"value":"/ Assign the value `input` to the element that self represents.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/argument_traits.rs","byte_start":67089,"byte_end":67154,"line_start":8,"line_end":8,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":408},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101043,"byte_end":101050,"line_start":400,"line_end":400,"column_start":11,"column_end":18},"name":"AsArray","qualname":"::arraytraits::AsArray","value":"AsArray<'a, A: 'a, D = Ix1>: Into<ArrayView>","parent":null,"children":[],"decl_id":null,"docs":" Argument conversion into an array view","sig":null,"attributes":[{"value":"/ Argument conversion into an array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100561,"byte_end":100603,"line_start":379,"line_end":379,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100604,"byte_end":100607,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ The trait is parameterized over `A`, the element type, and `D`, the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100608,"byte_end":100679,"line_start":381,"line_end":381,"column_start":1,"column_end":72}},{"value":"/ dimensionality of the array. `D` defaults to one-dimensional.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100680,"byte_end":100745,"line_start":382,"line_end":382,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100746,"byte_end":100749,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ Use `.into()` to do the conversion.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100750,"byte_end":100789,"line_start":384,"line_end":384,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100790,"byte_end":100793,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100794,"byte_end":100801,"line_start":386,"line_end":386,"column_start":1,"column_end":8}},{"value":"/ use ndarray::AsArray;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100802,"byte_end":100827,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100828,"byte_end":100831,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ fn sum<'a, V: AsArray<'a, f64>>(data: V) -> f64 {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100832,"byte_end":100885,"line_start":389,"line_end":389,"column_start":1,"column_end":54}},{"value":"/     let array_view = data.into();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100886,"byte_end":100923,"line_start":390,"line_end":390,"column_start":1,"column_end":38}},{"value":"/     array_view.sum()","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100924,"byte_end":100948,"line_start":391,"line_end":391,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100949,"byte_end":100954,"line_start":392,"line_end":392,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100955,"byte_end":100958,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100959,"byte_end":100974,"line_start":394,"line_end":394,"column_start":1,"column_end":16}},{"value":"/     sum(&[1., 2., 3.]),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100975,"byte_end":101002,"line_start":395,"line_end":395,"column_start":1,"column_end":28}},{"value":"/     6.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101003,"byte_end":101013,"line_start":396,"line_end":396,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101014,"byte_end":101020,"line_start":397,"line_end":397,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101021,"byte_end":101024,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101025,"byte_end":101032,"line_start":399,"line_end":399,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4163},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":102615,"byte_end":102624,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"OwnedRepr","qualname":"::data_repr::OwnedRepr","value":"OwnedRepr {  }","parent":null,"children":[{"krate":0,"index":4165},{"krate":0,"index":4166},{"krate":0,"index":4167}],"decl_id":null,"docs":" Array's representation.","sig":null,"attributes":[{"value":"/ Array's representation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":102289,"byte_end":102316,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":102317,"byte_end":102320,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":102321,"byte_end":102377,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ [`Array`](crate::Array) for the array type!*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":102378,"byte_end":102426,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"repr(C)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":102593,"byte_end":102603,"line_start":20,"line_end":20,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":481},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108290,"byte_end":108297,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"name":"RawData","qualname":"::data_traits::RawData","value":"RawData: Sized","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":4171}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":107773,"byte_end":107804,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":107805,"byte_end":107808,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For an array that meets the invariants of the `ArrayBase` type. This trait","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":107809,"byte_end":107887,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ does not imply any ownership or lifetime; pointers to elements in the array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":107888,"byte_end":107967,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ may not be safe to dereference.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":107968,"byte_end":108003,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108004,"byte_end":108007,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ***Note:*** `RawData` is not an extension interface at this point.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108008,"byte_end":108078,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ Traits in Rust can serve many different roles. This trait is public because","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108079,"byte_end":108158,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ it is used as a bound on public methods.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108159,"byte_end":108203,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108204,"byte_end":108240,"line_start":32,"line_end":32,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":482},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108348,"byte_end":108352,"line_start":35,"line_end":35,"column_start":10,"column_end":14},"name":"Elem","qualname":"::data_traits::RawData::Elem","value":"type Elem;","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The array element type.\n","sig":null,"attributes":[{"value":"/ The array element type.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108311,"byte_end":108338,"line_start":34,"line_end":34,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108476,"byte_end":108487,"line_start":40,"line_end":40,"column_start":8,"column_end":19},"name":"_data_slice","qualname":"::data_traits::RawData::_data_slice","value":"pub fn _data_slice(&Self) -> Option<&[Self::Elem]>","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Unused\", since = \"0.15.2\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108424,"byte_end":108468,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108548,"byte_end":108568,"line_start":43,"line_end":43,"column_start":8,"column_end":28},"name":"_is_pointer_inbounds","qualname":"::data_traits::RawData::_is_pointer_inbounds","value":"pub fn _is_pointer_inbounds(&Self, *const Self::Elem) -> bool","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":485},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108842,"byte_end":108852,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"name":"RawDataMut","qualname":"::data_traits::RawDataMut","value":"RawDataMut: RawData","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":488}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108634,"byte_end":108665,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108666,"byte_end":108669,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108670,"byte_end":108710,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108711,"byte_end":108714,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108715,"byte_end":108755,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108756,"byte_end":108792,"line_start":53,"line_end":53,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109260,"byte_end":109277,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"try_ensure_unique","qualname":"::data_traits::RawDataMut::try_ensure_unique","value":"pub fn try_ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" If possible, ensures that the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, ensures that the array has unique access to its data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108868,"byte_end":108938,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108943,"byte_end":108946,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The implementer must ensure that if the input is contiguous, then the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108951,"byte_end":109024,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ output has the same strides as input.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109029,"byte_end":109070,"line_start":58,"line_end":58,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109075,"byte_end":109078,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Additionally, if `Self` provides safe mutable access to array elements,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109083,"byte_end":109158,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ then this method **must** panic or ensure that the data is unique.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109163,"byte_end":109233,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109584,"byte_end":109597,"line_start":73,"line_end":73,"column_start":8,"column_end":21},"name":"try_is_unique","qualname":"::data_traits::RawDataMut::try_is_unique","value":"pub fn try_is_unique(&mut Self) -> Option<bool>","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" If possible, returns whether the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, returns whether the array has unique access to its data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109367,"byte_end":109440,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109445,"byte_end":109448,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If `Self` provides safe mutable access to array elements, then it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109453,"byte_end":109522,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ **must** return `Some(_)`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109527,"byte_end":109557,"line_start":71,"line_end":71,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":489},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109844,"byte_end":109856,"line_start":82,"line_end":82,"column_start":18,"column_end":30},"name":"RawDataClone","qualname":"::data_traits::RawDataClone","value":"RawDataClone: RawData","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109629,"byte_end":109660,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109661,"byte_end":109664,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ An array representation that can be cloned.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109665,"byte_end":109712,"line_start":78,"line_end":78,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109713,"byte_end":109716,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109717,"byte_end":109757,"line_start":80,"line_end":80,"column_start":1,"column_end":41}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109758,"byte_end":109794,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109970,"byte_end":109984,"line_start":85,"line_end":85,"column_start":15,"column_end":29},"name":"clone_with_ptr","qualname":"::data_traits::RawDataClone::clone_with_ptr","value":"pub unsafe fn clone_with_ptr(&Self, NonNull<Self::Elem>)\n-> (Self, NonNull<Self::Elem>)","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" Unsafe because, `ptr` must point inside the current storage.\n","sig":null,"attributes":[{"value":"/ Unsafe because, `ptr` must point inside the current storage.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109891,"byte_end":109955,"line_start":84,"line_end":84,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110084,"byte_end":110103,"line_start":88,"line_end":88,"column_start":15,"column_end":34},"name":"clone_from_with_ptr","qualname":"::data_traits::RawDataClone::clone_from_with_ptr","value":"pub unsafe fn clone_from_with_ptr(&mut Self, &Self, NonNull<Self::Elem>)\n-> NonNull<Self::Elem>","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110542,"byte_end":110546,"line_start":105,"line_end":105,"column_start":18,"column_end":22},"name":"Data","qualname":"::data_traits::Data","value":"Data: RawData","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110307,"byte_end":110338,"line_start":99,"line_end":99,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110339,"byte_end":110342,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ For an array with elements that can be accessed with safe code.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110343,"byte_end":110410,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110411,"byte_end":110414,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110415,"byte_end":110455,"line_start":103,"line_end":103,"column_start":1,"column_end":41}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110456,"byte_end":110492,"line_start":104,"line_end":104,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110713,"byte_end":110723,"line_start":109,"line_end":109,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::data_traits::Data::into_owned","value":"pub fn into_owned<D>(ArrayBase<Self, D>) -> Array<Self::Elem, D> where\nSelf::Elem: Clone, D: Dimension","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Converts the array to a uniquely owned array, cloning elements if necessary.\n","sig":null,"attributes":[{"value":"/ Converts the array to a uniquely owned array, cloning elements if necessary.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110562,"byte_end":110642,"line_start":106,"line_end":106,"column_start":5,"column_end":85}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110666,"byte_end":110705,"line_start":108,"line_end":108,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111012,"byte_end":111033,"line_start":117,"line_end":117,"column_start":8,"column_end":29},"name":"try_into_owned_nocopy","qualname":"::data_traits::Data::try_into_owned_nocopy","value":"pub fn try_into_owned_nocopy<D>(ArrayBase<Self, D>)\n-> Result<Array<Self::Elem, D>, ArrayBase<Self, D>> where D: Dimension","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Converts the array into `Array<A, D>` if this is possible without\n cloning the array elements. Otherwise, returns `self_` unchanged.\n","sig":null,"attributes":[{"value":"/ Converts the array into `Array<A, D>` if this is possible without","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110842,"byte_end":110911,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ cloning the array elements. Otherwise, returns `self_` unchanged.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110916,"byte_end":110985,"line_start":115,"line_end":115,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111356,"byte_end":111365,"line_start":127,"line_end":127,"column_start":8,"column_end":17},"name":"to_shared","qualname":"::data_traits::Data::to_shared","value":"pub fn to_shared<D>(&ArrayBase<Self, D>) -> ArcArray<Self::Elem, D> where\nSelf::Elem: Clone, D: Dimension","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Return a shared ownership (copy on write) array based on the existing one,\n cloning elements if necessary.\n","sig":null,"attributes":[{"value":"/ Return a shared ownership (copy on write) array based on the existing one,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111168,"byte_end":111246,"line_start":123,"line_end":123,"column_start":5,"column_end":83}},{"value":"/ cloning elements if necessary.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111251,"byte_end":111285,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111309,"byte_end":111348,"line_start":126,"line_end":126,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":499},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112083,"byte_end":112090,"line_start":150,"line_end":150,"column_start":18,"column_end":25},"name":"DataMut","qualname":"::data_traits::DataMut","value":"DataMut: Data + RawDataMut","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":502}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111564,"byte_end":111595,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111596,"byte_end":111599,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements that can be accessed with safe code.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111600,"byte_end":111676,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111677,"byte_end":111680,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111681,"byte_end":111718,"line_start":141,"line_end":141,"column_start":1,"column_end":38}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":111997,"byte_end":112033,"line_start":149,"line_end":149,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112214,"byte_end":112227,"line_start":154,"line_end":154,"column_start":8,"column_end":21},"name":"ensure_unique","qualname":"::data_traits::DataMut::ensure_unique","value":"pub fn ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":" Ensures that the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Ensures that the array has unique access to its data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112116,"byte_end":112173,"line_start":151,"line_end":151,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112197,"byte_end":112206,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112473,"byte_end":112482,"line_start":165,"line_end":165,"column_start":8,"column_end":17},"name":"is_unique","qualname":"::data_traits::DataMut::is_unique","value":"pub fn is_unique(&mut Self) -> bool","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":" Returns whether the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Returns whether the array has unique access to its data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112372,"byte_end":112432,"line_start":162,"line_end":162,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112456,"byte_end":112465,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":608},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":121560,"byte_end":121569,"line_start":518,"line_end":518,"column_start":18,"column_end":27},"name":"DataOwned","qualname":"::data_traits::DataOwned","value":"DataOwned: Data","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120803,"byte_end":120834,"line_start":505,"line_end":505,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120835,"byte_end":120838,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ A representation that is a unique or shared owner of its data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120839,"byte_end":120905,"line_start":507,"line_end":507,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120906,"byte_end":120909,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120910,"byte_end":120947,"line_start":509,"line_end":509,"column_start":1,"column_end":38}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":121474,"byte_end":121510,"line_start":517,"line_end":517,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":609},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":121646,"byte_end":121657,"line_start":520,"line_end":520,"column_start":10,"column_end":21},"name":"MaybeUninit","qualname":"::data_traits::DataOwned::MaybeUninit","value":"type MaybeUninit: DataOwned<Elem = MaybeUninit<Self::Elem>>\n        + RawDataSubst<Self::Elem, Output=Self>;","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":" Corresponding owned data with MaybeUninit elements\n","sig":null,"attributes":[{"value":"/ Corresponding owned data with MaybeUninit elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":121582,"byte_end":121636,"line_start":519,"line_end":519,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":121776,"byte_end":121779,"line_start":523,"line_end":523,"column_start":8,"column_end":11},"name":"new","qualname":"::data_traits::DataOwned::new","value":"pub fn new(Vec<Self::Elem>) -> Self","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":121957,"byte_end":121968,"line_start":528,"line_end":528,"column_start":8,"column_end":19},"name":"into_shared","qualname":"::data_traits::DataOwned::into_shared","value":"pub fn into_shared(Self) -> OwnedArcRepr<Self::Elem>","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":" Converts the data representation to a shared (copy on write)\n representation, without any copying.\n","sig":null,"attributes":[{"value":"/ Converts the data representation to a shared (copy on write)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":121821,"byte_end":121885,"line_start":525,"line_end":525,"column_start":5,"column_end":69}},{"value":"/ representation, without any copying.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":121890,"byte_end":121930,"line_start":526,"line_end":526,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":612},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122220,"byte_end":122230,"line_start":537,"line_end":537,"column_start":18,"column_end":28},"name":"DataShared","qualname":"::data_traits::DataShared","value":"DataShared: Clone + Data + RawDataClone","parent":null,"children":[],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122007,"byte_end":122038,"line_start":531,"line_end":531,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122039,"byte_end":122042,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ A representation that is a lightweight view.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122043,"byte_end":122091,"line_start":533,"line_end":533,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122092,"byte_end":122095,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122096,"byte_end":122133,"line_start":535,"line_end":535,"column_start":1,"column_end":38}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122134,"byte_end":122170,"line_start":536,"line_end":536,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":655},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126850,"byte_end":126862,"line_start":698,"line_end":698,"column_start":11,"column_end":23},"name":"RawDataSubst","qualname":"::data_traits::RawDataSubst","value":"RawDataSubst<A>: RawData","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126603,"byte_end":126634,"line_start":692,"line_end":692,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126635,"byte_end":126638,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ The RawDataSubst trait maps the element type of array storage, while","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126639,"byte_end":126711,"line_start":694,"line_end":694,"column_start":1,"column_end":73}},{"value":"/ keeping the same kind of storage.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126712,"byte_end":126749,"line_start":695,"line_end":695,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126750,"byte_end":126753,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/ For example, `RawDataSubst<B>` can map the type `OwnedRepr<A>` to `OwnedRepr<B>`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126754,"byte_end":126839,"line_start":697,"line_end":697,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":657},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126968,"byte_end":126974,"line_start":700,"line_end":700,"column_start":10,"column_end":16},"name":"Output","qualname":"::data_traits::RawDataSubst::Output","value":"type Output: RawData<Elem = A>;","parent":{"krate":0,"index":655},"children":[],"decl_id":null,"docs":" The resulting array storage of the same kind but substituted element type\n","sig":null,"attributes":[{"value":"/ The resulting array storage of the same kind but substituted element type","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126881,"byte_end":126958,"line_start":699,"line_end":699,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127218,"byte_end":127228,"line_start":708,"line_end":708,"column_start":15,"column_end":25},"name":"data_subst","qualname":"::data_traits::RawDataSubst::data_subst","value":"pub unsafe fn data_subst(Self) -> Self::Output","parent":{"krate":0,"index":655},"children":[],"decl_id":null,"docs":" Unsafely translate the data representation from one element\n representation to another.","sig":null,"attributes":[{"value":"/ Unsafely translate the data representation from one element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127000,"byte_end":127063,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/ representation to another.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127068,"byte_end":127098,"line_start":703,"line_end":703,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127103,"byte_end":127106,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127111,"byte_end":127124,"line_start":705,"line_end":705,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127129,"byte_end":127132,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ Caller must ensure the two types have the same representation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127137,"byte_end":127203,"line_start":707,"line_end":707,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":720},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130217,"byte_end":130221,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"arr0","qualname":"::free_functions::arr0","value":"pub fn arr0<A>(A) -> Array0<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array with the element `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array with the element `x`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130152,"byte_end":130209,"line_start":52,"line_end":52,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":722},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130380,"byte_end":130384,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"arr1","qualname":"::free_functions::arr1","value":"pub fn arr1<A: Clone>(&[A]) -> Array1<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130313,"byte_end":130372,"line_start":57,"line_end":57,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":724},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130523,"byte_end":130529,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"rcarr1","qualname":"::free_functions::rcarr1","value":"pub fn rcarr1<A: Clone>(&[A]) -> ArcArray1<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130456,"byte_end":130515,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":726},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130661,"byte_end":130667,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"aview0","qualname":"::free_functions::aview0","value":"pub fn aview0<A>(&A) -> ArrayView0<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array view borrowing `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array view borrowing `x`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130598,"byte_end":130653,"line_start":67,"line_end":67,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":728},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":131060,"byte_end":131066,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"aview1","qualname":"::free_functions::aview1","value":"pub fn aview1<A>(&[A]) -> ArrayView1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130755,"byte_end":130824,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130825,"byte_end":130828,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130829,"byte_end":130836,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview1;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130837,"byte_end":130861,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130862,"byte_end":130865,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let data = [1.0; 1024];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130866,"byte_end":130893,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130894,"byte_end":130897,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // Create a 2D array view from borrowed data","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130898,"byte_end":130946,"line_start":79,"line_end":79,"column_start":1,"column_end":49}},{"value":"/ let a2d = aview1(&data).into_shape((32, 32)).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":130947,"byte_end":131005,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":131006,"byte_end":131009,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a2d.sum(), 1024.0);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":131010,"byte_end":131044,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":131045,"byte_end":131052,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":730},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":131335,"byte_end":131341,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"aview2","qualname":"::free_functions::aview2","value":"pub fn aview2<A, V: FixedInitializer<Elem = A>>(&[V]) -> ArrayView2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":131130,"byte_end":131199,"line_start":88,"line_end":88,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":131200,"byte_end":131203,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":131204,"byte_end":131283,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":131284,"byte_end":131327,"line_start":91,"line_end":91,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":733},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132658,"byte_end":132668,"line_start":124,"line_end":124,"column_start":8,"column_end":18},"name":"aview_mut1","qualname":"::free_functions::aview_mut1","value":"pub fn aview_mut1<A>(&mut [A]) -> ArrayViewMut1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132224,"byte_end":132304,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132305,"byte_end":132308,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132309,"byte_end":132316,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{aview_mut1, s};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132317,"byte_end":132350,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/ // Create an array view over some data, then slice it and modify it.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132351,"byte_end":132423,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ let mut data = [0; 1024];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132424,"byte_end":132453,"line_start":117,"line_end":117,"column_start":1,"column_end":30}},{"value":"/ {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132454,"byte_end":132459,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/     let mut a = aview_mut1(&mut data).into_shape((32, 32)).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132460,"byte_end":132532,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"/     a.slice_mut(s![.., ..;3]).fill(5);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132533,"byte_end":132575,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132576,"byte_end":132581,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(&data[..10], [5, 0, 0, 5, 0, 0, 5, 0, 0, 5]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132582,"byte_end":132642,"line_start":122,"line_end":122,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132643,"byte_end":132650,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":735},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133531,"byte_end":133541,"line_start":151,"line_end":151,"column_start":8,"column_end":18},"name":"aview_mut2","qualname":"::free_functions::aview_mut2","value":"pub fn aview_mut2<A, V: FixedInitializer<Elem = A>>(&mut [V])\n-> ArrayViewMut2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132742,"byte_end":132822,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132823,"byte_end":132826,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132827,"byte_end":132906,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132907,"byte_end":132950,"line_start":131,"line_end":131,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132951,"byte_end":132954,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132955,"byte_end":132968,"line_start":133,"line_end":133,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132969,"byte_end":132972,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132973,"byte_end":132980,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview_mut2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":132981,"byte_end":133009,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133010,"byte_end":133013,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // The inner (nested) array must be of length 1 to 16, but the outer","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133014,"byte_end":133086,"line_start":138,"line_end":138,"column_start":1,"column_end":73}},{"value":"/ // can be of any length.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133087,"byte_end":133115,"line_start":139,"line_end":139,"column_start":1,"column_end":29}},{"value":"/ let mut data = [[0.; 2]; 128];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133116,"byte_end":133150,"line_start":140,"line_end":140,"column_start":1,"column_end":35}},{"value":"/ {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133151,"byte_end":133156,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/     // Make a 128 x 2 mut array view then turn it into 2 x 128","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133157,"byte_end":133223,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/     let mut a = aview_mut2(&mut data).reversed_axes();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133224,"byte_end":133282,"line_start":143,"line_end":143,"column_start":1,"column_end":59}},{"value":"/     // Make the first row ones and second row minus ones.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133283,"byte_end":133344,"line_start":144,"line_end":144,"column_start":1,"column_end":62}},{"value":"/     a.row_mut(0).fill(1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133345,"byte_end":133375,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/     a.row_mut(1).fill(-1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133376,"byte_end":133407,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133408,"byte_end":133413,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ // look at the start of the result","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133414,"byte_end":133452,"line_start":148,"line_end":148,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(&data[..3], [[1., -1.], [1., -1.], [1., -1.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133453,"byte_end":133515,"line_start":149,"line_end":149,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":133516,"byte_end":133523,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":738},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":134611,"byte_end":134627,"line_start":173,"line_end":173,"column_start":18,"column_end":34},"name":"FixedInitializer","qualname":"::free_functions::FixedInitializer","value":"FixedInitializer","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741}],"decl_id":null,"docs":" Fixed-size array used for array initialization\n","sig":null,"attributes":[{"value":"/ Fixed-size array used for array initialization","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":134444,"byte_end":134494,"line_start":171,"line_end":171,"column_start":1,"column_end":51}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":134495,"byte_end":134531,"line_start":172,"line_end":172,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":739},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":134639,"byte_end":134643,"line_start":174,"line_end":174,"column_start":10,"column_end":14},"name":"Elem","qualname":"::free_functions::FixedInitializer::Elem","value":"type Elem;","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":134652,"byte_end":134665,"line_start":175,"line_end":175,"column_start":8,"column_end":21},"name":"as_init_slice","qualname":"::free_functions::FixedInitializer::as_init_slice","value":"pub fn as_init_slice(&Self) -> &[Self::Elem]","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":134698,"byte_end":134701,"line_start":176,"line_end":176,"column_start":8,"column_end":11},"name":"len","qualname":"::free_functions::FixedInitializer::len","value":"pub fn len() -> usize","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":743},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135761,"byte_end":135765,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"arr2","qualname":"::free_functions::arr2","value":"pub fn arr2<A: Clone, V: FixedInitializer<Elem = A>>(&[V]) -> Array2<A> where\nV: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135537,"byte_end":135596,"line_start":202,"line_end":202,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135597,"byte_end":135600,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135601,"byte_end":135608,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135609,"byte_end":135631,"line_start":205,"line_end":205,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135632,"byte_end":135635,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1, 2, 3],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135636,"byte_end":135665,"line_start":207,"line_end":207,"column_start":1,"column_end":30}},{"value":"/                [4, 5, 6]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135666,"byte_end":135697,"line_start":208,"line_end":208,"column_start":1,"column_end":32}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135698,"byte_end":135710,"line_start":209,"line_end":209,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [2, 3]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135711,"byte_end":135738,"line_start":210,"line_end":210,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135739,"byte_end":135745,"line_start":211,"line_end":211,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135746,"byte_end":135753,"line_start":212,"line_end":212,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":755},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138278,"byte_end":138284,"line_start":283,"line_end":283,"column_start":8,"column_end":14},"name":"rcarr2","qualname":"::free_functions::rcarr2","value":"pub fn rcarr2<A: Clone, V: Clone + FixedInitializer<Elem = A>>(&[V])\n-> ArcArray2<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138207,"byte_end":138266,"line_start":281,"line_end":281,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138267,"byte_end":138270,"line_start":282,"line_end":282,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":758},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138797,"byte_end":138801,"line_start":304,"line_end":304,"column_start":8,"column_end":12},"name":"arr3","qualname":"::free_functions::arr3","value":"pub fn arr3<A: Clone, V: FixedInitializer<Elem = U>, U: FixedInitializer<Elem\n            = A>>(&[V]) -> Array3<A> where V: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138392,"byte_end":138453,"line_start":287,"line_end":287,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138454,"byte_end":138457,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the slices are not all of the same length.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138458,"byte_end":138518,"line_start":289,"line_end":289,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138519,"byte_end":138522,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138523,"byte_end":138530,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138531,"byte_end":138553,"line_start":292,"line_end":292,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138554,"byte_end":138557,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[1, 2],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138558,"byte_end":138585,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"/                 [3, 4]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138586,"byte_end":138614,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"/                [[5, 6],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138615,"byte_end":138642,"line_start":296,"line_end":296,"column_start":1,"column_end":28}},{"value":"/                 [7, 8]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138643,"byte_end":138671,"line_start":297,"line_end":297,"column_start":1,"column_end":29}},{"value":"/                [[9, 0],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138672,"byte_end":138699,"line_start":298,"line_end":298,"column_start":1,"column_end":28}},{"value":"/                 [1, 2]]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138700,"byte_end":138730,"line_start":299,"line_end":299,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138731,"byte_end":138743,"line_start":300,"line_end":300,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [3, 2, 2]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138744,"byte_end":138774,"line_start":301,"line_end":301,"column_start":1,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138775,"byte_end":138781,"line_start":302,"line_end":302,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138782,"byte_end":138789,"line_start":303,"line_end":303,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":762},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":139042,"byte_end":139048,"line_start":315,"line_end":315,"column_start":8,"column_end":14},"name":"rcarr3","qualname":"::free_functions::rcarr3","value":"pub fn rcarr3<A: Clone, V: FixedInitializer<Elem = U>,\n              U: FixedInitializer<Elem = A>>(&[V]) -> ArcArray<A, Ix3> where\nV: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":138973,"byte_end":139034,"line_start":314,"line_end":314,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4281},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":139739,"byte_end":139749,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"ShapeError","qualname":"::error::ShapeError","value":"ShapeError {  }","parent":null,"children":[{"krate":0,"index":4282}],"decl_id":null,"docs":" An error related to array shape or layout.\n","sig":null,"attributes":[{"value":"/ An error related to array shape or layout.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":139664,"byte_end":139710,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":139927,"byte_end":139931,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"kind","qualname":"<ShapeError>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the `ErrorKind` of this error.\n","sig":null,"attributes":[{"value":"/ Return the `ErrorKind` of this error.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":139860,"byte_end":139901,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":139906,"byte_end":139915,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140024,"byte_end":140033,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ShapeError>::from_kind","value":"pub fn from_kind(ErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ShapeError`\n","sig":null,"attributes":[{"value":"/ Create a new `ShapeError`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":139983,"byte_end":140012,"line_start":27,"line_end":27,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4286},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140356,"byte_end":140373,"line_start":41,"line_end":41,"column_start":5,"column_end":22},"name":"IncompatibleShape","qualname":"::error::ErrorKind::IncompatibleShape","value":"ErrorKind::IncompatibleShape","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" incompatible shape\n","sig":null,"attributes":[{"value":"/ incompatible shape","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140329,"byte_end":140351,"line_start":40,"line_end":40,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4289},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140418,"byte_end":140436,"line_start":43,"line_end":43,"column_start":5,"column_end":23},"name":"IncompatibleLayout","qualname":"::error::ErrorKind::IncompatibleLayout","value":"ErrorKind::IncompatibleLayout","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" incompatible memory layout\n","sig":null,"attributes":[{"value":"/ incompatible memory layout","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140383,"byte_end":140413,"line_start":42,"line_end":42,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4291},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140492,"byte_end":140504,"line_start":45,"line_end":45,"column_start":5,"column_end":17},"name":"RangeLimited","qualname":"::error::ErrorKind::RangeLimited","value":"ErrorKind::RangeLimited","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" the shape does not fit inside type limits\n","sig":null,"attributes":[{"value":"/ the shape does not fit inside type limits","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140442,"byte_end":140487,"line_start":44,"line_end":44,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4293},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140541,"byte_end":140552,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::error::ErrorKind::OutOfBounds","value":"ErrorKind::OutOfBounds","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" out of bounds indexing\n","sig":null,"attributes":[{"value":"/ out of bounds indexing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140510,"byte_end":140536,"line_start":46,"line_end":46,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4295},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140590,"byte_end":140601,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ErrorKind::Unsupported","value":"ErrorKind::Unsupported","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" aliasing array elements\n","sig":null,"attributes":[{"value":"/ aliasing array elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140558,"byte_end":140585,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4297},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140660,"byte_end":140668,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::error::ErrorKind::Overflow","value":"ErrorKind::Overflow","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" overflow when computing offset, length, etc.\n","sig":null,"attributes":[{"value":"/ overflow when computing offset, length, etc.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140607,"byte_end":140655,"line_start":50,"line_end":50,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":4285},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140313,"byte_end":140322,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n\n    /// incompatible shape\n    IncompatibleShape = ,\n\n    /// incompatible memory layout\n    IncompatibleLayout,\n\n    /// the shape does not fit inside type limits\n    RangeLimited,\n\n    /// out of bounds indexing\n    OutOfBounds,\n\n    /// aliasing array elements\n    Unsupported,\n\n    /// overflow when computing offset, length, etc.\n    Overflow,\n}","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":4293},{"krate":0,"index":4295},{"krate":0,"index":4297}],"decl_id":null,"docs":" Error code for an error related to array shape or layout.","sig":null,"attributes":[{"value":"/ Error code for an error related to array shape or layout.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140096,"byte_end":140157,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140158,"byte_end":140161,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This enumeration is not exhaustive. The representation of the enum","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140162,"byte_end":140232,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/ is not guaranteed.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140233,"byte_end":140255,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140256,"byte_end":140273,"line_start":37,"line_end":37,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4304},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":148761,"byte_end":148772,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"IndicesIter","qualname":"::indexes::IndicesIter","value":"IndicesIter {  }","parent":null,"children":[{"krate":0,"index":4306},{"krate":0,"index":4307}],"decl_id":null,"docs":" An iterator over the indexes of an array shape.","sig":null,"attributes":[{"value":"/ An iterator over the indexes of an array shape.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":148643,"byte_end":148694,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":148695,"byte_end":148698,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `D`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":148699,"byte_end":148732,"line_start":19,"line_end":19,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":828},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":148992,"byte_end":148999,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"indices","qualname":"::indexes::indices","value":"pub fn indices<E>(E) -> Indices<E::Dim> where E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create an iterable of the array shape `shape`.","sig":null,"attributes":[{"value":"/ Create an iterable of the array shape `shape`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":148815,"byte_end":148865,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":148866,"byte_end":148869,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":148870,"byte_end":148936,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":148937,"byte_end":148984,"line_start":29,"line_end":29,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":830},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":149366,"byte_end":149376,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"indices_of","qualname":"::indexes::indices_of","value":"pub fn indices_of<S, D>(&ArrayBase<S, D>) -> Indices<D> where S: Data,\nD: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Return an iterable of the indices of the passed-in array.","sig":null,"attributes":[{"value":"/ Return an iterable of the indices of the passed-in array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":149178,"byte_end":149239,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":149240,"byte_end":149243,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":149244,"byte_end":149310,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":149311,"byte_end":149358,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4311},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151703,"byte_end":151710,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"Indices","qualname":"::indexes::Indices","value":"Indices {  }","parent":null,"children":[{"krate":0,"index":4313},{"krate":0,"index":4314}],"decl_id":null,"docs":" Indices producer and iterable.","sig":null,"attributes":[{"value":"/ Indices producer and iterable.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151545,"byte_end":151579,"line_start":130,"line_end":130,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151580,"byte_end":151583,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ `Indices` is an `NdProducer` that produces the indices of an array shape.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151584,"byte_end":151661,"line_start":132,"line_end":132,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4323},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151810,"byte_end":151818,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"IndexPtr","qualname":"::indexes::IndexPtr","value":"IndexPtr {  }","parent":null,"children":[{"krate":0,"index":4325}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":203276,"byte_end":203287,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"ExactChunks","qualname":"::iterators::chunks::ExactChunks","value":"ExactChunks {  }","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":203123,"byte_end":203162,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":203163,"byte_end":203166,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](ArrayBase::exact_chunks) for more","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":203167,"byte_end":203228,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":203229,"byte_end":203245,"line_start":32,"line_end":32,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":920},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":204772,"byte_end":204787,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"ExactChunksIter","qualname":"::iterators::chunks::ExactChunksIter","value":"ExactChunksIter {  }","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":204651,"byte_end":204677,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":204678,"byte_end":204681,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](ArrayBase::exact_chunks) for more","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":204682,"byte_end":204743,"line_start":91,"line_end":91,"column_start":1,"column_end":62}},{"value":"/ information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":204744,"byte_end":204760,"line_start":92,"line_end":92,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":927},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":205474,"byte_end":205488,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"ExactChunksMut","qualname":"::iterators::chunks::ExactChunksMut","value":"ExactChunksMut {  }","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":205313,"byte_end":205352,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":205353,"byte_end":205356,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](ArrayBase::exact_chunks_mut)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":205357,"byte_end":205417,"line_start":121,"line_end":121,"column_start":1,"column_end":61}},{"value":"/ for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":205418,"byte_end":205443,"line_start":122,"line_end":122,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":947},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":207920,"byte_end":207938,"line_start":227,"line_end":227,"column_start":12,"column_end":30},"name":"ExactChunksIterMut","qualname":"::iterators::chunks::ExactChunksIterMut","value":"ExactChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":207791,"byte_end":207817,"line_start":223,"line_end":223,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":207818,"byte_end":207821,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](ArrayBase::exact_chunks_mut)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":207822,"byte_end":207882,"line_start":225,"line_end":225,"column_start":1,"column_end":61}},{"value":"/ for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":207883,"byte_end":207908,"line_start":226,"line_end":226,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":208592,"byte_end":208600,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::iterators::into_iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968}],"decl_id":null,"docs":" By-value iterator for an array\n","sig":null,"attributes":[{"value":"/ By-value iterator for an array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":208546,"byte_end":208580,"line_start":19,"line_end":19,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":1006},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iterators::iter","value":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":9065},{"krate":0,"index":1021},{"krate":0,"index":9067},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028}],"decl_id":null,"docs":" Producers, iterables and iterators.","sig":null,"attributes":[{"value":"/ Producers, iterables and iterators.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211574,"byte_end":211613,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211614,"byte_end":211617,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module collects all concrete producer, iterable and iterator","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211618,"byte_end":211687,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ implementation structs.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211688,"byte_end":211715,"line_start":4,"line_end":4,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211716,"byte_end":211719,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211720,"byte_end":211723,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See also [`NdProducer`](crate::NdProducer).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/iter.rs","byte_start":211724,"byte_end":211771,"line_start":7,"line_end":7,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1037},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":212709,"byte_end":212714,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Lanes","qualname":"::iterators::lanes::Lanes","value":"Lanes {  }","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043}],"decl_id":null,"docs":" See [`.lanes()`](ArrayBase::lanes)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes()`](ArrayBase::lanes)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":212633,"byte_end":212671,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":212672,"byte_end":212697,"line_start":27,"line_end":27,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1057},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":214340,"byte_end":214348,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"LanesMut","qualname":"::iterators::lanes::LanesMut","value":"LanesMut {  }","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063}],"decl_id":null,"docs":" See [`.lanes_mut()`](ArrayBase::lanes_mut)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes_mut()`](ArrayBase::lanes_mut)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":214256,"byte_end":214302,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/ for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":214303,"byte_end":214328,"line_start":96,"line_end":96,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1083},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":215776,"byte_end":215783,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Windows","qualname":"::iterators::windows::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"decl_id":null,"docs":" Window producer and iterable","sig":null,"attributes":[{"value":"/ Window producer and iterable","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":215659,"byte_end":215691,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":215692,"byte_end":215695,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](ArrayBase::windows) for more","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":215696,"byte_end":215747,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/ information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":215748,"byte_end":215764,"line_start":10,"line_end":10,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1103},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":217826,"byte_end":217837,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"WindowsIter","qualname":"::iterators::windows::WindowsIter","value":"WindowsIter {  }","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" Window iterator.","sig":null,"attributes":[{"value":"/ Window iterator.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":217721,"byte_end":217741,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":217742,"byte_end":217745,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](ArrayBase::windows) for more","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":217746,"byte_end":217797,"line_start":89,"line_end":89,"column_start":1,"column_end":52}},{"value":"/ information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":217798,"byte_end":217814,"line_start":90,"line_end":90,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1217},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165510,"byte_end":165514,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iterators::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1221}],"decl_id":null,"docs":" An iterator over the elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165347,"byte_end":165393,"line_start":314,"line_end":314,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165394,"byte_end":165397,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a A`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165398,"byte_end":165435,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165436,"byte_end":165439,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ See [`.iter()`](ArrayBase::iter) for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165440,"byte_end":165498,"line_start":318,"line_end":318,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165909,"byte_end":165916,"line_start":334,"line_end":334,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::iterators::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1232}],"decl_id":null,"docs":" An iterator over the elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array (mutable).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165724,"byte_end":165780,"line_start":329,"line_end":329,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165781,"byte_end":165784,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a mut A`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165785,"byte_end":165826,"line_start":331,"line_end":331,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165827,"byte_end":165830,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ See [`.iter_mut()`](ArrayBase::iter_mut) for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":165831,"byte_end":165897,"line_start":333,"line_end":333,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4505},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166588,"byte_end":166599,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"IndexedIter","qualname":"::iterators::IndexedIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166422,"byte_end":166480,"line_start":355,"line_end":355,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166481,"byte_end":166484,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter()`](ArrayBase::indexed_iter) for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166485,"byte_end":166559,"line_start":357,"line_end":357,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166802,"byte_end":166816,"line_start":363,"line_end":363,"column_start":12,"column_end":26},"name":"IndexedIterMut","qualname":"::iterators::IndexedIterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array (mutable).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166635,"byte_end":166703,"line_start":360,"line_end":360,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166704,"byte_end":166707,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter_mut()`](ArrayBase::indexed_iter_mut) for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166708,"byte_end":166790,"line_start":362,"line_end":362,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1388},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":174627,"byte_end":174636,"line_start":685,"line_end":685,"column_start":12,"column_end":21},"name":"LanesIter","qualname":"::iterators::LanesIter","value":"LanesIter {  }","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395}],"decl_id":null,"docs":" An iterator that traverses over all axes but one, and yields a view for\n each lane along that axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over all axes but one, and yields a view for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":174444,"byte_end":174519,"line_start":681,"line_end":681,"column_start":1,"column_end":76}},{"value":"/ each lane along that axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":174520,"byte_end":174550,"line_start":682,"line_end":682,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":174551,"byte_end":174554,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes()`](ArrayBase::lanes) for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":174555,"byte_end":174615,"line_start":684,"line_end":684,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1409},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175833,"byte_end":175845,"line_start":737,"line_end":737,"column_start":12,"column_end":24},"name":"LanesIterMut","qualname":"::iterators::LanesIterMut","value":"LanesIterMut {  }","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416}],"decl_id":null,"docs":" An iterator that traverses over all dimensions but the innermost,\n and yields each inner row (mutable).","sig":null,"attributes":[{"value":"/ An iterator that traverses over all dimensions but the innermost,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175634,"byte_end":175703,"line_start":732,"line_end":732,"column_start":1,"column_end":70}},{"value":"/ and yields each inner row (mutable).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175704,"byte_end":175744,"line_start":733,"line_end":733,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175745,"byte_end":175748,"line_start":734,"line_end":734,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes_mut()`](ArrayBase::lanes_mut)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175749,"byte_end":175795,"line_start":735,"line_end":735,"column_start":1,"column_end":47}},{"value":"/ for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175796,"byte_end":175821,"line_start":736,"line_end":736,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4538},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181095,"byte_end":181103,"line_start":934,"line_end":934,"column_start":12,"column_end":20},"name":"AxisIter","qualname":"::iterators::AxisIter","value":"AxisIter {  }","parent":null,"children":[{"krate":0,"index":4542},{"krate":0,"index":4543}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview.","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180517,"byte_end":180564,"line_start":919,"line_end":919,"column_start":1,"column_end":48}},{"value":"/ and yields each subview.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180565,"byte_end":180593,"line_start":920,"line_end":920,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180594,"byte_end":180597,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180598,"byte_end":180669,"line_start":922,"line_end":922,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180670,"byte_end":180735,"line_start":923,"line_end":923,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180736,"byte_end":180739,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180740,"byte_end":180812,"line_start":925,"line_end":925,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180813,"byte_end":180885,"line_start":926,"line_end":926,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180886,"byte_end":180889,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180890,"byte_end":180941,"line_start":928,"line_end":928,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180942,"byte_end":180945,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter()`](ArrayBase::outer_iter)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180946,"byte_end":180994,"line_start":930,"line_end":930,"column_start":1,"column_end":49}},{"value":"/ or [`.axis_iter()`](ArrayBase::axis_iter)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180995,"byte_end":181040,"line_start":931,"line_end":931,"column_start":1,"column_end":46}},{"value":"/ for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181041,"byte_end":181066,"line_start":932,"line_end":932,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181968,"byte_end":181976,"line_start":968,"line_end":968,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIter>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181653,"byte_end":181721,"line_start":961,"line_end":961,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181726,"byte_end":181729,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181734,"byte_end":181808,"line_start":963,"line_end":963,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181813,"byte_end":181852,"line_start":964,"line_end":964,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181857,"byte_end":181860,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181865,"byte_end":181940,"line_start":966,"line_end":966,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181945,"byte_end":181956,"line_start":967,"line_end":967,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183565,"byte_end":183576,"line_start":1030,"line_end":1030,"column_start":12,"column_end":23},"name":"AxisIterMut","qualname":"::iterators::AxisIterMut","value":"AxisIterMut {  }","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview (mutable)","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":182976,"byte_end":183023,"line_start":1016,"line_end":1016,"column_start":1,"column_end":48}},{"value":"/ and yields each subview (mutable)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183024,"byte_end":183061,"line_start":1017,"line_end":1017,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183062,"byte_end":183065,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183066,"byte_end":183137,"line_start":1019,"line_end":1019,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183138,"byte_end":183203,"line_start":1020,"line_end":1020,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183204,"byte_end":183207,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183208,"byte_end":183280,"line_start":1022,"line_end":1022,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183281,"byte_end":183353,"line_start":1023,"line_end":1023,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183354,"byte_end":183357,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183358,"byte_end":183412,"line_start":1025,"line_end":1025,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183413,"byte_end":183416,"line_start":1026,"line_end":1026,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter_mut()`](ArrayBase::outer_iter_mut)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183417,"byte_end":183473,"line_start":1027,"line_end":1027,"column_start":1,"column_end":57}},{"value":"/ or [`.axis_iter_mut()`](ArrayBase::axis_iter_mut)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183474,"byte_end":183527,"line_start":1028,"line_end":1028,"column_start":1,"column_end":54}},{"value":"/ for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183528,"byte_end":183553,"line_start":1029,"line_end":1029,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184324,"byte_end":184332,"line_start":1054,"line_end":1054,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIterMut>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184009,"byte_end":184077,"line_start":1047,"line_end":1047,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184082,"byte_end":184085,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184090,"byte_end":184164,"line_start":1049,"line_end":1049,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184169,"byte_end":184208,"line_start":1050,"line_end":1050,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184213,"byte_end":184216,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184221,"byte_end":184296,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184301,"byte_end":184312,"line_start":1053,"line_end":1053,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1546},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":189069,"byte_end":189083,"line_start":1226,"line_end":1226,"column_start":12,"column_end":26},"name":"AxisChunksIter","qualname":"::iterators::AxisChunksIter","value":"AxisChunksIter {  }","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188624,"byte_end":188678,"line_start":1216,"line_end":1216,"column_start":1,"column_end":55}},{"value":"/ and yields views of the specified size on this axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188679,"byte_end":188735,"line_start":1217,"line_end":1217,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188736,"byte_end":188739,"line_start":1218,"line_end":1218,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188740,"byte_end":188805,"line_start":1219,"line_end":1219,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188806,"byte_end":188860,"line_start":1220,"line_end":1220,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188861,"byte_end":188914,"line_start":1221,"line_end":1221,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188915,"byte_end":188918,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188919,"byte_end":188970,"line_start":1223,"line_end":1223,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188971,"byte_end":188974,"line_start":1224,"line_end":1224,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter()`](ArrayBase::axis_chunks_iter) for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":188975,"byte_end":189057,"line_start":1225,"line_end":1225,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1563},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194886,"byte_end":194903,"line_start":1406,"line_end":1406,"column_start":12,"column_end":29},"name":"AxisChunksIterMut","qualname":"::iterators::AxisChunksIterMut","value":"AxisChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields mutable views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194418,"byte_end":194472,"line_start":1395,"line_end":1395,"column_start":1,"column_end":55}},{"value":"/ and yields mutable views of the specified size on this axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194473,"byte_end":194537,"line_start":1396,"line_end":1396,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194538,"byte_end":194541,"line_start":1397,"line_end":1397,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194542,"byte_end":194607,"line_start":1398,"line_end":1398,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194608,"byte_end":194662,"line_start":1399,"line_end":1399,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194663,"byte_end":194716,"line_start":1400,"line_end":1400,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194717,"byte_end":194720,"line_start":1401,"line_end":1401,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194721,"byte_end":194775,"line_start":1402,"line_end":1402,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194776,"byte_end":194779,"line_start":1403,"line_end":1403,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter_mut()`](ArrayBase::axis_chunks_iter_mut)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194780,"byte_end":194848,"line_start":1404,"line_end":1404,"column_start":1,"column_end":69}},{"value":"/ for more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":194849,"byte_end":194874,"line_start":1405,"line_end":1405,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4705},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/layout/mod.rs","byte_start":218619,"byte_end":218625,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Layout","qualname":"::layout::Layout","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory layout description\n","sig":null,"attributes":[{"value":"/ Memory layout description","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/layout/mod.rs","byte_start":218555,"byte_end":218584,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1666},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227514,"byte_end":227526,"line_start":26,"line_end":26,"column_start":11,"column_end":23},"name":"LinalgScalar","qualname":"::linalg_traits::LinalgScalar","value":"LinalgScalar: 'static + Copy + Zero + One + Add<Output = Self> + Sub<Output = Self> +\nMul<Output = Self> + Div<Output = Self>","parent":null,"children":[],"decl_id":null,"docs":" Elements that support linear algebra operations.","sig":null,"attributes":[{"value":"/ Elements that support linear algebra operations.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227301,"byte_end":227353,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227354,"byte_end":227357,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `'static` for type-based specialization, `Copy` so that they don't need move","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227358,"byte_end":227438,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ semantics or destructors, and the rest are numerical traits.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227439,"byte_end":227503,"line_start":25,"line_end":25,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":1669},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228285,"byte_end":228292,"line_start":59,"line_end":59,"column_start":11,"column_end":18},"name":"NdFloat","qualname":"::linalg_traits::NdFloat","value":"NdFloat: Float + AddAssign + SubAssign + MulAssign + DivAssign + RemAssign +\nfmt::Display + fmt::Debug + fmt::LowerExp + fmt::UpperExp + ScalarOperand +\nLinalgScalar + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Floating-point element types `f32` and `f64`.","sig":null,"attributes":[{"value":"/ Floating-point element types `f32` and `f64`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227878,"byte_end":227927,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227928,"byte_end":227931,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Trait `NdFloat` is only implemented for `f32` and `f64` but encompasses as","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227932,"byte_end":228010,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ much float-relevant ndarray functionality as possible, including the traits","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228011,"byte_end":228090,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ needed for linear algebra and for *right hand side* scalar","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228091,"byte_end":228153,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ operations (`ScalarOperand`).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228154,"byte_end":228187,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228188,"byte_end":228191,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This trait can only be implemented by `f32` and `f64`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228192,"byte_end":228250,"line_start":57,"line_end":57,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228251,"byte_end":228274,"line_start":58,"line_end":58,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4711},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236517,"byte_end":236525,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"MathCell","qualname":"::math_cell::MathCell","value":"","parent":null,"children":[],"decl_id":null,"docs":" A transparent wrapper of [`Cell<T>`](std::cell::Cell) which is identical in every way, except\n it will implement arithmetic operators as well.","sig":null,"attributes":[{"value":"/ A transparent wrapper of [`Cell<T>`](std::cell::Cell) which is identical in every way, except","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236140,"byte_end":236237,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ it will implement arithmetic operators as well.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236238,"byte_end":236289,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236290,"byte_end":236293,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The purpose of `MathCell` is to be used from [.cell_view()](crate::ArrayBase::cell_view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236294,"byte_end":236387,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/ The `MathCell` derefs to `Cell`, so all the cell's methods are available.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236388,"byte_end":236465,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"repr(transparent)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236466,"byte_end":236486,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236648,"byte_end":236651,"line_start":20,"line_end":20,"column_start":18,"column_end":21},"name":"new","qualname":"<MathCell<T>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new cell with the given value\n","sig":null,"attributes":[{"value":"/ Create a new cell with the given value","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236566,"byte_end":236608,"line_start":18,"line_end":18,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236613,"byte_end":236630,"line_start":19,"line_end":19,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236744,"byte_end":236754,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MathCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value\n","sig":null,"attributes":[{"value":"/ Return the inner value","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236706,"byte_end":236732,"line_start":22,"line_end":22,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236844,"byte_end":236848,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"swap","qualname":"<MathCell<T>>::swap","value":"pub fn swap(&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Swap value with another cell\n","sig":null,"attributes":[{"value":"/ Swap value with another cell","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236800,"byte_end":236832,"line_start":25,"line_end":25,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4719},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243381,"byte_end":243389,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"RowMajor","qualname":"::order::Order::RowMajor","value":"Order::RowMajor","parent":{"krate":0,"index":4718},"children":[],"decl_id":null,"docs":" Row major or \"C\" order\n","sig":null,"attributes":[{"value":"/ Row major or \"C\" order","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243350,"byte_end":243376,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4721},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243429,"byte_end":243440,"line_start":38,"line_end":38,"column_start":5,"column_end":16},"name":"ColumnMajor","qualname":"::order::Order::ColumnMajor","value":"Order::ColumnMajor","parent":{"krate":0,"index":4718},"children":[],"decl_id":null,"docs":" Column major or \"F\" order\n","sig":null,"attributes":[{"value":"/ Column major or \"F\" order","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243395,"byte_end":243424,"line_start":37,"line_end":37,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":4718},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243338,"byte_end":243343,"line_start":34,"line_end":34,"column_start":10,"column_end":15},"name":"Order","qualname":"::order::Order","value":"pub enum Order {\n\n    /// Row major or \"C\" order\n    RowMajor,\n\n    /// Column major or \"F\" order\n    ColumnMajor,\n}","parent":null,"children":[{"krate":0,"index":4719},{"krate":0,"index":4721}],"decl_id":null,"docs":" Array order","sig":null,"attributes":[{"value":"/ Array order","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242263,"byte_end":242278,"line_start":2,"line_end":2,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242279,"byte_end":242282,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Order refers to indexing order, or how a linear sequence is translated","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242283,"byte_end":242357,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ into a two-dimensional or multi-dimensional array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242358,"byte_end":242412,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242413,"byte_end":242416,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - `RowMajor` means that the index along the row is the most rapidly changing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242417,"byte_end":242497,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ - `ColumnMajor` means that the index along the column is the most rapidly changing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242498,"byte_end":242584,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242585,"byte_end":242588,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Given a sequence like: 1, 2, 3, 4, 5, 6","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242589,"byte_end":242632,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242633,"byte_end":242636,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If it is laid it out in a 2 x 3 matrix using row major ordering, it results in:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242637,"byte_end":242720,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242721,"byte_end":242724,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242725,"byte_end":242736,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ 1  2  3","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242737,"byte_end":242748,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ 4  5  6","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242749,"byte_end":242760,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242761,"byte_end":242768,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242769,"byte_end":242772,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If it is laid using column major ordering, it results in:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242773,"byte_end":242834,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242835,"byte_end":242838,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242839,"byte_end":242850,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ 1  3  5","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242851,"byte_end":242862,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ 2  4  6","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242863,"byte_end":242874,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242875,"byte_end":242882,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242883,"byte_end":242886,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It can be seen as filling in \"rows first\" or \"columns first\".","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242887,"byte_end":242952,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242953,"byte_end":242956,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Order` can be used both to refer to logical ordering as well as memory ordering or memory","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":242957,"byte_end":243051,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ layout. The orderings have common short names, also seen in other environments, where","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243052,"byte_end":243141,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/ row major is called \"C\" order (after the C programming language) and column major is called \"F\"","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243142,"byte_end":243241,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/ or \"Fortran\" order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243242,"byte_end":243265,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"non_exhaustive","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243311,"byte_end":243328,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":1770},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243519,"byte_end":243520,"line_start":43,"line_end":43,"column_start":15,"column_end":16},"name":"C","qualname":"::order::Order::C","value":"Order","parent":{"krate":0,"index":1769},"children":[],"decl_id":null,"docs":" \"C\" is an alias for row major ordering\n","sig":null,"attributes":[{"value":"/ \"C\" is an alias for row major ordering","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243462,"byte_end":243504,"line_start":42,"line_end":42,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":1771},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243626,"byte_end":243627,"line_start":46,"line_end":46,"column_start":15,"column_end":16},"name":"F","qualname":"::order::Order::F","value":"Order","parent":{"krate":0,"index":1769},"children":[],"decl_id":null,"docs":" \"F\" (for Fortran) is an alias for column major ordering\n","sig":null,"attributes":[{"value":"/ \"F\" (for Fortran) is an alias for column major ordering","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243552,"byte_end":243611,"line_start":45,"line_end":45,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243748,"byte_end":243760,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"is_row_major","qualname":"<Order>::is_row_major","value":"pub fn is_row_major(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if input is Order::RowMajor, false otherwise\n","sig":null,"attributes":[{"value":"/ Return true if input is Order::RowMajor, false otherwise","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243662,"byte_end":243722,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243727,"byte_end":243736,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243986,"byte_end":244001,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"is_column_major","qualname":"<Order>::is_column_major","value":"pub fn is_column_major(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if input is Order::ColumnMajor, false otherwise\n","sig":null,"attributes":[{"value":"/ Return true if input is Order::ColumnMajor, false otherwise","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243897,"byte_end":243960,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243965,"byte_end":243974,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":244161,"byte_end":244170,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"row_major","qualname":"<Order>::row_major","value":"pub fn row_major(bool) -> Order","parent":null,"children":[],"decl_id":null,"docs":" Return Order::RowMajor if the input is true, Order::ColumnMajor otherwise\n","sig":null,"attributes":[{"value":"/ Return Order::RowMajor if the input is true, Order::ColumnMajor otherwise","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":244058,"byte_end":244135,"line_start":63,"line_end":63,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":244140,"byte_end":244149,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":244382,"byte_end":244394,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"column_major","qualname":"<Order>::column_major","value":"pub fn column_major(bool) -> Order","parent":null,"children":[],"decl_id":null,"docs":" Return Order::ColumnMajor if the input is true, Order::RowMajor otherwise\n","sig":null,"attributes":[{"value":"/ Return Order::ColumnMajor if the input is true, Order::RowMajor otherwise","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":244279,"byte_end":244356,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":244361,"byte_end":244370,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":244574,"byte_end":244583,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Order>::transpose","value":"pub fn transpose(Self) -> Order","parent":null,"children":[],"decl_id":null,"docs":" Return the transpose: row major becomes column major and vice versa.\n","sig":null,"attributes":[{"value":"/ Return the transpose: row major becomes column major and vice versa.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":244476,"byte_end":244548,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":244553,"byte_end":244562,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4734},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":247769,"byte_end":247774,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Shape","qualname":"::shape_builder::Shape","value":"Shape {  }","parent":null,"children":[{"krate":0,"index":4736},{"krate":0,"index":4737}],"decl_id":null,"docs":" A contiguous array shape of n dimensions.","sig":null,"attributes":[{"value":"/ A contiguous array shape of n dimensions.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":247603,"byte_end":247648,"line_start":5,"line_end":5,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":247649,"byte_end":247652,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Either c- or f- memory ordered (*c* a.k.a *row major* is the default).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":247653,"byte_end":247727,"line_start":7,"line_end":7,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4752},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248207,"byte_end":248218,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"StrideShape","qualname":"::shape_builder::StrideShape","value":"StrideShape {  }","parent":null,"children":[{"krate":0,"index":4754},{"krate":0,"index":4755}],"decl_id":null,"docs":" An array shape of n dimensions in c-order, f-order or custom strides.\n","sig":null,"attributes":[{"value":"/ An array shape of n dimensions in c-order, f-order or custom strides.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248092,"byte_end":248165,"line_start":25,"line_end":25,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248390,"byte_end":248397,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"raw_dim","qualname":"<StrideShape<D>>::raw_dim","value":"pub fn raw_dim(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the dimension\n","sig":null,"attributes":[{"value":"/ Return a reference to the dimension","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248339,"byte_end":248378,"line_start":36,"line_end":36,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248507,"byte_end":248511,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"size","qualname":"<StrideShape<D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the shape in number of elements\n","sig":null,"attributes":[{"value":"/ Return the size of the shape in number of elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248441,"byte_end":248495,"line_start":40,"line_end":40,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":1807},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249764,"byte_end":249776,"line_start":89,"line_end":89,"column_start":11,"column_end":23},"name":"ShapeBuilder","qualname":"::shape_builder::ShapeBuilder","value":"ShapeBuilder","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813}],"decl_id":null,"docs":" A trait for `Shape` and `D where D: Dimension` that allows\n customizing the memory layout (strides) of an array shape.","sig":null,"attributes":[{"value":"/ A trait for `Shape` and `D where D: Dimension` that allows","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249527,"byte_end":249589,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/ customizing the memory layout (strides) of an array shape.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249590,"byte_end":249652,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249653,"byte_end":249656,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This trait is used together with array constructor methods like","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249657,"byte_end":249724,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/ `Array::from_shape_vec`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249725,"byte_end":249753,"line_start":88,"line_end":88,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1808},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249788,"byte_end":249791,"line_start":90,"line_end":90,"column_start":10,"column_end":13},"name":"Dim","qualname":"::shape_builder::ShapeBuilder::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1809},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249813,"byte_end":249820,"line_start":91,"line_end":91,"column_start":10,"column_end":17},"name":"Strides","qualname":"::shape_builder::ShapeBuilder::Strides","value":"type Strides;","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249830,"byte_end":249840,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"into_shape","qualname":"::shape_builder::ShapeBuilder::into_shape","value":"pub fn into_shape(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249875,"byte_end":249876,"line_start":94,"line_end":94,"column_start":8,"column_end":9},"name":"f","qualname":"::shape_builder::ShapeBuilder::f","value":"pub fn f(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249911,"byte_end":249916,"line_start":95,"line_end":95,"column_start":8,"column_end":13},"name":"set_f","qualname":"::shape_builder::ShapeBuilder::set_f","value":"pub fn set_f(Self, bool) -> Shape<Self::Dim>","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":249963,"byte_end":249970,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"strides","qualname":"::shape_builder::ShapeBuilder::strides","value":"pub fn strides(Self, Self::Strides) -> StrideShape<Self::Dim>","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251714,"byte_end":251721,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"raw_dim","qualname":"<Shape<D>>::raw_dim","value":"pub fn raw_dim(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the dimension\n","sig":null,"attributes":[{"value":"/ Return a reference to the dimension","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251663,"byte_end":251702,"line_start":179,"line_end":179,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251831,"byte_end":251835,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"size","qualname":"<Shape<D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the shape in number of elements\n","sig":null,"attributes":[{"value":"/ Return the size of the shape in number of elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251765,"byte_end":251819,"line_start":183,"line_end":183,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":1841},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252226,"byte_end":252234,"line_start":198,"line_end":198,"column_start":11,"column_end":19},"name":"ShapeArg","qualname":"::shape_builder::ShapeArg","value":"ShapeArg","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843}],"decl_id":null,"docs":" Array shape argument with optional order parameter","sig":null,"attributes":[{"value":"/ Array shape argument with optional order parameter","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251888,"byte_end":251942,"line_start":190,"line_end":190,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251943,"byte_end":251946,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ Shape or array dimension argument, with optional [`Order`] parameter.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251947,"byte_end":252020,"line_start":192,"line_end":192,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252021,"byte_end":252024,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ This is an argument conversion trait that is used to accept an array shape and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252025,"byte_end":252107,"line_start":194,"line_end":194,"column_start":1,"column_end":83}},{"value":"/ (optionally) an ordering argument.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252108,"byte_end":252146,"line_start":195,"line_end":195,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252147,"byte_end":252150,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ See for example [`.to_shape()`](crate::ArrayBase::to_shape).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252151,"byte_end":252215,"line_start":197,"line_end":197,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":1842},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252246,"byte_end":252249,"line_start":199,"line_end":199,"column_start":10,"column_end":13},"name":"Dim","qualname":"::shape_builder::ShapeArg::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252269,"byte_end":252289,"line_start":200,"line_end":200,"column_start":8,"column_end":28},"name":"into_shape_and_order","qualname":"::shape_builder::ShapeArg::into_shape_and_order","value":"pub fn into_shape_and_order(Self) -> (Self::Dim, Option<Order>)","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4781},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254295,"byte_end":254300,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, step }","parent":null,"children":[{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784}],"decl_id":null,"docs":" A slice (range with step size).","sig":null,"attributes":[{"value":"/ A slice (range with step size).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253434,"byte_end":253469,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253470,"byte_end":253473,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `end` is an exclusive index. Negative `start` or `end` indexes are counted","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253474,"byte_end":253552,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ from the back of the axis. If `end` is `None`, the slice extends to the end","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253553,"byte_end":253632,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ of the axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253633,"byte_end":253649,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253650,"byte_end":253653,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](s!) macro.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253654,"byte_end":253690,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253691,"byte_end":253694,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253695,"byte_end":253710,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253711,"byte_end":253714,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(0, None, 1)` is the full range of an axis. It can also be","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253715,"byte_end":253788,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ created with `Slice::from(..)`. The Python equivalent is `[:]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253789,"byte_end":253856,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253857,"byte_end":253860,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, b, 2)` is every second element from `a` until `b`. It can","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253861,"byte_end":253937,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ also be created with `Slice::from(a..b).step_by(2)`. The Python equivalent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":253938,"byte_end":254016,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ is `[a:b:2]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254017,"byte_end":254034,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254035,"byte_end":254038,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, None, -1)` is every element, from `a` until the end, in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254039,"byte_end":254113,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ reverse order. It can also be created with `Slice::from(a..).step_by(-1)`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254114,"byte_end":254192,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ The Python equivalent is `[a::-1]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254193,"byte_end":254232,"line_start":36,"line_end":36,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4782},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254379,"byte_end":254384,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"isize","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" start index; negative are counted from the back of the axis\n","sig":null,"attributes":[{"value":"/ start index; negative are counted from the back of the axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254307,"byte_end":254370,"line_start":39,"line_end":39,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":4783},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254537,"byte_end":254540,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"std::option::Option<isize>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" end index; negative are counted from the back of the axis; when not present\n the default is the full length of the axis.\n","sig":null,"attributes":[{"value":"/ end index; negative are counted from the back of the axis; when not present","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254397,"byte_end":254476,"line_start":41,"line_end":41,"column_start":5,"column_end":84}},{"value":"/ the default is the full length of the axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254481,"byte_end":254528,"line_start":42,"line_end":42,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4784},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254633,"byte_end":254637,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"step","qualname":"::slice::Slice::step","value":"isize","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" step size in elements; the default is 1, for every element.\n","sig":null,"attributes":[{"value":"/ step size in elements; the default is 1, for every element.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254561,"byte_end":254624,"line_start":44,"line_end":44,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254973,"byte_end":254976,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Slice>::new","value":"pub fn new(isize, Option<isize>, isize) -> Slice","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given extents.","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given extents.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254666,"byte_end":254714,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254719,"byte_end":254722,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ See also the `From` impls, converting from ranges; for example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254727,"byte_end":254793,"line_start":51,"line_end":51,"column_start":5,"column_end":71}},{"value":"/ `Slice::from(i..)` or `Slice::from(j..k)`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254798,"byte_end":254844,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254849,"byte_end":254852,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254857,"byte_end":254884,"line_start":54,"line_end":54,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254889,"byte_end":254961,"line_start":55,"line_end":55,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255394,"byte_end":255401,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"step_by","qualname":"<Slice>::step_by","value":"pub fn step_by(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given step size (multiplied with the\n previous step size).","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given step size (multiplied with the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255152,"byte_end":255222,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ previous step size).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255227,"byte_end":255251,"line_start":62,"line_end":62,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255256,"byte_end":255259,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255264,"byte_end":255291,"line_start":64,"line_end":64,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255296,"byte_end":255368,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255373,"byte_end":255382,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4800},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255736,"byte_end":255743,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"NewAxis","qualname":"::slice::NewAxis","value":"","parent":null,"children":[],"decl_id":null,"docs":" Token to represent a new axis in a slice description.","sig":null,"attributes":[{"value":"/ Token to represent a new axis in a slice description.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255596,"byte_end":255653,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255654,"byte_end":255657,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](s!) macro.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255658,"byte_end":255694,"line_start":78,"line_end":78,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":4808},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257408,"byte_end":257413,"line_start":115,"line_end":115,"column_start":5,"column_end":10},"name":"Slice","qualname":"::slice::SliceInfoElem::Slice","value":"SliceInfoElem::Slice { start, end, step }","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" A range with step size. `end` is an exclusive index. Negative `start`\n or `end` indexes are counted from the back of the axis. If `end` is\n `None`, the slice extends to the end of the axis.\n","sig":null,"attributes":[{"value":"/ A range with step size. `end` is an exclusive index. Negative `start`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257196,"byte_end":257269,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ or `end` indexes are counted from the back of the axis. If `end` is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257274,"byte_end":257345,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ `None`, the slice extends to the end of the axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257350,"byte_end":257403,"line_start":114,"line_end":114,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4812},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257810,"byte_end":257815,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Index","qualname":"::slice::SliceInfoElem::Index","value":"SliceInfoElem::Index(isize)","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" A single index.\n","sig":null,"attributes":[{"value":"/ A single index.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257786,"byte_end":257805,"line_start":124,"line_end":124,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4815},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257860,"byte_end":257867,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"NewAxis","qualname":"::slice::SliceInfoElem::NewAxis","value":"SliceInfoElem::NewAxis","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" A new axis of length 1.\n","sig":null,"attributes":[{"value":"/ A new axis of length 1.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257828,"byte_end":257855,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":4807},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257176,"byte_end":257189,"line_start":111,"line_end":111,"column_start":10,"column_end":23},"name":"SliceInfoElem","qualname":"::slice::SliceInfoElem","value":"pub enum SliceInfoElem {\n\n    /// A range with step size. `end` is an exclusive index. Negative `start`\n    /// or `end` indexes are counted from the back of the axis. If `end` is\n    /// `None`, the slice extends to the end of the axis.\n    Slice {\n        /// start index; negative are counted from the back of the axis\n        start: isize,\n        /// end index; negative are counted from the back of the axis; when not present\n        /// the default is the full length of the axis.\n        end: Option<isize>,\n        /// step size in elements; the default is 1, for every element.\n        step: isize,\n    },\n\n    /// A single index.\n    Index(isize),\n\n    /// A new axis of length 1.\n    NewAxis,\n}","parent":null,"children":[{"krate":0,"index":4808},{"krate":0,"index":4812},{"krate":0,"index":4815}],"decl_id":null,"docs":" A slice (range with step), an index, or a new axis token.","sig":null,"attributes":[{"value":"/ A slice (range with step), an index, or a new axis token.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255746,"byte_end":255807,"line_start":82,"line_end":82,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255808,"byte_end":255811,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](s!) macro for a convenient way to create a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255812,"byte_end":255880,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ `SliceInfo<[SliceInfoElem; n], Din, Dout>`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255881,"byte_end":255928,"line_start":85,"line_end":85,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255929,"byte_end":255932,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255933,"byte_end":255948,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255949,"byte_end":255952,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Index(a)` is the index `a`. It can also be created with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":255953,"byte_end":256028,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ `SliceInfoElem::from(a)`. The Python equivalent is `[a]`. The macro","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256029,"byte_end":256100,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/ equivalent is `s![a]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256101,"byte_end":256127,"line_start":91,"line_end":91,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256128,"byte_end":256131,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Slice { start: 0, end: None, step: 1 }` is the full range","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256132,"byte_end":256209,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ of an axis. It can also be created with `SliceInfoElem::from(..)`. The","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256210,"byte_end":256284,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/ Python equivalent is `[:]`. The macro equivalent is `s![..]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256285,"byte_end":256350,"line_start":95,"line_end":95,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256351,"byte_end":256354,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Slice { start: a, end: Some(b), step: 2 }` is every second","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256355,"byte_end":256433,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ element from `a` until `b`. It can also be created with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256434,"byte_end":256493,"line_start":98,"line_end":98,"column_start":1,"column_end":60}},{"value":"/ `SliceInfoElem::from(Slice::from(a..b).step_by(2))`. The Python equivalent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256494,"byte_end":256572,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ is `[a:b:2]`. The macro equivalent is `s![a..b;2]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256573,"byte_end":256628,"line_start":100,"line_end":100,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256629,"byte_end":256632,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Slice { start: a, end: None, step: -1 }` is every element,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256633,"byte_end":256711,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ from `a` until the end, in reverse order. It can also be created with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256712,"byte_end":256785,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/ `SliceInfoElem::from(Slice::from(a..).step_by(-1))`. The Python equivalent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256786,"byte_end":256864,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ is `[a::-1]`. The macro equivalent is `s![a..;-1]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256865,"byte_end":256920,"line_start":105,"line_end":105,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256921,"byte_end":256924,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::NewAxis` is a new axis of length 1. It can also be created","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":256925,"byte_end":257003,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ with `SliceInfoElem::from(NewAxis)`. The Python equivalent is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257004,"byte_end":257069,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ `[np.newaxis]`. The macro equivalent is `s![NewAxis]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257070,"byte_end":257128,"line_start":109,"line_end":109,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257990,"byte_end":257998,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"is_slice","qualname":"<SliceInfoElem>::is_slice","value":"pub fn is_slice(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Slice` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `Slice` value.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257930,"byte_end":257978,"line_start":133,"line_end":133,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":258140,"byte_end":258148,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"is_index","qualname":"<SliceInfoElem>::is_index","value":"pub fn is_index(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is an `Index` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is an `Index` value.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":258079,"byte_end":258128,"line_start":138,"line_end":138,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":258287,"byte_end":258298,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"is_new_axis","qualname":"<SliceInfoElem>::is_new_axis","value":"pub fn is_new_axis(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `NewAxis` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `NewAxis` value.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":258225,"byte_end":258275,"line_start":143,"line_end":143,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":1900},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262838,"byte_end":262846,"line_start":299,"line_end":299,"column_start":18,"column_end":26},"name":"SliceArg","qualname":"::slice::SliceArg","value":"SliceArg<D: Dimension>: AsRef<[SliceInfoElem]>","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":4898}],"decl_id":null,"docs":" A type that can slice an array of dimension `D`.","sig":null,"attributes":[{"value":"/ A type that can slice an array of dimension `D`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262387,"byte_end":262439,"line_start":292,"line_end":292,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262440,"byte_end":262443,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ This trait is unsafe to implement because the implementation must ensure","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262444,"byte_end":262520,"line_start":294,"line_end":294,"column_start":1,"column_end":77}},{"value":"/ that `D`, `Self::OutDim`, `self.in_dim()`, and `self.out_ndim()` are","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262521,"byte_end":262593,"line_start":295,"line_end":295,"column_start":1,"column_end":73}},{"value":"/ consistent with the `&[SliceInfoElem]` returned by `self.as_ref()` and that","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262594,"byte_end":262673,"line_start":296,"line_end":296,"column_start":1,"column_end":80}},{"value":"/ `self.as_ref()` always returns the same value when called multiple times.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262674,"byte_end":262751,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262752,"byte_end":262788,"line_start":298,"line_end":298,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1902},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262940,"byte_end":262946,"line_start":301,"line_end":301,"column_start":10,"column_end":16},"name":"OutDim","qualname":"::slice::SliceArg::OutDim","value":"type OutDim: Dimension;","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" Dimensionality of the output array.\n","sig":null,"attributes":[{"value":"/ Dimensionality of the output array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262891,"byte_end":262930,"line_start":300,"line_end":300,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":263022,"byte_end":263029,"line_start":304,"line_end":304,"column_start":8,"column_end":15},"name":"in_ndim","qualname":"::slice::SliceArg::in_ndim","value":"pub fn in_ndim(&Self) -> usize","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" Returns the number of axes in the input array.\n","sig":null,"attributes":[{"value":"/ Returns the number of axes in the input array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262964,"byte_end":263014,"line_start":303,"line_end":303,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":263111,"byte_end":263119,"line_start":307,"line_end":307,"column_start":8,"column_end":16},"name":"out_ndim","qualname":"::slice::SliceArg::out_ndim","value":"pub fn out_ndim(&Self) -> usize","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" Returns the number of axes in the output array.\n","sig":null,"attributes":[{"value":"/ Returns the number of axes in the output array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":263052,"byte_end":263103,"line_start":306,"line_end":306,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4951},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":265332,"byte_end":265341,"line_start":403,"line_end":403,"column_start":12,"column_end":21},"name":"SliceInfo","qualname":"::slice::SliceInfo","value":"SliceInfo {  }","parent":null,"children":[{"krate":0,"index":4955},{"krate":0,"index":4956},{"krate":0,"index":4957}],"decl_id":null,"docs":" Represents all of the necessary information to perform a slice.","sig":null,"attributes":[{"value":"/ Represents all of the necessary information to perform a slice.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":264750,"byte_end":264817,"line_start":392,"line_end":392,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":264818,"byte_end":264821,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ The type `T` is typically `[SliceInfoElem; n]`, `&[SliceInfoElem]`, or","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":264822,"byte_end":264896,"line_start":394,"line_end":394,"column_start":1,"column_end":75}},{"value":"/ `Vec<SliceInfoElem>`. The type `Din` is the dimension of the array to be","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":264897,"byte_end":264973,"line_start":395,"line_end":395,"column_start":1,"column_end":77}},{"value":"/ sliced, and `Dout` is the output dimension after calling [`.slice()`]. Note","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":264974,"byte_end":265053,"line_start":396,"line_end":396,"column_start":1,"column_end":80}},{"value":"/ that if `Din` is a fixed dimension type (`Ix0`, `Ix1`, `Ix2`, etc.), the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":265054,"byte_end":265130,"line_start":397,"line_end":397,"column_start":1,"column_end":77}},{"value":"/ `SliceInfo` instance can still be used to slice an array with dimension","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":265131,"byte_end":265206,"line_start":398,"line_end":398,"column_start":1,"column_end":76}},{"value":"/ `IxDyn` as long as the number of axes matches.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":265207,"byte_end":265257,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":265258,"byte_end":265261,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: crate::ArrayBase::slice","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":265262,"byte_end":265303,"line_start":401,"line_end":401,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266665,"byte_end":266678,"line_start":454,"line_end":454,"column_start":19,"column_end":32},"name":"new_unchecked","qualname":"<SliceInfo<T, Din, Dout>>::new_unchecked","value":"pub unsafe fn new_unchecked(T, PhantomData<Din>, PhantomData<Dout>)\n-> SliceInfo<T, Din, Dout>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266288,"byte_end":266327,"line_start":444,"line_end":444,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266332,"byte_end":266335,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of `ndarray`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266340,"byte_end":266403,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266408,"byte_end":266411,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266416,"byte_end":266428,"line_start":448,"line_end":448,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266433,"byte_end":266436,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `in_dim` and `out_dim` are consistent with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266441,"byte_end":266515,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/ `indices` and that `indices.as_ref()` always returns the same value","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266520,"byte_end":266591,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/ when called multiple times.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266596,"byte_end":266627,"line_start":452,"line_end":452,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267467,"byte_end":267470,"line_start":480,"line_end":480,"column_start":19,"column_end":22},"name":"new","qualname":"<SliceInfo<T, Din, Dout>>::new","value":"pub unsafe fn new(T) -> Result<SliceInfo<T, Din, Dout>, ShapeError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267102,"byte_end":267141,"line_start":470,"line_end":470,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267146,"byte_end":267149,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Errors if `Din` or `Dout` is not consistent with `indices`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267154,"byte_end":267217,"line_start":472,"line_end":472,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267222,"byte_end":267225,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ For common types, a safe alternative is to use `TryFrom` instead.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267230,"byte_end":267299,"line_start":474,"line_end":474,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267304,"byte_end":267307,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267312,"byte_end":267324,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267329,"byte_end":267332,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure `indices.as_ref()` always returns the same value","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267337,"byte_end":267412,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ when called multiple times.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267417,"byte_end":267448,"line_start":479,"line_end":479,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268054,"byte_end":268061,"line_start":495,"line_end":495,"column_start":12,"column_end":19},"name":"in_ndim","qualname":"<SliceInfo<T, Din, Dout>>::in_ndim","value":"pub fn in_ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dimensions of the input array for\n [`.slice()`](crate::ArrayBase::slice).","sig":null,"attributes":[{"value":"/ Returns the number of dimensions of the input array for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267731,"byte_end":267790,"line_start":489,"line_end":489,"column_start":5,"column_end":64}},{"value":"/ [`.slice()`](crate::ArrayBase::slice).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267795,"byte_end":267837,"line_start":490,"line_end":490,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267842,"byte_end":267845,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ If `Din` is a fixed-size dimension type, then this is equivalent to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267850,"byte_end":267921,"line_start":492,"line_end":492,"column_start":5,"column_end":76}},{"value":"/ `Din::NDIM.unwrap()`. Otherwise, the value is calculated by iterating","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":267926,"byte_end":267999,"line_start":493,"line_end":493,"column_start":5,"column_end":78}},{"value":"/ over the `SliceInfoElem` elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268004,"byte_end":268042,"line_start":494,"line_end":494,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268571,"byte_end":268579,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"out_ndim","qualname":"<SliceInfo<T, Din, Dout>>::out_ndim","value":"pub fn out_ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dimensions after calling\n [`.slice()`](crate::ArrayBase::slice) (including taking\n subviews).","sig":null,"attributes":[{"value":"/ Returns the number of dimensions after calling","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268219,"byte_end":268269,"line_start":503,"line_end":503,"column_start":5,"column_end":55}},{"value":"/ [`.slice()`](crate::ArrayBase::slice) (including taking","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268274,"byte_end":268333,"line_start":504,"line_end":504,"column_start":5,"column_end":64}},{"value":"/ subviews).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268338,"byte_end":268352,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268357,"byte_end":268360,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ If `Dout` is a fixed-size dimension type, then this is equivalent to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268365,"byte_end":268437,"line_start":507,"line_end":507,"column_start":5,"column_end":77}},{"value":"/ `Dout::NDIM.unwrap()`. Otherwise, the value is calculated by iterating","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268442,"byte_end":268516,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ over the `SliceInfoElem` elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268521,"byte_end":268559,"line_start":509,"line_end":509,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":1974},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":271920,"byte_end":271932,"line_start":639,"line_end":639,"column_start":11,"column_end":23},"name":"SliceNextDim","qualname":"::slice::SliceNextDim","value":"SliceNextDim","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1979}],"decl_id":null,"docs":" Trait for determining dimensionality of input and output for [`s!`] macro.\n","sig":null,"attributes":[{"value":"/ Trait for determining dimensionality of input and output for [`s!`] macro.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":271816,"byte_end":271894,"line_start":637,"line_end":637,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":1975},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":272029,"byte_end":272034,"line_start":641,"line_end":641,"column_start":10,"column_end":15},"name":"InDim","qualname":"::slice::SliceNextDim::InDim","value":"type InDim: Dimension;","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":" Number of dimensions that this slicing argument consumes in the input array.\n","sig":null,"attributes":[{"value":"/ Number of dimensions that this slicing argument consumes in the input array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":271939,"byte_end":272019,"line_start":640,"line_end":640,"column_start":5,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":1976},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":272142,"byte_end":272148,"line_start":643,"line_end":643,"column_start":10,"column_end":16},"name":"OutDim","qualname":"::slice::SliceNextDim::OutDim","value":"type OutDim: Dimension;","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":" Number of dimensions that this slicing argument produces in the output array.\n","sig":null,"attributes":[{"value":"/ Number of dimensions that this slicing argument produces in the output array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":272051,"byte_end":272132,"line_start":642,"line_end":642,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":272169,"byte_end":272180,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"next_in_dim","qualname":"::slice::SliceNextDim::next_in_dim","value":"pub fn next_in_dim<D>(&Self, PhantomData<D>)\n-> PhantomData<<D as DimAdd<Self::InDim>>::Output> where D: Dimension +\nDimAdd<Self::InDim>","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":272355,"byte_end":272367,"line_start":652,"line_end":652,"column_start":8,"column_end":20},"name":"next_out_dim","qualname":"::slice::SliceNextDim::next_out_dim","value":"pub fn next_out_dim<D>(&Self, PhantomData<D>)\n-> PhantomData<<D as DimAdd<Self::OutDim>>::Output> where D: Dimension +\nDimAdd<Self::OutDim>","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1983},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281368,"byte_end":281381,"line_start":883,"line_end":883,"column_start":11,"column_end":24},"name":"MultiSliceArg","qualname":"::slice::MultiSliceArg","value":"MultiSliceArg<'a, A, D>","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":5082}],"decl_id":null,"docs":" Slicing information describing multiple mutable, disjoint slices.","sig":null,"attributes":[{"value":"/ Slicing information describing multiple mutable, disjoint slices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281134,"byte_end":281203,"line_start":879,"line_end":879,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281204,"byte_end":281207,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ It's unfortunate that we need `'a` and `A` to be parameters of the trait,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281208,"byte_end":281285,"line_start":881,"line_end":881,"column_start":1,"column_end":78}},{"value":"/ but they're necessary until Rust supports generic associated types.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281286,"byte_end":281357,"line_start":882,"line_end":882,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1987},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281503,"byte_end":281509,"line_start":889,"line_end":889,"column_start":10,"column_end":16},"name":"Output","qualname":"::slice::MultiSliceArg::Output","value":"type Output;","parent":{"krate":0,"index":1983},"children":[],"decl_id":null,"docs":" The type of the slices created by `.multi_slice_move()`.\n","sig":null,"attributes":[{"value":"/ The type of the slices created by `.multi_slice_move()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281433,"byte_end":281493,"line_start":888,"line_end":888,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281710,"byte_end":281726,"line_start":895,"line_end":895,"column_start":8,"column_end":24},"name":"multi_slice_move","qualname":"::slice::MultiSliceArg::multi_slice_move","value":"pub fn multi_slice_move(&Self, ArrayViewMut) -> Self::Output","parent":{"krate":0,"index":1983},"children":[],"decl_id":null,"docs":" Split the view into multiple disjoint slices.","sig":null,"attributes":[{"value":"/ Split the view into multiple disjoint slices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281516,"byte_end":281565,"line_start":891,"line_end":891,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281570,"byte_end":281573,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ **Panics** if performing any individual slice panics or if the slices","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281578,"byte_end":281651,"line_start":893,"line_end":893,"column_start":5,"column_end":78}},{"value":"/ are not disjoint (i.e. if they intersect).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":281656,"byte_end":281702,"line_start":894,"line_end":894,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":2038},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286529,"byte_end":286534,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"stack","qualname":"::stacking::stack","value":"pub fn stack<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D::Larger>, ShapeError> where A: Clone, D: Dimension,\nD::Larger: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Stack arrays along the new axis.","sig":null,"attributes":[{"value":"/ Stack arrays along the new axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":285913,"byte_end":285949,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":285950,"byte_end":285953,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":285954,"byte_end":286009,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286010,"byte_end":286076,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286077,"byte_end":286135,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286136,"byte_end":286139,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286140,"byte_end":286147,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286148,"byte_end":286173,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286174,"byte_end":286177,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, stack, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286178,"byte_end":286221,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286222,"byte_end":286225,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286226,"byte_end":286243,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286244,"byte_end":286247,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286248,"byte_end":286276,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286277,"byte_end":286307,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286308,"byte_end":286320,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/     stack(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286321,"byte_end":286366,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/     == Ok(arr3(&[[[2., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286367,"byte_end":286398,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286399,"byte_end":286431,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/                  [[2., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286432,"byte_end":286463,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]]]))","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286464,"byte_end":286498,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286499,"byte_end":286505,"line_start":36,"line_end":36,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286506,"byte_end":286513,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286514,"byte_end":286521,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2041},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287403,"byte_end":287414,"line_start":72,"line_end":72,"column_start":8,"column_end":19},"name":"concatenate","qualname":"::stacking::concatenate","value":"pub fn concatenate<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D>, ShapeError> where A: Clone, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Concatenate arrays along the given axis.","sig":null,"attributes":[{"value":"/ Concatenate arrays along the given axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286763,"byte_end":286807,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286808,"byte_end":286811,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes, apart from along `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286812,"byte_end":286892,"line_start":54,"line_end":54,"column_start":1,"column_end":81}},{"value":"/ (may be made more flexible in the future).<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286893,"byte_end":286943,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":286944,"byte_end":287010,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287011,"byte_end":287069,"line_start":57,"line_end":57,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287070,"byte_end":287073,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287074,"byte_end":287081,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{arr2, Axis, concatenate};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287082,"byte_end":287125,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287126,"byte_end":287129,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287130,"byte_end":287158,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287159,"byte_end":287189,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287190,"byte_end":287202,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/     concatenate(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287203,"byte_end":287254,"line_start":65,"line_end":65,"column_start":1,"column_end":52}},{"value":"/     == Ok(arr2(&[[2., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287255,"byte_end":287285,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287286,"byte_end":287316,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/                  [2., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287317,"byte_end":287347,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.]]))","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287348,"byte_end":287380,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287381,"byte_end":287387,"line_start":70,"line_end":70,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":287388,"byte_end":287395,"line_start":71,"line_end":71,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2046},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289347,"byte_end":289361,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"stack_new_axis","qualname":"::stacking::stack_new_axis","value":"pub fn stack_new_axis<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D::Larger>, ShapeError> where A: Clone, D: Dimension,\nD::Larger: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Stack arrays along the new axis.","sig":null,"attributes":[{"value":"deprecated(note = \"Use under the name stack instead.\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288641,"byte_end":288712,"line_start":111,"line_end":111,"column_start":1,"column_end":72}},{"value":"/ Stack arrays along the new axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288713,"byte_end":288749,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288750,"byte_end":288753,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288754,"byte_end":288809,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288810,"byte_end":288876,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288877,"byte_end":288935,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288936,"byte_end":288939,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288940,"byte_end":288947,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288948,"byte_end":288973,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288974,"byte_end":288977,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, stack_new_axis, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":288978,"byte_end":289030,"line_start":121,"line_end":121,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289031,"byte_end":289034,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289035,"byte_end":289052,"line_start":123,"line_end":123,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289053,"byte_end":289056,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289057,"byte_end":289085,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289086,"byte_end":289116,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289117,"byte_end":289129,"line_start":127,"line_end":127,"column_start":1,"column_end":13}},{"value":"/     stack_new_axis(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289130,"byte_end":289184,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/     == Ok(arr3(&[[[2., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289185,"byte_end":289216,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289217,"byte_end":289249,"line_start":130,"line_end":130,"column_start":1,"column_end":33}},{"value":"/                  [[2., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289250,"byte_end":289281,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]]]))","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289282,"byte_end":289316,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289317,"byte_end":289323,"line_start":133,"line_end":133,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289324,"byte_end":289331,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/stacking.rs","byte_start":289332,"byte_end":289339,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2069},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332550,"byte_end":332564,"line_start":13,"line_end":13,"column_start":11,"column_end":25},"name":"IntoNdProducer","qualname":"::zip::ndproducer::IntoNdProducer","value":"IntoNdProducer","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073}],"decl_id":null,"docs":" Argument conversion into a producer.","sig":null,"attributes":[{"value":"/ Argument conversion into a producer.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332335,"byte_end":332375,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332376,"byte_end":332379,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Slices and vectors can be used (equivalent to 1-dimensional array views).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332380,"byte_end":332457,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332458,"byte_end":332461,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait is like `IntoIterator` for `NdProducers` instead of iterators.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332462,"byte_end":332539,"line_start":12,"line_end":12,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":2070},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332620,"byte_end":332624,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ndproducer::IntoNdProducer::Item","value":"type Item;","parent":{"krate":0,"index":2069},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332571,"byte_end":332610,"line_start":14,"line_end":14,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2071},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332674,"byte_end":332677,"line_start":17,"line_end":17,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ndproducer::IntoNdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2069},"children":[],"decl_id":null,"docs":" Dimension type of the producer\n","sig":null,"attributes":[{"value":"/ Dimension type of the producer","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332630,"byte_end":332664,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":2072},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332699,"byte_end":332705,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::ndproducer::IntoNdProducer::Output","value":"type Output: NdProducer<Dim = Self::Dim, Item = Self::Item>;","parent":{"krate":0,"index":2069},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332810,"byte_end":332823,"line_start":20,"line_end":20,"column_start":8,"column_end":21},"name":"into_producer","qualname":"::zip::ndproducer::IntoNdProducer::into_producer","value":"pub fn into_producer(Self) -> Self::Output","parent":{"krate":0,"index":2069},"children":[],"decl_id":null,"docs":" Convert the value into an `NdProducer`.\n","sig":null,"attributes":[{"value":"/ Convert the value into an `NdProducer`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332759,"byte_end":332802,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2080},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333901,"byte_end":333911,"line_start":55,"line_end":55,"column_start":11,"column_end":21},"name":"NdProducer","qualname":"::zip::ndproducer::NdProducer","value":"NdProducer","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":5141}],"decl_id":null,"docs":" A producer of an n-dimensional set of elements;\n for example an array view, mutable array view or an iterator\n that yields chunks.","sig":null,"attributes":[{"value":"/ A producer of an n-dimensional set of elements;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333045,"byte_end":333096,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"/ for example an array view, mutable array view or an iterator","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333097,"byte_end":333161,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ that yields chunks.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333162,"byte_end":333185,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333186,"byte_end":333189,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Producers are used as a arguments to [`Zip`](crate::Zip) and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333190,"byte_end":333254,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/ [`azip!()`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333255,"byte_end":333271,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333272,"byte_end":333275,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Comparison to `IntoIterator`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333276,"byte_end":333310,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333311,"byte_end":333314,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Most `NdProducers` are *iterable* (implement `IntoIterator`) but not directly","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333315,"byte_end":333396,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/ iterators. This separation is needed because the producer represents","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333397,"byte_end":333469,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ a multidimensional set of items, it can be split along a particular axis for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333470,"byte_end":333550,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ parallelization, and it has no fixed correspondance to a sequence.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333551,"byte_end":333621,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333622,"byte_end":333625,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The natural exception is one dimensional producers, like `AxisIter`, which","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333626,"byte_end":333704,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ implement `Iterator` directly","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333705,"byte_end":333738,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ (`AxisIter` traverses a one dimensional sequence, along an axis, while","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333739,"byte_end":333813,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ *producing* multidimensional items).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333814,"byte_end":333854,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333855,"byte_end":333858,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ See also [`IntoNdProducer`]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333859,"byte_end":333890,"line_start":54,"line_end":54,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":2081},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333967,"byte_end":333971,"line_start":57,"line_end":57,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ndproducer::NdProducer::Item","value":"type Item;","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":333918,"byte_end":333957,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2082},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334040,"byte_end":334043,"line_start":60,"line_end":60,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ndproducer::NdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" Dimension type\n","sig":null,"attributes":[{"value":"/ Dimension type","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334012,"byte_end":334030,"line_start":59,"line_end":59,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":2083},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334382,"byte_end":334385,"line_start":68,"line_end":68,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::ndproducer::NdProducer::Ptr","value":"type Ptr: Offset<Stride = Self::Stride>;","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" Pointer or stand-in for pointer\n","sig":null,"attributes":[{"value":"/ Pointer or stand-in for pointer","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334337,"byte_end":334372,"line_start":67,"line_end":67,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":2084},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334469,"byte_end":334475,"line_start":71,"line_end":71,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ndproducer::NdProducer::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" Pointer stride\n","sig":null,"attributes":[{"value":"/ Pointer stride","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334441,"byte_end":334459,"line_start":70,"line_end":70,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334510,"byte_end":334516,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"layout","qualname":"::zip::ndproducer::NdProducer::layout","value":"pub fn layout(&Self) -> Layout","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334584,"byte_end":334591,"line_start":76,"line_end":76,"column_start":8,"column_end":15},"name":"raw_dim","qualname":"::zip::ndproducer::NdProducer::raw_dim","value":"pub fn raw_dim(&Self) -> Self::Dim","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" Return the shape of the producer.\n","sig":null,"attributes":[{"value":"/ Return the shape of the producer.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334539,"byte_end":334576,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334639,"byte_end":334648,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"equal_dim","qualname":"::zip::ndproducer::NdProducer::equal_dim","value":"pub fn equal_dim(&Self, &Self::Dim) -> bool","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334746,"byte_end":334752,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::zip::ndproducer::NdProducer::as_ptr","value":"pub fn as_ptr(&Self) -> Self::Ptr","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334807,"byte_end":334813,"line_start":84,"line_end":84,"column_start":15,"column_end":21},"name":"as_ref","qualname":"::zip::ndproducer::NdProducer::as_ref","value":"pub unsafe fn as_ref(&Self, Self::Ptr) -> Self::Item","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334885,"byte_end":334893,"line_start":86,"line_end":86,"column_start":15,"column_end":23},"name":"uget_ptr","qualname":"::zip::ndproducer::NdProducer::uget_ptr","value":"pub unsafe fn uget_ptr(&Self, &Self::Dim) -> Self::Ptr","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":334956,"byte_end":334965,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"stride_of","qualname":"::zip::ndproducer::NdProducer::stride_of","value":"pub fn stride_of(&Self, Axis) -> <Self::Ptr as Offset>::Stride","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":335045,"byte_end":335062,"line_start":90,"line_end":90,"column_start":8,"column_end":25},"name":"contiguous_stride","qualname":"::zip::ndproducer::NdProducer::contiguous_stride","value":"pub fn contiguous_stride(&Self) -> Self::Stride","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":335113,"byte_end":335121,"line_start":92,"line_end":92,"column_start":8,"column_end":16},"name":"split_at","qualname":"::zip::ndproducer::NdProducer::split_at","value":"pub fn split_at(Self, Axis, usize) -> (Self, Self) where Self: Sized","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2094},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":335236,"byte_end":335242,"line_start":99,"line_end":99,"column_start":11,"column_end":17},"name":"Offset","qualname":"::zip::ndproducer::Offset","value":"Offset: Copy","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":5142}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2095},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":335260,"byte_end":335266,"line_start":100,"line_end":100,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ndproducer::Offset::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":335288,"byte_end":335301,"line_start":101,"line_end":101,"column_start":15,"column_end":28},"name":"stride_offset","qualname":"::zip::ndproducer::Offset::stride_offset","value":"pub unsafe fn stride_offset(Self, Self::Stride, usize) -> Self","parent":{"krate":0,"index":2094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2236},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":296104,"byte_end":296110,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::Broadcast::Output","value":"type Output: NdProducer<Dim = E::Dim>;","parent":{"krate":0,"index":2234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2253},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":297733,"byte_end":297737,"line_start":102,"line_end":102,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ZippableTuple::Item","value":"type Item;","parent":{"krate":0,"index":2252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2254},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":297748,"byte_end":297751,"line_start":103,"line_end":103,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::ZippableTuple::Ptr","value":"type Ptr: OffsetTuple<Args = Self::Stride> + Copy;","parent":{"krate":0,"index":2252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2255},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":297803,"byte_end":297806,"line_start":104,"line_end":104,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ZippableTuple::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2256},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":297828,"byte_end":297834,"line_start":105,"line_end":105,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ZippableTuple::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5151},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300939,"byte_end":300942,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"Zip","qualname":"::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157}],"decl_id":null,"docs":" Lock step function application across several arrays or other producers.","sig":null,"attributes":[{"value":"/ Lock step function application across several arrays or other producers.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298167,"byte_end":298243,"line_start":114,"line_end":114,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298244,"byte_end":298247,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Zip allows matching several producers to each other elementwise and applying","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298248,"byte_end":298328,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ a function over all tuples of elements (one item from each input at","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298329,"byte_end":298400,"line_start":117,"line_end":117,"column_start":1,"column_end":72}},{"value":"/ a time).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298401,"byte_end":298413,"line_start":118,"line_end":118,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298414,"byte_end":298417,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ In general, the zip uses a tuple of producers","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298418,"byte_end":298467,"line_start":120,"line_end":120,"column_start":1,"column_end":50}},{"value":"/ ([`NdProducer`] trait) that all have to be of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298468,"byte_end":298521,"line_start":121,"line_end":121,"column_start":1,"column_end":54}},{"value":"/ same shape. The NdProducer implementation defines what its item type is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298522,"byte_end":298597,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/ (for example if it's a shared reference, mutable reference or an array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298598,"byte_end":298672,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ view etc).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298673,"byte_end":298687,"line_start":124,"line_end":124,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298688,"byte_end":298691,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ If all the input arrays are of the same memory layout the zip performs much","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298692,"byte_end":298771,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ better and the compiler can usually vectorize the loop (if applicable).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298772,"byte_end":298847,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298848,"byte_end":298851,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The order elements are visited is not specified. The producers don’t have to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298852,"byte_end":298934,"line_start":129,"line_end":129,"column_start":1,"column_end":81}},{"value":"/ have the same item type.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298935,"byte_end":298963,"line_start":130,"line_end":130,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298964,"byte_end":298967,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `Zip` has two methods for function application: `for_each` and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":298968,"byte_end":299038,"line_start":132,"line_end":132,"column_start":1,"column_end":71}},{"value":"/ `fold_while`. The zip object can be split, which allows parallelization.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299039,"byte_end":299115,"line_start":133,"line_end":133,"column_start":1,"column_end":77}},{"value":"/ A read-only zip object (no mutable producers) can be cloned.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299116,"byte_end":299180,"line_start":134,"line_end":134,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299181,"byte_end":299184,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ See also the [`azip!()`] which offers a convenient shorthand","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299185,"byte_end":299249,"line_start":136,"line_end":136,"column_start":1,"column_end":65}},{"value":"/ to common ways to use `Zip`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299250,"byte_end":299282,"line_start":137,"line_end":137,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299283,"byte_end":299286,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299287,"byte_end":299294,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299295,"byte_end":299316,"line_start":140,"line_end":140,"column_start":1,"column_end":22}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299317,"byte_end":299341,"line_start":141,"line_end":141,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299342,"byte_end":299345,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ type M = Array2<f64>;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299346,"byte_end":299371,"line_start":143,"line_end":143,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299372,"byte_end":299375,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ // Create four 2d arrays of the same size","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299376,"byte_end":299421,"line_start":145,"line_end":145,"column_start":1,"column_end":46}},{"value":"/ let mut a = M::zeros((64, 32));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299422,"byte_end":299457,"line_start":146,"line_end":146,"column_start":1,"column_end":36}},{"value":"/ let b = M::from_elem(a.dim(), 1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299458,"byte_end":299496,"line_start":147,"line_end":147,"column_start":1,"column_end":39}},{"value":"/ let c = M::from_elem(a.dim(), 2.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299497,"byte_end":299535,"line_start":148,"line_end":148,"column_start":1,"column_end":39}},{"value":"/ let d = M::from_elem(a.dim(), 3.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299536,"byte_end":299574,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299575,"byte_end":299578,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ // Example 1: Perform an elementwise arithmetic operation across","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299579,"byte_end":299647,"line_start":151,"line_end":151,"column_start":1,"column_end":69}},{"value":"/ // the four arrays a, b, c, d.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299648,"byte_end":299682,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299683,"byte_end":299686,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut a)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299687,"byte_end":299708,"line_start":154,"line_end":154,"column_start":1,"column_end":22}},{"value":"/     .and(&b)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299709,"byte_end":299725,"line_start":155,"line_end":155,"column_start":1,"column_end":17}},{"value":"/     .and(&c)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299726,"byte_end":299742,"line_start":156,"line_end":156,"column_start":1,"column_end":17}},{"value":"/     .and(&d)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299743,"byte_end":299759,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/     .for_each(|w, &x, &y, &z| {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299760,"byte_end":299795,"line_start":158,"line_end":158,"column_start":1,"column_end":36}},{"value":"/         *w += x + y * z;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299796,"byte_end":299824,"line_start":159,"line_end":159,"column_start":1,"column_end":29}},{"value":"/     });","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299825,"byte_end":299836,"line_start":160,"line_end":160,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299837,"byte_end":299840,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ // Example 2: Create a new array `totals` with one entry per row of `a`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299841,"byte_end":299917,"line_start":162,"line_end":162,"column_start":1,"column_end":77}},{"value":"/ //  Use Zip to traverse the rows of `a` and assign to the corresponding","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299918,"byte_end":299993,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"/ //  entry in `totals` with the sum across each row.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":299994,"byte_end":300049,"line_start":164,"line_end":164,"column_start":1,"column_end":56}},{"value":"/ //  This is possible because the producer for `totals` and the row producer","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300050,"byte_end":300129,"line_start":165,"line_end":165,"column_start":1,"column_end":80}},{"value":"/ //  for `a` have the same shape and dimensionality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300130,"byte_end":300185,"line_start":166,"line_end":166,"column_start":1,"column_end":56}},{"value":"/ //  The rows producer yields one array view (`row`) per iteration.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300186,"byte_end":300256,"line_start":167,"line_end":167,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300257,"byte_end":300260,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{Array1, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300261,"byte_end":300293,"line_start":169,"line_end":169,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300294,"byte_end":300297,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ let mut totals = Array1::zeros(a.nrows());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300298,"byte_end":300344,"line_start":171,"line_end":171,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300345,"byte_end":300348,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut totals)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300349,"byte_end":300375,"line_start":173,"line_end":173,"column_start":1,"column_end":27}},{"value":"/     .and(a.rows())","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300376,"byte_end":300398,"line_start":174,"line_end":174,"column_start":1,"column_end":23}},{"value":"/     .for_each(|totals, row| *totals = row.sum());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300399,"byte_end":300452,"line_start":175,"line_end":175,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300453,"byte_end":300456,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ // Check the result against the built in `.sum_axis()` along axis 1.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300457,"byte_end":300529,"line_start":177,"line_end":177,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(totals, a.sum_axis(Axis(1)));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300530,"byte_end":300574,"line_start":178,"line_end":178,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300575,"byte_end":300578,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300579,"byte_end":300582,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ // Example 3: Recreate Example 2 using map_collect to make a new array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300583,"byte_end":300657,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300658,"byte_end":300661,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ let totals2 = Zip::from(a.rows()).map_collect(|row| row.sum());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300662,"byte_end":300729,"line_start":183,"line_end":183,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300730,"byte_end":300733,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ // Check the result against the previous example.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300734,"byte_end":300787,"line_start":185,"line_end":185,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(totals, totals2);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300788,"byte_end":300820,"line_start":186,"line_end":186,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300821,"byte_end":300828,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"must_use = \"zipping producers is lazy and does nothing unless consumed\"","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":300853,"byte_end":300927,"line_start":189,"line_end":189,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301459,"byte_end":301463,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"from","qualname":"<Zip<(P,), D>>::from","value":"pub fn from<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D, Item\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` from the input array or other producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` from the input array or other producer `p`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301240,"byte_end":301306,"line_start":205,"line_end":205,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301311,"byte_end":301314,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301319,"byte_end":301382,"line_start":207,"line_end":207,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301387,"byte_end":301447,"line_start":208,"line_end":208,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302202,"byte_end":302209,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"indexed","qualname":"<Zip<(Indices<D>, P), D>>::indexed","value":"pub fn indexed<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D,\nItem = D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` with an index producer and the producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` with an index producer and the producer `p`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301932,"byte_end":301999,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302004,"byte_end":302007,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302012,"byte_end":302075,"line_start":231,"line_end":231,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302080,"byte_end":302140,"line_start":232,"line_end":232,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302145,"byte_end":302148,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ *Note:* Indexed zip has overhead.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302153,"byte_end":302190,"line_start":234,"line_end":234,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302851,"byte_end":302855,"line_start":265,"line_end":265,"column_start":12,"column_end":16},"name":"size","qualname":"<Zip<Parts, D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return a the number of element tuples in the Zip\n","sig":null,"attributes":[{"value":"/ Return a the number of element tuples in the Zip","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302787,"byte_end":302839,"line_start":264,"line_end":264,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2312},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":309547,"byte_end":309551,"line_start":472,"line_end":472,"column_start":10,"column_end":14},"name":"Args","qualname":"::zip::OffsetTuple::Args","value":"type Args;","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5725},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327177,"byte_end":327185,"line_start":925,"line_end":925,"column_start":5,"column_end":13},"name":"Continue","qualname":"::zip::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":5723},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327136,"byte_end":327172,"line_start":924,"line_end":924,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5728},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327246,"byte_end":327250,"line_start":927,"line_end":927,"column_start":5,"column_end":9},"name":"Done","qualname":"::zip::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":5723},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327194,"byte_end":327241,"line_start":926,"line_end":926,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":5723},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327117,"byte_end":327126,"line_start":923,"line_end":923,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::zip::FoldWhile","value":"pub enum FoldWhile<T> {\n\n    /// Continue folding with this value\n    Continue(T),\n\n    /// Fold is complete and will return this value\n    Done(T),\n}","parent":null,"children":[{"krate":0,"index":5725},{"krate":0,"index":5728}],"decl_id":null,"docs":" Value controlling the execution of `.fold_while` on `Zip`.\n","sig":null,"attributes":[{"value":"/ Value controlling the execution of `.fold_while` on `Zip`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327015,"byte_end":327077,"line_start":921,"line_end":921,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327323,"byte_end":327333,"line_start":932,"line_end":932,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value\n","sig":null,"attributes":[{"value":"/ Return the inner value","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327285,"byte_end":327311,"line_start":931,"line_end":931,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327515,"byte_end":327522,"line_start":939,"line_end":939,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if it is `Done`, false if `Continue`\n","sig":null,"attributes":[{"value":"/ Return true if it is `Done`, false if `Continue`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327451,"byte_end":327503,"line_start":938,"line_end":938,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5739},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384296,"byte_end":384300,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"Axes","qualname":"::dimension::axes::Axes","value":"Axes {  }","parent":null,"children":[{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745}],"decl_id":null,"docs":" An iterator over the length and stride of each axis of an array.","sig":null,"attributes":[{"value":"/ An iterator over the length and stride of each axis of an array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383623,"byte_end":383691,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383692,"byte_end":383695,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This iterator is created from the array method","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383696,"byte_end":383746,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ [`.axes()`](crate::ArrayBase::axes).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383747,"byte_end":383787,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383788,"byte_end":383791,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is [`AxisDescription`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383792,"byte_end":383841,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383842,"byte_end":383845,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383846,"byte_end":383860,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383861,"byte_end":383864,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383865,"byte_end":383872,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383873,"byte_end":383897,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383898,"byte_end":383920,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383921,"byte_end":383924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let a = Array3::<f32>::zeros((3, 5, 4));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383925,"byte_end":383969,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383970,"byte_end":383973,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // find the largest axis in the array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":383974,"byte_end":384015,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ // check the axis index and its length","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384016,"byte_end":384058,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384059,"byte_end":384062,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let largest_axis = a.axes()","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384063,"byte_end":384094,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/                     .max_by_key(|ax| ax.len)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384095,"byte_end":384143,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/                     .unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384144,"byte_end":384178,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(largest_axis.axis, Axis(1));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384179,"byte_end":384222,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(largest_axis.len, 5);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384223,"byte_end":384259,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384260,"byte_end":384267,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5750},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384467,"byte_end":384482,"line_start":50,"line_end":50,"column_start":12,"column_end":27},"name":"AxisDescription","qualname":"::dimension::axes::AxisDescription","value":"AxisDescription { axis, len, stride }","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753}],"decl_id":null,"docs":" Description of the axis, its length and its stride.\n","sig":null,"attributes":[{"value":"/ Description of the axis, its length and its stride.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384383,"byte_end":384438,"line_start":48,"line_end":48,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5751},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384525,"byte_end":384529,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"name":"axis","qualname":"::dimension::axes::AxisDescription::axis","value":"dimension::axis::Axis","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" Axis identifier (index)\n","sig":null,"attributes":[{"value":"/ Axis identifier (index)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384489,"byte_end":384516,"line_start":51,"line_end":51,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5752},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384601,"byte_end":384604,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"name":"len","qualname":"::dimension::axes::AxisDescription::len","value":"usize","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" Length in count of elements of the current axis\n","sig":null,"attributes":[{"value":"/ Length in count of elements of the current axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384541,"byte_end":384592,"line_start":53,"line_end":53,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5753},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384677,"byte_end":384683,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"stride","qualname":"::dimension::axes::AxisDescription::stride","value":"isize","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" Stride in count of elements of the current axis\n","sig":null,"attributes":[{"value":"/ Stride in count of elements of the current axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384617,"byte_end":384668,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385030,"byte_end":385034,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"axis","qualname":"<AxisDescription>::axis","value":"pub fn axis(Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return axis\n","sig":null,"attributes":[{"value":"/ Return axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384911,"byte_end":384926,"line_start":65,"line_end":65,"column_start":5,"column_end":20}},{"value":"deprecated(note = \"Use .axis field instead\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384931,"byte_end":384996,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385001,"byte_end":385018,"line_start":67,"line_end":67,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385199,"byte_end":385202,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"len","qualname":"<AxisDescription>::len","value":"pub fn len(Self) -> Ix","parent":null,"children":[],"decl_id":null,"docs":" Return length\n","sig":null,"attributes":[{"value":"/ Return length","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385079,"byte_end":385096,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"Use .len field instead\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385101,"byte_end":385165,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385170,"byte_end":385187,"line_start":73,"line_end":73,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385367,"byte_end":385373,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"stride","qualname":"<AxisDescription>::stride","value":"pub fn stride(Self) -> Ixs","parent":null,"children":[],"decl_id":null,"docs":" Return stride\n","sig":null,"attributes":[{"value":"/ Return stride","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385244,"byte_end":385261,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"Use .stride field instead\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385266,"byte_end":385333,"line_start":78,"line_end":78,"column_start":5,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385338,"byte_end":385355,"line_start":79,"line_end":79,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5766},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388577,"byte_end":388581,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Axis","qualname":"::dimension::axis::Axis","value":"","parent":null,"children":[],"decl_id":null,"docs":" An axis index.","sig":null,"attributes":[{"value":"/ An axis index.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":387683,"byte_end":387701,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":387702,"byte_end":387705,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An axis one of an array’s “dimensions”; an *n*-dimensional array has *n*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":387706,"byte_end":387788,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ axes.  Axis *0* is the array’s outermost axis and *n*-1 is the innermost.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":387789,"byte_end":387868,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":387869,"byte_end":387872,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ All array axis arguments use this type to make the code easier to write","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":387873,"byte_end":387948,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ correctly and easier to understand.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":387949,"byte_end":387988,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/ ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":387989,"byte_end":387993,"line_start":16,"line_end":16,"column_start":1,"column_end":5}},{"value":"/ For example: in a method like `index_axis(axis, index)` the code becomes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":387994,"byte_end":388070,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ self-explanatory when it's called like `.index_axis(Axis(1), i)`; it's","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388071,"byte_end":388145,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ evident which integer is the axis number and which is the index.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388146,"byte_end":388214,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388215,"byte_end":388218,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note: This type does **not** implement From/Into usize and similar trait","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388219,"byte_end":388295,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ based conversions, because we want to preserve code readability and quality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388296,"byte_end":388376,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388377,"byte_end":388380,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Axis(1)` in itself is a very clear code style and the style that should be","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388381,"byte_end":388460,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ avoided is code like `1.into()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388461,"byte_end":388497,"line_start":25,"line_end":25,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5768},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388582,"byte_end":388591,"line_start":27,"line_end":27,"column_start":17,"column_end":26},"name":"0","qualname":"::dimension::axis::Axis::0","value":"usize","parent":{"krate":0,"index":5766},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388678,"byte_end":388683,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"index","qualname":"<Axis>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the axis.\n","sig":null,"attributes":[{"value":"/ Return the index of the axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388611,"byte_end":388644,"line_start":30,"line_end":30,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388649,"byte_end":388666,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2411},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/broadcast.rs","byte_start":389961,"byte_end":389967,"line_start":37,"line_end":37,"column_start":11,"column_end":17},"name":"DimMax","qualname":"::dimension::broadcast::DimMax","value":"DimMax<Other: Dimension>","parent":null,"children":[{"krate":0,"index":2413}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2413},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/broadcast.rs","byte_start":390054,"byte_end":390060,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Output","qualname":"::dimension::broadcast::DimMax::Output","value":"type Output: Dimension;","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" The resulting dimension type after broadcasting.\n","sig":null,"attributes":[{"value":"/ The resulting dimension type after broadcasting.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/broadcast.rs","byte_start":389992,"byte_end":390044,"line_start":38,"line_end":38,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2433},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":394999,"byte_end":395012,"line_start":42,"line_end":42,"column_start":11,"column_end":24},"name":"IntoDimension","qualname":"::dimension::conversion::IntoDimension","value":"IntoDimension","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2435}],"decl_id":null,"docs":" Argument conversion a dimension.\n","sig":null,"attributes":[{"value":"/ Argument conversion a dimension.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":394952,"byte_end":394988,"line_start":41,"line_end":41,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":2434},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395024,"byte_end":395027,"line_start":43,"line_end":43,"column_start":10,"column_end":13},"name":"Dim","qualname":"::dimension::conversion::IntoDimension::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395047,"byte_end":395061,"line_start":44,"line_end":44,"column_start":8,"column_end":22},"name":"into_dimension","qualname":"::dimension::conversion::IntoDimension::into_dimension","value":"pub fn into_dimension(Self) -> Self::Dim","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2450},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395725,"byte_end":395727,"line_start":83,"line_end":83,"column_start":10,"column_end":12},"name":"To","qualname":"::dimension::conversion::Convert::To","value":"type To;","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6079},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398906,"byte_end":398909,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"Dim","qualname":"::dimension::dim::Dim","value":"Dim {  }","parent":null,"children":[{"krate":0,"index":6081}],"decl_id":null,"docs":" Dimension description.","sig":null,"attributes":[{"value":"/ Dimension description.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398237,"byte_end":398263,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398264,"byte_end":398267,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `Dim` describes the number of axes and the length of each axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398268,"byte_end":398334,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ in an array. It is also used as an index type.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398335,"byte_end":398385,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398386,"byte_end":398389,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See also the [`Dimension`] trait for its methods and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398390,"byte_end":398446,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ operations.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398447,"byte_end":398462,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398463,"byte_end":398466,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398467,"byte_end":398481,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398482,"byte_end":398485,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ To create an array with a particular dimension, you'd just pass","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398486,"byte_end":398553,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ a tuple (in this example (3, 2) is used), which is converted to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398554,"byte_end":398621,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ `Dim` by the array constructor.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398622,"byte_end":398657,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398658,"byte_end":398661,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398662,"byte_end":398669,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398670,"byte_end":398694,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Dim;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398695,"byte_end":398716,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398717,"byte_end":398720,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut array = Array2::zeros((3, 2));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398721,"byte_end":398763,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/ array[[0, 0]] = 1.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398764,"byte_end":398787,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(array.raw_dim(), Dim([3, 2]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398788,"byte_end":398833,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398834,"byte_end":398841,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2469},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":399329,"byte_end":399332,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"Dim","qualname":"::dimension::dim::Dim","value":"pub fn Dim<T>(T) -> T::Dim where T: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value.\n","sig":null,"attributes":[{"value":"/ Create a new dimension value.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":399263,"byte_end":399296,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":399297,"byte_end":399321,"line_start":59,"line_end":59,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":2533},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403456,"byte_end":403465,"line_start":31,"line_end":31,"column_start":11,"column_end":20},"name":"Dimension","qualname":"::dimension::dimension_trait::Dimension","value":"Dimension: Clone + Eq + Debug + Send + Sync + Default + IndexMut<usize, Output = usize> +\nAdd<Self, Output = Self> + AddAssign + for<'x> AddAssign<&'x Self> + Sub<Self,\nOutput = Self> + SubAssign + for<'x> SubAssign<&'x Self> + Mul<usize, Output =\nSelf> + Mul<Self, Output = Self> + MulAssign + for<'x> MulAssign<&'x Self> +\nMulAssign<usize> + DimMax<Ix0, Output = Self> + DimMax<Self, Output = Self> +\nDimMax<IxDyn, Output = IxDyn> + DimMax<<Self as Dimension>::Smaller, Output =\nSelf> + DimMax<<Self as Dimension>::Larger, Output =\n<Self as Dimension>::Larger> + DimAdd<Self> +\nDimAdd<<Self as Dimension>::Smaller> + DimAdd<<Self as Dimension>::Larger> +\nDimAdd<Ix0, Output = Self> + DimAdd<Ix1, Output =\n<Self as Dimension>::Larger> + DimAdd<IxDyn, Output = IxDyn>","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2555},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2571},{"krate":0,"index":2574},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":6160}],"decl_id":null,"docs":" Array shape and index trait.","sig":null,"attributes":[{"value":"/ Array shape and index trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403231,"byte_end":403263,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403264,"byte_end":403267,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods and operations that can be used on","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403268,"byte_end":403345,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ dimensions and indices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403346,"byte_end":403373,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403374,"byte_end":403377,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ **Note:** *This trait can not be implemented outside the crate*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403378,"byte_end":403445,"line_start":30,"line_end":30,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":2537},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404537,"byte_end":404541,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"name":"NDIM","qualname":"::dimension::dimension_trait::Dimension::NDIM","value":"Option<usize>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" For fixed-size dimension representations (e.g. `Ix2`), this should be\n `Some(ndim)`, and for variable-size dimension representations (e.g.\n `IxDyn`), this should be `None`.\n","sig":null,"attributes":[{"value":"/ For fixed-size dimension representations (e.g. `Ix2`), this should be","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404336,"byte_end":404409,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ `Some(ndim)`, and for variable-size dimension representations (e.g.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404414,"byte_end":404485,"line_start":63,"line_end":63,"column_start":5,"column_end":76}},{"value":"/ `IxDyn`), this should be `None`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404490,"byte_end":404526,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":2538},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404759,"byte_end":404766,"line_start":72,"line_end":72,"column_start":10,"column_end":17},"name":"Pattern","qualname":"::dimension::dimension_trait::Dimension::Pattern","value":"type Pattern: IntoDimension<Dim = Self> + Clone + Debug + PartialEq + Eq + Default;","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Pattern matching friendly form of the dimension value.","sig":null,"attributes":[{"value":"/ Pattern matching friendly form of the dimension value.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404562,"byte_end":404620,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404625,"byte_end":404628,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ - For `Ix1`: `usize`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404633,"byte_end":404658,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/ - For `Ix2`: `(usize, usize)`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404663,"byte_end":404696,"line_start":69,"line_end":69,"column_start":5,"column_end":38}},{"value":"/ - and so on..","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404701,"byte_end":404718,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ - For `IxDyn`: `IxDyn`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404723,"byte_end":404749,"line_start":71,"line_end":71,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2539},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404894,"byte_end":404901,"line_start":74,"line_end":74,"column_start":10,"column_end":17},"name":"Smaller","qualname":"::dimension::dimension_trait::Dimension::Smaller","value":"type Smaller: Dimension;","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Next smaller dimension (if applicable)\n","sig":null,"attributes":[{"value":"/ Next smaller dimension (if applicable)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404842,"byte_end":404884,"line_start":73,"line_end":73,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2540},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404953,"byte_end":404959,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Larger","qualname":"::dimension::dimension_trait::Dimension::Larger","value":"type Larger: Dimension + RemoveAxis;","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Next larger dimension\n","sig":null,"attributes":[{"value":"/ Next larger dimension","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404918,"byte_end":404943,"line_start":75,"line_end":75,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405052,"byte_end":405056,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"ndim","qualname":"::dimension::dimension_trait::Dimension::ndim","value":"pub fn ndim(&Self) -> usize","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Returns the number of dimensions (number of axes).\n","sig":null,"attributes":[{"value":"/ Returns the number of dimensions (number of axes).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404990,"byte_end":405044,"line_start":78,"line_end":78,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405152,"byte_end":405164,"line_start":82,"line_end":82,"column_start":8,"column_end":20},"name":"into_pattern","qualname":"::dimension::dimension_trait::Dimension::into_pattern","value":"pub fn into_pattern(Self) -> Self::Pattern","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Convert the dimension into a pattern matching friendly value.\n","sig":null,"attributes":[{"value":"/ Convert the dimension into a pattern matching friendly value.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405079,"byte_end":405144,"line_start":81,"line_end":81,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405260,"byte_end":405264,"line_start":85,"line_end":85,"column_start":8,"column_end":12},"name":"size","qualname":"::dimension::dimension_trait::Dimension::size","value":"pub fn size(&Self) -> usize","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Compute the size of the dimension (number of elements)\n","sig":null,"attributes":[{"value":"/ Compute the size of the dimension (number of elements)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405194,"byte_end":405252,"line_start":84,"line_end":84,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405411,"byte_end":405423,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"size_checked","qualname":"::dimension::dimension_trait::Dimension::size_checked","value":"pub fn size_checked(&Self) -> Option<usize>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Compute the size while checking for overflow.\n","sig":null,"attributes":[{"value":"/ Compute the size while checking for overflow.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405354,"byte_end":405403,"line_start":89,"line_end":89,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405595,"byte_end":405600,"line_start":97,"line_end":97,"column_start":8,"column_end":13},"name":"slice","qualname":"::dimension::dimension_trait::Dimension::slice","value":"pub fn slice(&Self) -> &[Ix]","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405645,"byte_end":405654,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"slice_mut","qualname":"::dimension::dimension_trait::Dimension::slice_mut","value":"pub fn slice_mut(&mut Self) -> &mut [Ix]","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405730,"byte_end":405743,"line_start":103,"line_end":103,"column_start":8,"column_end":21},"name":"as_array_view","qualname":"::dimension::dimension_trait::Dimension::as_array_view","value":"pub fn as_array_view(&Self) -> ArrayView1<, Ix>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Borrow as a read-only array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-only array view.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405685,"byte_end":405722,"line_start":102,"line_end":102,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405871,"byte_end":405888,"line_start":108,"line_end":108,"column_start":8,"column_end":25},"name":"as_array_view_mut","qualname":"::dimension::dimension_trait::Dimension::as_array_view_mut","value":"pub fn as_array_view_mut(&mut Self) -> ArrayViewMut1<, Ix>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Borrow as a read-write array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-write array view.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":405825,"byte_end":405863,"line_start":107,"line_end":107,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":406006,"byte_end":406011,"line_start":113,"line_end":113,"column_start":8,"column_end":13},"name":"equal","qualname":"::dimension::dimension_trait::Dimension::equal","value":"pub fn equal(&Self, &Self) -> bool","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":406330,"byte_end":406345,"line_start":122,"line_end":122,"column_start":8,"column_end":23},"name":"default_strides","qualname":"::dimension::dimension_trait::Dimension::default_strides","value":"pub fn default_strides(&Self) -> Self","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Returns the strides for a standard layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a standard layout array with the given shape.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":406088,"byte_end":406161,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":406166,"byte_end":406169,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":406174,"byte_end":406248,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":406253,"byte_end":406303,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":407253,"byte_end":407268,"line_start":147,"line_end":147,"column_start":8,"column_end":23},"name":"fortran_strides","qualname":"::dimension::dimension_trait::Dimension::fortran_strides","value":"pub fn fortran_strides(&Self) -> Self","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Returns the strides for a Fortran layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a Fortran layout array with the given shape.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":407012,"byte_end":407084,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":407089,"byte_end":407092,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":407097,"byte_end":407171,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":407176,"byte_end":407226,"line_start":145,"line_end":145,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408183,"byte_end":408188,"line_start":173,"line_end":173,"column_start":8,"column_end":13},"name":"zeros","qualname":"::dimension::dimension_trait::Dimension::zeros","value":"pub fn zeros(usize) -> Self","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Creates a dimension of all zeros with the specified ndim.","sig":null,"attributes":[{"value":"/ Creates a dimension of all zeros with the specified ndim.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":407916,"byte_end":407977,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":407982,"byte_end":407985,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method is useful for generalizing over fixed-size and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":407990,"byte_end":408052,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/ variable-size dimension representations.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408057,"byte_end":408101,"line_start":170,"line_end":170,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408106,"byte_end":408109,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `Self` has a fixed size that is not `ndim`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408114,"byte_end":408175,"line_start":172,"line_end":172,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408252,"byte_end":408263,"line_start":177,"line_end":177,"column_start":8,"column_end":19},"name":"first_index","qualname":"::dimension::dimension_trait::Dimension::first_index","value":"pub fn first_index(&Self) -> Option<Self>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408235,"byte_end":408244,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408655,"byte_end":408663,"line_start":191,"line_end":191,"column_start":8,"column_end":16},"name":"next_for","qualname":"::dimension::dimension_trait::Dimension::next_for","value":"pub fn next_for(&Self, Self) -> Option<Self>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and return next index after `index`\n or None if there are no more.\n","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and return next index after `index`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408477,"byte_end":408547,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ or None if there are no more.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408552,"byte_end":408585,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":408638,"byte_end":408647,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409292,"byte_end":409302,"line_start":216,"line_end":216,"column_start":8,"column_end":18},"name":"next_for_f","qualname":"::dimension::dimension_trait::Dimension::next_for_f","value":"pub fn next_for_f(&Self, &mut Self) -> bool","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and create the next index after `index`\n Return false if iteration is done","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and create the next index after `index`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409122,"byte_end":409196,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ Return false if iteration is done","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409201,"byte_end":409238,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409243,"byte_end":409246,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Next in f-order","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409251,"byte_end":409270,"line_start":214,"line_end":214,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409275,"byte_end":409284,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409957,"byte_end":409975,"line_start":238,"line_end":238,"column_start":8,"column_end":26},"name":"strides_equivalent","qualname":"::dimension::dimension_trait::Dimension::strides_equivalent","value":"pub fn strides_equivalent<D>(&Self, &Self, &D) -> bool where D: Dimension","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Returns `true` iff `strides1` and `strides2` are equivalent for the\n shape `self`.","sig":null,"attributes":[{"value":"/ Returns `true` iff `strides1` and `strides2` are equivalent for the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409657,"byte_end":409728,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/ shape `self`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409733,"byte_end":409750,"line_start":231,"line_end":231,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409755,"byte_end":409758,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The strides are equivalent if, for each axis with length > 1, the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409763,"byte_end":409832,"line_start":233,"line_end":233,"column_start":5,"column_end":74}},{"value":"/ strides are equal.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409837,"byte_end":409859,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409864,"byte_end":409867,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note: Returns `false` if any of the ndims don't match.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":409872,"byte_end":409930,"line_start":236,"line_end":236,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":410404,"byte_end":410417,"line_start":251,"line_end":251,"column_start":8,"column_end":21},"name":"stride_offset","qualname":"::dimension::dimension_trait::Dimension::stride_offset","value":"pub fn stride_offset(&Self, &Self) -> isize","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Return stride offset for index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for index.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":410361,"byte_end":410396,"line_start":250,"line_end":250,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":410711,"byte_end":410732,"line_start":261,"line_end":261,"column_start":8,"column_end":29},"name":"stride_offset_checked","qualname":"::dimension::dimension_trait::Dimension::stride_offset_checked","value":"pub fn stride_offset_checked(&Self, &Self, &Self) -> Option<isize>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Return stride offset for this dimension and index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for this dimension and index.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":410649,"byte_end":410703,"line_start":260,"line_end":260,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":410898,"byte_end":410907,"line_start":266,"line_end":266,"column_start":8,"column_end":17},"name":"last_elem","qualname":"::dimension::dimension_trait::Dimension::last_elem","value":"pub fn last_elem(&Self) -> usize","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":411072,"byte_end":411085,"line_start":275,"line_end":275,"column_start":8,"column_end":21},"name":"set_last_elem","qualname":"::dimension::dimension_trait::Dimension::set_last_elem","value":"pub fn set_last_elem(&mut Self, usize)","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":411210,"byte_end":411223,"line_start":281,"line_end":281,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::dimension::dimension_trait::Dimension::is_contiguous","value":"pub fn is_contiguous(&Self, &Self) -> bool","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":412116,"byte_end":412145,"line_start":309,"line_end":309,"column_start":8,"column_end":37},"name":"_fastest_varying_stride_order","qualname":"::dimension::dimension_trait::Dimension::_fastest_varying_stride_order","value":"pub fn _fastest_varying_stride_order(&Self) -> Self","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Return the axis ordering corresponding to the fastest variation\n (in ascending order).","sig":null,"attributes":[{"value":"/ Return the axis ordering corresponding to the fastest variation","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":411932,"byte_end":411999,"line_start":304,"line_end":304,"column_start":5,"column_end":72}},{"value":"/ (in ascending order).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":412004,"byte_end":412029,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":412034,"byte_end":412037,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Assumes that no stride value appears twice.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":412042,"byte_end":412089,"line_start":307,"line_end":307,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":412601,"byte_end":412616,"line_start":324,"line_end":324,"column_start":8,"column_end":23},"name":"min_stride_axis","qualname":"::dimension::dimension_trait::Dimension::min_stride_axis","value":"pub fn min_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Compute the minimum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the minimum stride axis (absolute value), under the constraint","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":412456,"byte_end":412530,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":412535,"byte_end":412574,"line_start":322,"line_end":322,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":413119,"byte_end":413134,"line_start":339,"line_end":339,"column_start":8,"column_end":23},"name":"max_stride_axis","qualname":"::dimension::dimension_trait::Dimension::max_stride_axis","value":"pub fn max_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Compute the maximum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the maximum stride axis (absolute value), under the constraint","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":412974,"byte_end":413048,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":413053,"byte_end":413092,"line_start":337,"line_end":337,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":413568,"byte_end":413576,"line_start":352,"line_end":352,"column_start":8,"column_end":16},"name":"into_dyn","qualname":"::dimension::dimension_trait::Dimension::into_dyn","value":"pub fn into_dyn(Self) -> IxDyn","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" Convert the dimensional into a dynamic dimensional (IxDyn).\n","sig":null,"attributes":[{"value":"/ Convert the dimensional into a dynamic dimensional (IxDyn).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":413497,"byte_end":413560,"line_start":351,"line_end":351,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":413655,"byte_end":413669,"line_start":357,"line_end":357,"column_start":8,"column_end":22},"name":"from_dimension","qualname":"::dimension::dimension_trait::Dimension::from_dimension","value":"pub fn from_dimension<D2: Dimension>(&D2) -> Option<Self>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":413957,"byte_end":413968,"line_start":370,"line_end":370,"column_start":8,"column_end":19},"name":"insert_axis","qualname":"::dimension::dimension_trait::Dimension::insert_axis","value":"pub fn insert_axis(&Self, Axis) -> Self::Larger","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":414032,"byte_end":414047,"line_start":373,"line_end":373,"column_start":8,"column_end":23},"name":"try_remove_axis","qualname":"::dimension::dimension_trait::Dimension::try_remove_axis","value":"pub fn try_remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6234},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":431078,"byte_end":431087,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"IxDynImpl","qualname":"::dimension::dynindeximpl::IxDynImpl","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dynamic dimension or index type.","sig":null,"attributes":[{"value":"/ Dynamic dimension or index type.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430793,"byte_end":430829,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430830,"byte_end":430833,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Use `IxDyn` directly. This type implements a dynamic number of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430834,"byte_end":430900,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ dimensions or indices. Short dimensions are stored inline and don't need","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430901,"byte_end":430977,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ any dynamic memory allocation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430978,"byte_end":431012,"line_start":118,"line_end":118,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433793,"byte_end":433798,"line_start":228,"line_end":228,"column_start":12,"column_end":17},"name":"zeros","qualname":"<IxDyn>::zeros","value":"pub fn zeros(usize) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value with `n` axes, all zeros\n","sig":null,"attributes":[{"value":"/ Create a new dimension value with `n` axes, all zeros","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433710,"byte_end":433767,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433772,"byte_end":433781,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2791},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434552,"byte_end":434559,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"name":"NdIndex","qualname":"::dimension::ndindex::NdIndex","value":"NdIndex<E>: Debug","parent":null,"children":[{"krate":0,"index":2793},{"krate":0,"index":2794}],"decl_id":null,"docs":" Tuple or fixed size arrays that can be used to index an array.","sig":null,"attributes":[{"value":"/ Tuple or fixed size arrays that can be used to index an array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434193,"byte_end":434259,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434260,"byte_end":434263,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434264,"byte_end":434271,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434272,"byte_end":434294,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434295,"byte_end":434298,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut a = arr2(&[[0, 1],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434299,"byte_end":434329,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/                    [2, 3]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434330,"byte_end":434362,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a[[0, 1]], 1);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434363,"byte_end":434392,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a[[1, 1]], 3);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434393,"byte_end":434422,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ a[[1, 1]] += 1;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434423,"byte_end":434442,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(a[(1, 1)], 4);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434443,"byte_end":434472,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434473,"byte_end":434480,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434481,"byte_end":434517,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434598,"byte_end":434611,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"index_checked","qualname":"::dimension::ndindex::NdIndex::index_checked","value":"pub fn index_checked(&Self, &E, &E) -> Option<isize>","parent":{"krate":0,"index":2791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434685,"byte_end":434700,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"index_unchecked","qualname":"::dimension::ndindex::NdIndex::index_unchecked","value":"pub fn index_unchecked(&Self, &E) -> isize","parent":{"krate":0,"index":2791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2838},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ops.rs","byte_start":441201,"byte_end":441207,"line_start":4,"line_end":4,"column_start":11,"column_end":17},"name":"DimAdd","qualname":"::dimension::ops::DimAdd","value":"DimAdd<D: Dimension>","parent":null,"children":[{"krate":0,"index":2840}],"decl_id":null,"docs":" Adds the two dimensions at compile time.\n","sig":null,"attributes":[{"value":"/ Adds the two dimensions at compile time.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ops.rs","byte_start":441146,"byte_end":441190,"line_start":3,"line_end":3,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2840},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ops.rs","byte_start":441272,"byte_end":441278,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Output","qualname":"::dimension::ops::DimAdd::Output","value":"type Output: Dimension;","parent":{"krate":0,"index":2838},"children":[],"decl_id":null,"docs":" The sum of the two dimensions.\n","sig":null,"attributes":[{"value":"/ The sum of the two dimensions.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ops.rs","byte_start":441228,"byte_end":441262,"line_start":5,"line_end":5,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2857},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444267,"byte_end":444277,"line_start":15,"line_end":15,"column_start":11,"column_end":21},"name":"RemoveAxis","qualname":"::dimension::remove_axis::RemoveAxis","value":"RemoveAxis: Dimension","parent":null,"children":[{"krate":0,"index":2858}],"decl_id":null,"docs":" Array shape with a next smaller dimension.","sig":null,"attributes":[{"value":"/ Array shape with a next smaller dimension.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444071,"byte_end":444117,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444118,"byte_end":444121,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `RemoveAxis` defines a larger-than relation for array shapes:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444122,"byte_end":444187,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/ removing one axis from *Self* gives smaller dimension *Smaller*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444188,"byte_end":444256,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444298,"byte_end":444309,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"remove_axis","qualname":"::dimension::remove_axis::RemoveAxis::remove_axis","value":"pub fn remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":2857},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3027},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","parent":null,"children":[{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":9639},{"krate":0,"index":3039},{"krate":0,"index":9641},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":9693},{"krate":0,"index":3070},{"krate":0,"index":9695},{"krate":0,"index":3071},{"krate":0,"index":9697},{"krate":0,"index":3072},{"krate":0,"index":9699},{"krate":0,"index":3073},{"krate":0,"index":9701},{"krate":0,"index":3074},{"krate":0,"index":9703},{"krate":0,"index":3075},{"krate":0,"index":9705},{"krate":0,"index":3076},{"krate":0,"index":9707},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":9731},{"krate":0,"index":3091},{"krate":0,"index":3092}],"decl_id":null,"docs":" ndarray prelude.","sig":null,"attributes":[{"value":"/ ndarray prelude.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458136,"byte_end":458156,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458157,"byte_end":458160,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module contains the most used types, type aliases, traits, functions,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458161,"byte_end":458239,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ and macros that you can import easily as a group.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458240,"byte_end":458293,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458294,"byte_end":458297,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458298,"byte_end":458305,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use ndarray::prelude::*;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458306,"byte_end":458334,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458335,"byte_end":458338,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # let _ = arr0(1); // use the import","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458339,"byte_end":458379,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/prelude.rs","byte_start":458380,"byte_end":458387,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3093},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8217,"byte_end":8219,"line_start":228,"line_end":228,"column_start":10,"column_end":12},"name":"Ix","qualname":"::Ix","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Array index type\n","sig":null,"attributes":[{"value":"/ Array index type","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8187,"byte_end":8207,"line_start":227,"line_end":227,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":3094},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8268,"byte_end":8271,"line_start":230,"line_end":230,"column_start":10,"column_end":13},"name":"Ixs","qualname":"::Ixs","value":"isize","parent":null,"children":[],"decl_id":null,"docs":" Array index type (signed)\n","sig":null,"attributes":[{"value":"/ Array index type (signed)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8229,"byte_end":8258,"line_start":229,"line_end":229,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3095},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":44951,"byte_end":44960,"line_start":1268,"line_end":1268,"column_start":12,"column_end":21},"name":"ArrayBase","qualname":"::ArrayBase","value":"ArrayBase {  }","parent":null,"children":[{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101}],"decl_id":null,"docs":" An *n*-dimensional array.","sig":null,"attributes":[{"value":"/ An *n*-dimensional array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8282,"byte_end":8311,"line_start":232,"line_end":232,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8312,"byte_end":8315,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ The array is a general container of elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8316,"byte_end":8365,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/ The array supports arithmetic operations by applying them elementwise, if the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8366,"byte_end":8447,"line_start":235,"line_end":235,"column_start":1,"column_end":82}},{"value":"/ elements are numeric, but it supports non-numeric elements too.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8448,"byte_end":8515,"line_start":236,"line_end":236,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8516,"byte_end":8519,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ The arrays rarely grow or shrink, since those operations can be costly. On","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8520,"byte_end":8598,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/ the other hand there is a rich set of methods and operations for taking views,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8599,"byte_end":8681,"line_start":239,"line_end":239,"column_start":1,"column_end":83}},{"value":"/ slices, and making traversals over one or more arrays.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8682,"byte_end":8740,"line_start":240,"line_end":240,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8741,"byte_end":8744,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include for example 1-dimensional rows or columns,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8745,"byte_end":8821,"line_start":242,"line_end":242,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8822,"byte_end":8901,"line_start":243,"line_end":243,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element is accessed by using that many indices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8902,"byte_end":8973,"line_start":244,"line_end":244,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8974,"byte_end":8977,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ The `ArrayBase<S, D>` is parameterized by `S` for the data container and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8978,"byte_end":9054,"line_start":246,"line_end":246,"column_start":1,"column_end":77}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9055,"byte_end":9086,"line_start":247,"line_end":247,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9087,"byte_end":9090,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ Type aliases [`Array`], [`ArcArray`], [`CowArray`], [`ArrayView`], and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9091,"byte_end":9165,"line_start":249,"line_end":249,"column_start":1,"column_end":75}},{"value":"/ [`ArrayViewMut`] refer to `ArrayBase` with different types for the data","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9166,"byte_end":9241,"line_start":250,"line_end":250,"column_start":1,"column_end":76}},{"value":"/ container: arrays with different kinds of ownership or different kinds of array views.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9242,"byte_end":9332,"line_start":251,"line_end":251,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9333,"byte_end":9336,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ## Contents","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9337,"byte_end":9352,"line_start":253,"line_end":253,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9353,"byte_end":9356,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ + [Array](#array)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9357,"byte_end":9378,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/ + [ArcArray](#arcarray)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9379,"byte_end":9406,"line_start":256,"line_end":256,"column_start":1,"column_end":28}},{"value":"/ + [CowArray](#cowarray)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9407,"byte_end":9434,"line_start":257,"line_end":257,"column_start":1,"column_end":28}},{"value":"/ + [Array Views](#array-views)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9435,"byte_end":9468,"line_start":258,"line_end":258,"column_start":1,"column_end":34}},{"value":"/ + [Indexing and Dimension](#indexing-and-dimension)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9469,"byte_end":9524,"line_start":259,"line_end":259,"column_start":1,"column_end":56}},{"value":"/ + [Loops, Producers and Iterators](#loops-producers-and-iterators)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9525,"byte_end":9595,"line_start":260,"line_end":260,"column_start":1,"column_end":71}},{"value":"/ + [Slicing](#slicing)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9596,"byte_end":9621,"line_start":261,"line_end":261,"column_start":1,"column_end":26}},{"value":"/ + [Subviews](#subviews)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9622,"byte_end":9649,"line_start":262,"line_end":262,"column_start":1,"column_end":28}},{"value":"/ + [Arithmetic Operations](#arithmetic-operations)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9650,"byte_end":9703,"line_start":263,"line_end":263,"column_start":1,"column_end":54}},{"value":"/ + [Broadcasting](#broadcasting)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9704,"byte_end":9739,"line_start":264,"line_end":264,"column_start":1,"column_end":36}},{"value":"/ + [Conversions](#conversions)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9740,"byte_end":9773,"line_start":265,"line_end":265,"column_start":1,"column_end":34}},{"value":"/ + [Constructor Methods for Owned Arrays](#constructor-methods-for-owned-arrays)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9774,"byte_end":9857,"line_start":266,"line_end":266,"column_start":1,"column_end":84}},{"value":"/ + [Methods For All Array Types](#methods-for-all-array-types)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9858,"byte_end":9923,"line_start":267,"line_end":267,"column_start":1,"column_end":66}},{"value":"/ + [Methods For 1-D Arrays](#methods-for-1-d-arrays)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9924,"byte_end":9979,"line_start":268,"line_end":268,"column_start":1,"column_end":56}},{"value":"/ + [Methods For 2-D Arrays](#methods-for-2-d-arrays)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":9980,"byte_end":10035,"line_start":269,"line_end":269,"column_start":1,"column_end":56}},{"value":"/ + [Methods for Dynamic-Dimensional Arrays](#methods-for-dynamic-dimensional-arrays)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10036,"byte_end":10123,"line_start":270,"line_end":270,"column_start":1,"column_end":88}},{"value":"/ + [Numerical Methods for Arrays](#numerical-methods-for-arrays)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10124,"byte_end":10191,"line_start":271,"line_end":271,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10192,"byte_end":10195,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ ## `Array`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10196,"byte_end":10210,"line_start":273,"line_end":273,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10211,"byte_end":10214,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ [`Array`] is an owned array that owns the underlying array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10215,"byte_end":10277,"line_start":275,"line_end":275,"column_start":1,"column_end":63}},{"value":"/ elements directly (just like a `Vec`) and it is the default way to create and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10278,"byte_end":10359,"line_start":276,"line_end":276,"column_start":1,"column_end":82}},{"value":"/ store n-dimensional data. `Array<A, D>` has two type parameters: `A` for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10360,"byte_end":10436,"line_start":277,"line_end":277,"column_start":1,"column_end":77}},{"value":"/ the element type, and `D` for the dimensionality. A particular","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10437,"byte_end":10503,"line_start":278,"line_end":278,"column_start":1,"column_end":67}},{"value":"/ dimensionality's type alias like `Array3<A>` just has the type parameter","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10504,"byte_end":10580,"line_start":279,"line_end":279,"column_start":1,"column_end":77}},{"value":"/ `A` for element type.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10581,"byte_end":10606,"line_start":280,"line_end":280,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10607,"byte_end":10610,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ An example:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10611,"byte_end":10626,"line_start":282,"line_end":282,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10627,"byte_end":10630,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10631,"byte_end":10638,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/ // Create a three-dimensional f64 array, initialized with zeros","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10639,"byte_end":10706,"line_start":285,"line_end":285,"column_start":1,"column_end":68}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10707,"byte_end":10731,"line_start":286,"line_end":286,"column_start":1,"column_end":25}},{"value":"/ let mut temperature = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10732,"byte_end":10790,"line_start":287,"line_end":287,"column_start":1,"column_end":59}},{"value":"/ // Increase the temperature in this location","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10791,"byte_end":10839,"line_start":288,"line_end":288,"column_start":1,"column_end":49}},{"value":"/ temperature[[2, 2, 2]] += 0.5;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10840,"byte_end":10874,"line_start":289,"line_end":289,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10875,"byte_end":10882,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10883,"byte_end":10886,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ## `ArcArray`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10887,"byte_end":10904,"line_start":292,"line_end":292,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10905,"byte_end":10908,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ [`ArcArray`] is an owned array with reference counted","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10909,"byte_end":10966,"line_start":294,"line_end":294,"column_start":1,"column_end":58}},{"value":"/ data (shared ownership).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10967,"byte_end":10995,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"/ Sharing requires that it uses copy-on-write for mutable operations.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":10996,"byte_end":11067,"line_start":296,"line_end":296,"column_start":1,"column_end":72}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11068,"byte_end":11137,"line_start":297,"line_end":297,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](Self::view_mut) or [`get_mut()`](Self::get_mut),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11138,"byte_end":11205,"line_start":298,"line_end":298,"column_start":1,"column_end":68}},{"value":"/ will break sharing and require a clone of the data (if it is not uniquely held).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11206,"byte_end":11290,"line_start":299,"line_end":299,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11291,"byte_end":11294,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ ## `CowArray`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11295,"byte_end":11312,"line_start":301,"line_end":301,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11313,"byte_end":11316,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ [`CowArray`] is analogous to [`std::borrow::Cow`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11317,"byte_end":11371,"line_start":303,"line_end":303,"column_start":1,"column_end":55}},{"value":"/ It can represent either an immutable view or a uniquely owned array. If a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11372,"byte_end":11449,"line_start":304,"line_end":304,"column_start":1,"column_end":78}},{"value":"/ `CowArray` instance is the immutable view variant, then calling a method","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11450,"byte_end":11526,"line_start":305,"line_end":305,"column_start":1,"column_end":77}},{"value":"/ for mutating elements in the array will cause it to be converted into the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11527,"byte_end":11604,"line_start":306,"line_end":306,"column_start":1,"column_end":78}},{"value":"/ owned variant (by cloning all the elements) before the modification is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11605,"byte_end":11679,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ performed.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11680,"byte_end":11694,"line_start":308,"line_end":308,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11695,"byte_end":11698,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ## Array Views","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11699,"byte_end":11717,"line_start":310,"line_end":310,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11718,"byte_end":11721,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ [`ArrayView`] and [`ArrayViewMut`] are read-only and read-write array views","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11722,"byte_end":11801,"line_start":312,"line_end":312,"column_start":1,"column_end":80}},{"value":"/ respectively. They use dimensionality, indexing, and almost all other","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11802,"byte_end":11875,"line_start":313,"line_end":313,"column_start":1,"column_end":74}},{"value":"/ methods the same way as the other array types.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11876,"byte_end":11926,"line_start":314,"line_end":314,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11927,"byte_end":11930,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ Methods for `ArrayBase` apply to array views too, when the trait bounds","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":11931,"byte_end":12006,"line_start":316,"line_end":316,"column_start":1,"column_end":76}},{"value":"/ allow.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12007,"byte_end":12017,"line_start":317,"line_end":317,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12018,"byte_end":12021,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ Please see the documentation for the respective array view for an overview","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12022,"byte_end":12100,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"/ of methods specific to array views: [`ArrayView`], [`ArrayViewMut`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12101,"byte_end":12173,"line_start":320,"line_end":320,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12174,"byte_end":12177,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ A view is created from an array using [`.view()`](ArrayBase::view),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12178,"byte_end":12249,"line_start":322,"line_end":322,"column_start":1,"column_end":72}},{"value":"/ [`.view_mut()`](ArrayBase::view_mut), using","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12250,"byte_end":12297,"line_start":323,"line_end":323,"column_start":1,"column_end":48}},{"value":"/ slicing ([`.slice()`](ArrayBase::slice), [`.slice_mut()`](ArrayBase::slice_mut)) or from one of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12298,"byte_end":12397,"line_start":324,"line_end":324,"column_start":1,"column_end":100}},{"value":"/ the many iterators that yield array views.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12398,"byte_end":12444,"line_start":325,"line_end":325,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12445,"byte_end":12448,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ You can also create an array view from a regular slice of data not","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12449,"byte_end":12519,"line_start":327,"line_end":327,"column_start":1,"column_end":71}},{"value":"/ allocated with `Array` — see array view methods or their `From` impls.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12520,"byte_end":12596,"line_start":328,"line_end":328,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12597,"byte_end":12600,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ Note that all `ArrayBase` variants can change their view (slicing) of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12601,"byte_end":12678,"line_start":330,"line_end":330,"column_start":1,"column_end":78}},{"value":"/ data freely, even when their data can’t be mutated.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12679,"byte_end":12736,"line_start":331,"line_end":331,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12737,"byte_end":12740,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ ## Indexing and Dimension","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12741,"byte_end":12770,"line_start":333,"line_end":333,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12771,"byte_end":12774,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ The dimensionality of the array determines the number of *axes*, for example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12775,"byte_end":12855,"line_start":335,"line_end":335,"column_start":1,"column_end":81}},{"value":"/ a 2D array has two axes. These are listed in “big endian” order, so that","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12856,"byte_end":12936,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ the greatest dimension is listed first, the lowest dimension with the most","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":12937,"byte_end":13015,"line_start":337,"line_end":337,"column_start":1,"column_end":79}},{"value":"/ rapidly varying index is the last.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13016,"byte_end":13054,"line_start":338,"line_end":338,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13055,"byte_end":13058,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ In a 2D array the index of each element is `[row, column]` as seen in this","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13059,"byte_end":13137,"line_start":340,"line_end":340,"column_start":1,"column_end":79}},{"value":"/ 4 × 3 example:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13138,"byte_end":13157,"line_start":341,"line_end":341,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13158,"byte_end":13161,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13162,"byte_end":13175,"line_start":343,"line_end":343,"column_start":1,"column_end":14}},{"value":"/ [[ [0, 0], [0, 1], [0, 2] ],  // row 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13176,"byte_end":13218,"line_start":344,"line_end":344,"column_start":1,"column_end":43}},{"value":"/  [ [1, 0], [1, 1], [1, 2] ],  // row 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13219,"byte_end":13261,"line_start":345,"line_end":345,"column_start":1,"column_end":43}},{"value":"/  [ [2, 0], [2, 1], [2, 2] ],  // row 2","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13262,"byte_end":13304,"line_start":346,"line_end":346,"column_start":1,"column_end":43}},{"value":"/  [ [3, 0], [3, 1], [3, 2] ]]  // row 3","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13305,"byte_end":13347,"line_start":347,"line_end":347,"column_start":1,"column_end":43}},{"value":"/ //    \\       \\       \\","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13348,"byte_end":13375,"line_start":348,"line_end":348,"column_start":1,"column_end":28}},{"value":"/ //   column 0  \\     column 2","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13376,"byte_end":13409,"line_start":349,"line_end":349,"column_start":1,"column_end":34}},{"value":"/ //            column 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13410,"byte_end":13436,"line_start":350,"line_end":350,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13437,"byte_end":13444,"line_start":351,"line_end":351,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13445,"byte_end":13448,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ The number of axes for an array is fixed by its `D` type parameter: `Ix1`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13449,"byte_end":13526,"line_start":353,"line_end":353,"column_start":1,"column_end":78}},{"value":"/ for a 1D array, `Ix2` for a 2D array etc. The dimension type `IxDyn` allows","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13527,"byte_end":13606,"line_start":354,"line_end":354,"column_start":1,"column_end":80}},{"value":"/ a dynamic number of axes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13607,"byte_end":13636,"line_start":355,"line_end":355,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13637,"byte_end":13640,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ A fixed size array (`[usize; N]`) of the corresponding dimensionality is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13641,"byte_end":13717,"line_start":357,"line_end":357,"column_start":1,"column_end":77}},{"value":"/ used to index the `Array`, making the syntax `array[[` i, j,  ...`]]`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13718,"byte_end":13791,"line_start":358,"line_end":358,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13792,"byte_end":13795,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13796,"byte_end":13803,"line_start":360,"line_end":360,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13804,"byte_end":13828,"line_start":361,"line_end":361,"column_start":1,"column_end":25}},{"value":"/ let mut array = Array2::zeros((4, 3));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13829,"byte_end":13871,"line_start":362,"line_end":362,"column_start":1,"column_end":43}},{"value":"/ array[[1, 1]] = 7;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13872,"byte_end":13894,"line_start":363,"line_end":363,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13895,"byte_end":13902,"line_start":364,"line_end":364,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13903,"byte_end":13906,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ Important traits and types for dimension and indexing:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13907,"byte_end":13965,"line_start":366,"line_end":366,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13966,"byte_end":13969,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ - A [`struct@Dim`] value represents a dimensionality or index.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":13970,"byte_end":14036,"line_start":368,"line_end":368,"column_start":1,"column_end":67}},{"value":"/ - Trait [`Dimension`] is implemented by all","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14037,"byte_end":14084,"line_start":369,"line_end":369,"column_start":1,"column_end":48}},{"value":"/ dimensionalities. It defines many operations for dimensions and indices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14085,"byte_end":14161,"line_start":370,"line_end":370,"column_start":1,"column_end":77}},{"value":"/ - Trait [`IntoDimension`] is used to convert into a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14162,"byte_end":14217,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/ `Dim` value.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14218,"byte_end":14234,"line_start":372,"line_end":372,"column_start":1,"column_end":17}},{"value":"/ - Trait [`ShapeBuilder`] is an extension of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14235,"byte_end":14282,"line_start":373,"line_end":373,"column_start":1,"column_end":48}},{"value":"/ `IntoDimension` and is used when constructing an array. A shape describes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14283,"byte_end":14360,"line_start":374,"line_end":374,"column_start":1,"column_end":78}},{"value":"/ not just the extent of each axis but also their strides.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14361,"byte_end":14421,"line_start":375,"line_end":375,"column_start":1,"column_end":61}},{"value":"/ - Trait [`NdIndex`] is an extension of `Dimension` and is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14422,"byte_end":14483,"line_start":376,"line_end":376,"column_start":1,"column_end":62}},{"value":"/ for values that can be used with indexing syntax.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14484,"byte_end":14537,"line_start":377,"line_end":377,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14538,"byte_end":14541,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14542,"byte_end":14545,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ The default memory order of an array is *row major* order (a.k.a “c” order),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14546,"byte_end":14630,"line_start":380,"line_end":380,"column_start":1,"column_end":81}},{"value":"/ where each row is contiguous in memory.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14631,"byte_end":14674,"line_start":381,"line_end":381,"column_start":1,"column_end":44}},{"value":"/ A *column major* (a.k.a. “f” or fortran) memory order array has","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14675,"byte_end":14746,"line_start":382,"line_end":382,"column_start":1,"column_end":68}},{"value":"/ columns (or, in general, the outermost axis) with contiguous elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14747,"byte_end":14821,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14822,"byte_end":14825,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ The logical order of any array’s elements is the row major order","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14826,"byte_end":14896,"line_start":385,"line_end":385,"column_start":1,"column_end":69}},{"value":"/ (the rightmost index is varying the fastest).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14897,"byte_end":14946,"line_start":386,"line_end":386,"column_start":1,"column_end":50}},{"value":"/ The iterators `.iter(), .iter_mut()` always adhere to this order, for example.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":14947,"byte_end":15029,"line_start":387,"line_end":387,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15030,"byte_end":15033,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ ## Loops, Producers and Iterators","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15034,"byte_end":15071,"line_start":389,"line_end":389,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15072,"byte_end":15075,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Using [`Zip`] is the most general way to apply a procedure","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15076,"byte_end":15138,"line_start":391,"line_end":391,"column_start":1,"column_end":63}},{"value":"/ across one or several arrays or *producers*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15139,"byte_end":15187,"line_start":392,"line_end":392,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15188,"byte_end":15191,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`NdProducer`] is like an iterable but for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15192,"byte_end":15238,"line_start":394,"line_end":394,"column_start":1,"column_end":47}},{"value":"/ multidimensional data. All producers have dimensions and axes, like an","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15239,"byte_end":15313,"line_start":395,"line_end":395,"column_start":1,"column_end":75}},{"value":"/ array view, and they can be split and used with parallelization using `Zip`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15314,"byte_end":15394,"line_start":396,"line_end":396,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15395,"byte_end":15398,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ For example, `ArrayView<A, D>` is a producer, it has the same dimensions","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15399,"byte_end":15475,"line_start":398,"line_end":398,"column_start":1,"column_end":77}},{"value":"/ as the array view and for each iteration it produces a reference to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15476,"byte_end":15547,"line_start":399,"line_end":399,"column_start":1,"column_end":72}},{"value":"/ the array element (`&A` in this case).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15548,"byte_end":15590,"line_start":400,"line_end":400,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15591,"byte_end":15594,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ Another example, if we have a 10 × 10 array and use `.exact_chunks((2, 2))`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15595,"byte_end":15675,"line_start":402,"line_end":402,"column_start":1,"column_end":80}},{"value":"/ we get a producer of chunks which has the dimensions 5 × 5 (because","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15676,"byte_end":15748,"line_start":403,"line_end":403,"column_start":1,"column_end":72}},{"value":"/ there are *10 / 2 = 5* chunks in either direction). The 5 × 5 chunks producer","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15749,"byte_end":15831,"line_start":404,"line_end":404,"column_start":1,"column_end":82}},{"value":"/ can be paired with any other producers of the same dimension with `Zip`, for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15832,"byte_end":15912,"line_start":405,"line_end":405,"column_start":1,"column_end":81}},{"value":"/ example 5 × 5 arrays.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15913,"byte_end":15939,"line_start":406,"line_end":406,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15940,"byte_end":15943,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ ### `.iter()` and `.iter_mut()`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15944,"byte_end":15979,"line_start":408,"line_end":408,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15980,"byte_end":15983,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ These are the element iterators of arrays and they produce an element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":15984,"byte_end":16057,"line_start":410,"line_end":410,"column_start":1,"column_end":74}},{"value":"/ sequence in the logical order of the array, that means that the elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16058,"byte_end":16134,"line_start":411,"line_end":411,"column_start":1,"column_end":77}},{"value":"/ will be visited in the sequence that corresponds to increasing the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16135,"byte_end":16205,"line_start":412,"line_end":412,"column_start":1,"column_end":71}},{"value":"/ last index first: *0, ..., 0,  0*; *0, ..., 0, 1*; *0, ...0, 2* and so on.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16206,"byte_end":16284,"line_start":413,"line_end":413,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16285,"byte_end":16288,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ ### `.outer_iter()` and `.axis_iter()`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16289,"byte_end":16331,"line_start":415,"line_end":415,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16332,"byte_end":16335,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ These iterators produce array views of one smaller dimension.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16336,"byte_end":16401,"line_start":417,"line_end":417,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16402,"byte_end":16405,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ For example, for a 2D array, `.outer_iter()` will produce the 1D rows.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16406,"byte_end":16480,"line_start":419,"line_end":419,"column_start":1,"column_end":75}},{"value":"/ For a 3D array, `.outer_iter()` produces 2D subviews.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16481,"byte_end":16538,"line_start":420,"line_end":420,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16539,"byte_end":16542,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ `.axis_iter()` is like `outer_iter()` but allows you to pick which","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16543,"byte_end":16613,"line_start":422,"line_end":422,"column_start":1,"column_end":71}},{"value":"/ axis to traverse.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16614,"byte_end":16635,"line_start":423,"line_end":423,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16636,"byte_end":16639,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ The `outer_iter` and `axis_iter` are one dimensional producers.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16640,"byte_end":16707,"line_start":425,"line_end":425,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16708,"byte_end":16711,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ ## `.rows()`, `.columns()` and `.lanes()`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16712,"byte_end":16757,"line_start":427,"line_end":427,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16758,"byte_end":16761,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ [`.rows()`][gr] is a producer (and iterable) of all rows in an array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16762,"byte_end":16835,"line_start":429,"line_end":429,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16836,"byte_end":16839,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16840,"byte_end":16847,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16848,"byte_end":16871,"line_start":432,"line_end":432,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16872,"byte_end":16875,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ // 1. Loop over the rows of a 2D array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16876,"byte_end":16918,"line_start":434,"line_end":434,"column_start":1,"column_end":43}},{"value":"/ let mut a = Array::zeros((10, 10));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16919,"byte_end":16958,"line_start":435,"line_end":435,"column_start":1,"column_end":40}},{"value":"/ for mut row in a.rows_mut() {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16959,"byte_end":16992,"line_start":436,"line_end":436,"column_start":1,"column_end":34}},{"value":"/     row.fill(1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":16993,"byte_end":17014,"line_start":437,"line_end":437,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17015,"byte_end":17020,"line_start":438,"line_end":438,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17021,"byte_end":17024,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ // 2. Use Zip to pair each row in 2D `a` with elements in 1D `b`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17025,"byte_end":17093,"line_start":440,"line_end":440,"column_start":1,"column_end":69}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17094,"byte_end":17115,"line_start":441,"line_end":441,"column_start":1,"column_end":22}},{"value":"/ let mut b = Array::zeros(a.nrows());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17116,"byte_end":17156,"line_start":442,"line_end":442,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17157,"byte_end":17160,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ Zip::from(a.rows())","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17161,"byte_end":17184,"line_start":444,"line_end":444,"column_start":1,"column_end":24}},{"value":"/     .and(&mut b)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17185,"byte_end":17205,"line_start":445,"line_end":445,"column_start":1,"column_end":21}},{"value":"/     .for_each(|a_row, b_elt| {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17206,"byte_end":17240,"line_start":446,"line_end":446,"column_start":1,"column_end":35}},{"value":"/         *b_elt = a_row[a.ncols() - 1] - a_row[0];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17241,"byte_end":17294,"line_start":447,"line_end":447,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17295,"byte_end":17306,"line_start":448,"line_end":448,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17307,"byte_end":17314,"line_start":449,"line_end":449,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17315,"byte_end":17318,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ The *lanes* of an array are 1D segments along an axis and when pointed","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17319,"byte_end":17393,"line_start":451,"line_end":451,"column_start":1,"column_end":75}},{"value":"/ along the last axis they are *rows*, when pointed along the first axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17394,"byte_end":17468,"line_start":452,"line_end":452,"column_start":1,"column_end":75}},{"value":"/ they are *columns*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17469,"byte_end":17492,"line_start":453,"line_end":453,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17493,"byte_end":17496,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ A *m* × *n* array has *m* rows each of length *n* and conversely","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17497,"byte_end":17566,"line_start":455,"line_end":455,"column_start":1,"column_end":69}},{"value":"/ *n* columns each of length *m*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17567,"byte_end":17602,"line_start":456,"line_end":456,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17603,"byte_end":17606,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ To generalize this, we say that an array of dimension *a* × *m* × *n*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17607,"byte_end":17682,"line_start":458,"line_end":458,"column_start":1,"column_end":74}},{"value":"/ has *a m* rows. It's composed of *a* times the previous array, so it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17683,"byte_end":17755,"line_start":459,"line_end":459,"column_start":1,"column_end":73}},{"value":"/ has *a* times as many rows.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17756,"byte_end":17787,"line_start":460,"line_end":460,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17788,"byte_end":17791,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ All methods: [`.rows()`][gr], [`.rows_mut()`][grm],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17792,"byte_end":17847,"line_start":462,"line_end":462,"column_start":1,"column_end":56}},{"value":"/ [`.columns()`][gc], [`.columns_mut()`][gcm],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17848,"byte_end":17896,"line_start":463,"line_end":463,"column_start":1,"column_end":49}},{"value":"/ [`.lanes(axis)`][l], [`.lanes_mut(axis)`][lm].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17897,"byte_end":17947,"line_start":464,"line_end":464,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17948,"byte_end":17951,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ [gr]: Self::rows","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17952,"byte_end":17972,"line_start":466,"line_end":466,"column_start":1,"column_end":21}},{"value":"/ [grm]: Self::rows_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17973,"byte_end":17998,"line_start":467,"line_end":467,"column_start":1,"column_end":26}},{"value":"/ [gc]: Self::columns","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":17999,"byte_end":18022,"line_start":468,"line_end":468,"column_start":1,"column_end":24}},{"value":"/ [gcm]: Self::columns_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18023,"byte_end":18051,"line_start":469,"line_end":469,"column_start":1,"column_end":29}},{"value":"/ [l]: Self::lanes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18052,"byte_end":18072,"line_start":470,"line_end":470,"column_start":1,"column_end":21}},{"value":"/ [lm]: Self::lanes_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18073,"byte_end":18098,"line_start":471,"line_end":471,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18099,"byte_end":18102,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ Yes, for 2D arrays `.rows()` and `.outer_iter()` have about the same","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18103,"byte_end":18175,"line_start":473,"line_end":473,"column_start":1,"column_end":73}},{"value":"/ effect:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18176,"byte_end":18187,"line_start":474,"line_end":474,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18188,"byte_end":18191,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/  + `rows()` is a producer with *n* - 1 dimensions of 1 dimensional items","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18192,"byte_end":18268,"line_start":476,"line_end":476,"column_start":1,"column_end":77}},{"value":"/  + `outer_iter()` is a producer with 1 dimension of *n* - 1 dimensional items","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18269,"byte_end":18350,"line_start":477,"line_end":477,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18351,"byte_end":18354,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ ## Slicing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18355,"byte_end":18369,"line_start":479,"line_end":479,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18370,"byte_end":18373,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ You can use slicing to create a view of a subset of the data in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18374,"byte_end":18441,"line_start":481,"line_end":481,"column_start":1,"column_end":68}},{"value":"/ the array. Slicing methods include [`.slice()`], [`.slice_mut()`],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18442,"byte_end":18512,"line_start":482,"line_end":482,"column_start":1,"column_end":71}},{"value":"/ [`.slice_move()`], and [`.slice_collapse()`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18513,"byte_end":18562,"line_start":483,"line_end":483,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18563,"byte_end":18566,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ The slicing argument can be passed using the macro [`s![]`](s!),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18567,"byte_end":18635,"line_start":485,"line_end":485,"column_start":1,"column_end":69}},{"value":"/ which will be used in all examples. (The explicit form is an instance of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18636,"byte_end":18712,"line_start":486,"line_end":486,"column_start":1,"column_end":77}},{"value":"/ [`SliceInfo`] or another type which implements [`SliceArg`]; see their docs","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18713,"byte_end":18792,"line_start":487,"line_end":487,"column_start":1,"column_end":80}},{"value":"/ for more information.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18793,"byte_end":18819,"line_start":488,"line_end":488,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18820,"byte_end":18823,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ If a range is used, the axis is preserved. If an index is used, that index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18824,"byte_end":18902,"line_start":490,"line_end":490,"column_start":1,"column_end":79}},{"value":"/ is selected and the axis is removed; this selects a subview. See","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18903,"byte_end":18971,"line_start":491,"line_end":491,"column_start":1,"column_end":69}},{"value":"/ [*Subviews*](#subviews) for more information about subviews. If a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":18972,"byte_end":19041,"line_start":492,"line_end":492,"column_start":1,"column_end":70}},{"value":"/ [`NewAxis`] instance is used, a new axis is inserted. Note that","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19042,"byte_end":19109,"line_start":493,"line_end":493,"column_start":1,"column_end":68}},{"value":"/ [`.slice_collapse()`] panics on `NewAxis` elements and behaves like","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19110,"byte_end":19181,"line_start":494,"line_end":494,"column_start":1,"column_end":72}},{"value":"/ [`.collapse_axis()`] by preserving the number of dimensions.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19182,"byte_end":19246,"line_start":495,"line_end":495,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19247,"byte_end":19250,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: Self::slice","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19251,"byte_end":19280,"line_start":497,"line_end":497,"column_start":1,"column_end":30}},{"value":"/ [`.slice_mut()`]: Self::slice_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19281,"byte_end":19318,"line_start":498,"line_end":498,"column_start":1,"column_end":38}},{"value":"/ [`.slice_move()`]: Self::slice_move","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19319,"byte_end":19358,"line_start":499,"line_end":499,"column_start":1,"column_end":40}},{"value":"/ [`.slice_collapse()`]: Self::slice_collapse","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19359,"byte_end":19406,"line_start":500,"line_end":500,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19407,"byte_end":19410,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ When slicing arrays with generic dimensionality, creating an instance of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19411,"byte_end":19487,"line_start":502,"line_end":502,"column_start":1,"column_end":77}},{"value":"/ [`SliceInfo`] to pass to the multi-axis slicing methods like [`.slice()`]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19488,"byte_end":19565,"line_start":503,"line_end":503,"column_start":1,"column_end":78}},{"value":"/ is awkward. In these cases, it's usually more convenient to use","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19566,"byte_end":19633,"line_start":504,"line_end":504,"column_start":1,"column_end":68}},{"value":"/ [`.slice_each_axis()`]/[`.slice_each_axis_mut()`]/[`.slice_each_axis_inplace()`]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19634,"byte_end":19718,"line_start":505,"line_end":505,"column_start":1,"column_end":85}},{"value":"/ or to create a view and then slice individual axes of the view using","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19719,"byte_end":19791,"line_start":506,"line_end":506,"column_start":1,"column_end":73}},{"value":"/ methods such as [`.slice_axis_inplace()`] and [`.collapse_axis()`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19792,"byte_end":19863,"line_start":507,"line_end":507,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19864,"byte_end":19867,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ [`.slice_each_axis()`]: Self::slice_each_axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19868,"byte_end":19917,"line_start":509,"line_end":509,"column_start":1,"column_end":50}},{"value":"/ [`.slice_each_axis_mut()`]: Self::slice_each_axis_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19918,"byte_end":19975,"line_start":510,"line_end":510,"column_start":1,"column_end":58}},{"value":"/ [`.slice_each_axis_inplace()`]: Self::slice_each_axis_inplace","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":19976,"byte_end":20041,"line_start":511,"line_end":511,"column_start":1,"column_end":66}},{"value":"/ [`.slice_axis_inplace()`]: Self::slice_axis_inplace","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20042,"byte_end":20097,"line_start":512,"line_end":512,"column_start":1,"column_end":56}},{"value":"/ [`.collapse_axis()`]: Self::collapse_axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20098,"byte_end":20143,"line_start":513,"line_end":513,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20144,"byte_end":20147,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ It's possible to take multiple simultaneous *mutable* slices with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20148,"byte_end":20217,"line_start":515,"line_end":515,"column_start":1,"column_end":70}},{"value":"/ [`.multi_slice_mut()`] or (for [`ArrayViewMut`] only)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20218,"byte_end":20275,"line_start":516,"line_end":516,"column_start":1,"column_end":58}},{"value":"/ [`.multi_slice_move()`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20276,"byte_end":20304,"line_start":517,"line_end":517,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20305,"byte_end":20308,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ [`.multi_slice_mut()`]: Self::multi_slice_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20309,"byte_end":20358,"line_start":519,"line_end":519,"column_start":1,"column_end":50}},{"value":"/ [`.multi_slice_move()`]: ArrayViewMut#method.multi_slice_move","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20359,"byte_end":20424,"line_start":520,"line_end":520,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20425,"byte_end":20428,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20429,"byte_end":20436,"line_start":522,"line_end":522,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{arr2, arr3, s, ArrayBase, DataMut, Dimension, NewAxis, Slice};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20437,"byte_end":20517,"line_start":523,"line_end":523,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20518,"byte_end":20521,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20522,"byte_end":20607,"line_start":525,"line_end":525,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20608,"byte_end":20611,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],     // -- 2 rows  \\_","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20612,"byte_end":20666,"line_start":527,"line_end":527,"column_start":1,"column_end":55}},{"value":"/                 [ 4,  5,  6]],    // --         /","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20667,"byte_end":20720,"line_start":528,"line_end":528,"column_start":1,"column_end":54}},{"value":"/                [[ 7,  8,  9],     //            \\_ 2 submatrices","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20721,"byte_end":20789,"line_start":529,"line_end":529,"column_start":1,"column_end":69}},{"value":"/                 [10, 11, 12]]]);  //            /","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20790,"byte_end":20843,"line_start":530,"line_end":530,"column_start":1,"column_end":54}},{"value":"/ //  3 columns ..../.../.../","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20844,"byte_end":20875,"line_start":531,"line_end":531,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20876,"byte_end":20879,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20880,"byte_end":20918,"line_start":533,"line_end":533,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20919,"byte_end":20922,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20923,"byte_end":20957,"line_start":535,"line_end":535,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20958,"byte_end":20964,"line_start":536,"line_end":536,"column_start":1,"column_end":7}},{"value":"/ // - Both of the submatrices of the greatest dimension: `..`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":20965,"byte_end":21029,"line_start":537,"line_end":537,"column_start":1,"column_end":65}},{"value":"/ // - Only the first row in each submatrix: `0..1`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21030,"byte_end":21083,"line_start":538,"line_end":538,"column_start":1,"column_end":54}},{"value":"/ // - Every element in each row: `..`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21084,"byte_end":21124,"line_start":539,"line_end":539,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21125,"byte_end":21128,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ let b = a.slice(s![.., 0..1, ..]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21129,"byte_end":21167,"line_start":541,"line_end":541,"column_start":1,"column_end":39}},{"value":"/ let c = arr3(&[[[ 1,  2,  3]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21168,"byte_end":21202,"line_start":542,"line_end":542,"column_start":1,"column_end":35}},{"value":"/                [[ 7,  8,  9]]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21203,"byte_end":21239,"line_start":543,"line_end":543,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, c);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21240,"byte_end":21261,"line_start":544,"line_end":544,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(b.shape(), &[2, 1, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21262,"byte_end":21300,"line_start":545,"line_end":545,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21301,"byte_end":21304,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21305,"byte_end":21339,"line_start":547,"line_end":547,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21340,"byte_end":21346,"line_start":548,"line_end":548,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21347,"byte_end":21404,"line_start":549,"line_end":549,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix: `-1..`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21405,"byte_end":21452,"line_start":550,"line_end":550,"column_start":1,"column_end":48}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21453,"byte_end":21500,"line_start":551,"line_end":551,"column_start":1,"column_end":48}},{"value":"/ let d = a.slice(s![.., -1.., ..;-1]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21501,"byte_end":21542,"line_start":552,"line_end":552,"column_start":1,"column_end":42}},{"value":"/ let e = arr3(&[[[ 6,  5,  4]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21543,"byte_end":21577,"line_start":553,"line_end":553,"column_start":1,"column_end":35}},{"value":"/                [[12, 11, 10]]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21578,"byte_end":21614,"line_start":554,"line_end":554,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(d, e);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21615,"byte_end":21636,"line_start":555,"line_end":555,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(d.shape(), &[2, 1, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21637,"byte_end":21675,"line_start":556,"line_end":556,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21676,"byte_end":21679,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice while selecting a subview and inserting a new axis with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21680,"byte_end":21765,"line_start":558,"line_end":558,"column_start":1,"column_end":84}},{"value":"/ //","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21766,"byte_end":21772,"line_start":559,"line_end":559,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21773,"byte_end":21830,"line_start":560,"line_end":560,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix, removing that axis: `-1`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21831,"byte_end":21896,"line_start":561,"line_end":561,"column_start":1,"column_end":66}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21897,"byte_end":21944,"line_start":562,"line_end":562,"column_start":1,"column_end":48}},{"value":"/ // - A new axis at the end.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21945,"byte_end":21976,"line_start":563,"line_end":563,"column_start":1,"column_end":32}},{"value":"/ let f = a.slice(s![.., -1, ..;-1, NewAxis]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":21977,"byte_end":22025,"line_start":564,"line_end":564,"column_start":1,"column_end":49}},{"value":"/ let g = arr3(&[[ [6],  [5],  [4]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22026,"byte_end":22064,"line_start":565,"line_end":565,"column_start":1,"column_end":39}},{"value":"/                [[12], [11], [10]]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22065,"byte_end":22105,"line_start":566,"line_end":566,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(f, g);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22106,"byte_end":22127,"line_start":567,"line_end":567,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(f.shape(), &[2, 3, 1]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22128,"byte_end":22166,"line_start":568,"line_end":568,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22167,"byte_end":22170,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ // Let's take two disjoint, mutable slices of a matrix with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22171,"byte_end":22234,"line_start":570,"line_end":570,"column_start":1,"column_end":64}},{"value":"/ //","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22235,"byte_end":22241,"line_start":571,"line_end":571,"column_start":1,"column_end":7}},{"value":"/ // - One containing all the even-index columns in the matrix","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22242,"byte_end":22306,"line_start":572,"line_end":572,"column_start":1,"column_end":65}},{"value":"/ // - One containing all the odd-index columns in the matrix","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22307,"byte_end":22370,"line_start":573,"line_end":573,"column_start":1,"column_end":64}},{"value":"/ let mut h = arr2(&[[0, 1, 2, 3],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22371,"byte_end":22407,"line_start":574,"line_end":574,"column_start":1,"column_end":37}},{"value":"/                    [4, 5, 6, 7]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22408,"byte_end":22446,"line_start":575,"line_end":575,"column_start":1,"column_end":39}},{"value":"/ let (s0, s1) = h.multi_slice_mut((s![.., ..;2], s![.., 1..;2]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22447,"byte_end":22515,"line_start":576,"line_end":576,"column_start":1,"column_end":69}},{"value":"/ let i = arr2(&[[0, 2],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22516,"byte_end":22542,"line_start":577,"line_end":577,"column_start":1,"column_end":27}},{"value":"/                [4, 6]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22543,"byte_end":22571,"line_start":578,"line_end":578,"column_start":1,"column_end":29}},{"value":"/ let j = arr2(&[[1, 3],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22572,"byte_end":22598,"line_start":579,"line_end":579,"column_start":1,"column_end":27}},{"value":"/                [5, 7]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22599,"byte_end":22627,"line_start":580,"line_end":580,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(s0, i);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22628,"byte_end":22650,"line_start":581,"line_end":581,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(s1, j);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22651,"byte_end":22673,"line_start":582,"line_end":582,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22674,"byte_end":22677,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ // Generic function which assigns the specified value to the elements which","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22678,"byte_end":22757,"line_start":584,"line_end":584,"column_start":1,"column_end":80}},{"value":"/ // have indices in the lower half along all axes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22758,"byte_end":22811,"line_start":585,"line_end":585,"column_start":1,"column_end":54}},{"value":"/ fn fill_lower<S, D>(arr: &mut ArrayBase<S, D>, x: S::Elem)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22812,"byte_end":22874,"line_start":586,"line_end":586,"column_start":1,"column_end":63}},{"value":"/ where","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22875,"byte_end":22884,"line_start":587,"line_end":587,"column_start":1,"column_end":10}},{"value":"/     S: DataMut,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22885,"byte_end":22904,"line_start":588,"line_end":588,"column_start":1,"column_end":20}},{"value":"/     S::Elem: Clone,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22905,"byte_end":22928,"line_start":589,"line_end":589,"column_start":1,"column_end":24}},{"value":"/     D: Dimension,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22929,"byte_end":22950,"line_start":590,"line_end":590,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22951,"byte_end":22956,"line_start":591,"line_end":591,"column_start":1,"column_end":6}},{"value":"/     arr.slice_each_axis_mut(|ax| Slice::from(0..ax.len / 2)).fill(x);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":22957,"byte_end":23030,"line_start":592,"line_end":592,"column_start":1,"column_end":74}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23031,"byte_end":23036,"line_start":593,"line_end":593,"column_start":1,"column_end":6}},{"value":"/ fill_lower(&mut h, 9);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23037,"byte_end":23063,"line_start":594,"line_end":594,"column_start":1,"column_end":27}},{"value":"/ let k = arr2(&[[9, 9, 2, 3],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23064,"byte_end":23096,"line_start":595,"line_end":595,"column_start":1,"column_end":33}},{"value":"/                [4, 5, 6, 7]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23097,"byte_end":23131,"line_start":596,"line_end":596,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(h, k);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23132,"byte_end":23153,"line_start":597,"line_end":597,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23154,"byte_end":23161,"line_start":598,"line_end":598,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23162,"byte_end":23165,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ ## Subviews","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23166,"byte_end":23181,"line_start":600,"line_end":600,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23182,"byte_end":23185,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ Subview methods allow you to restrict the array view while removing one","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23186,"byte_end":23261,"line_start":602,"line_end":602,"column_start":1,"column_end":76}},{"value":"/ axis from the array. Methods for selecting individual subviews include","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23262,"byte_end":23336,"line_start":603,"line_end":603,"column_start":1,"column_end":75}},{"value":"/ [`.index_axis()`], [`.index_axis_mut()`], [`.index_axis_move()`], and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23337,"byte_end":23410,"line_start":604,"line_end":604,"column_start":1,"column_end":74}},{"value":"/ [`.index_axis_inplace()`]. You can also select a subview by using a single","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23411,"byte_end":23489,"line_start":605,"line_end":605,"column_start":1,"column_end":79}},{"value":"/ index instead of a range when slicing. Some other methods, such as","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23490,"byte_end":23560,"line_start":606,"line_end":606,"column_start":1,"column_end":71}},{"value":"/ [`.fold_axis()`], [`.axis_iter()`], [`.axis_iter_mut()`],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23561,"byte_end":23622,"line_start":607,"line_end":607,"column_start":1,"column_end":62}},{"value":"/ [`.outer_iter()`], and [`.outer_iter_mut()`] operate on all the subviews","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23623,"byte_end":23699,"line_start":608,"line_end":608,"column_start":1,"column_end":77}},{"value":"/ along an axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23700,"byte_end":23718,"line_start":609,"line_end":609,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23719,"byte_end":23722,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ A related method is [`.collapse_axis()`], which modifies the view in the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23723,"byte_end":23799,"line_start":611,"line_end":611,"column_start":1,"column_end":77}},{"value":"/ same way as [`.index_axis()`] except for removing the collapsed axis, since","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23800,"byte_end":23879,"line_start":612,"line_end":612,"column_start":1,"column_end":80}},{"value":"/ it operates *in place*. The length of the axis becomes 1.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23880,"byte_end":23941,"line_start":613,"line_end":613,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23942,"byte_end":23945,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/ Methods for selecting an individual subview take two arguments: `axis` and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":23946,"byte_end":24024,"line_start":615,"line_end":615,"column_start":1,"column_end":79}},{"value":"/ `index`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24025,"byte_end":24037,"line_start":616,"line_end":616,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24038,"byte_end":24041,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ [`.axis_iter()`]: Self::axis_iter","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24042,"byte_end":24079,"line_start":618,"line_end":618,"column_start":1,"column_end":38}},{"value":"/ [`.axis_iter_mut()`]: Self::axis_iter_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24080,"byte_end":24125,"line_start":619,"line_end":619,"column_start":1,"column_end":46}},{"value":"/ [`.fold_axis()`]: Self::fold_axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24126,"byte_end":24163,"line_start":620,"line_end":620,"column_start":1,"column_end":38}},{"value":"/ [`.index_axis()`]: Self::index_axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24164,"byte_end":24203,"line_start":621,"line_end":621,"column_start":1,"column_end":40}},{"value":"/ [`.index_axis_inplace()`]: Self::index_axis_inplace","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24204,"byte_end":24259,"line_start":622,"line_end":622,"column_start":1,"column_end":56}},{"value":"/ [`.index_axis_mut()`]: Self::index_axis_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24260,"byte_end":24307,"line_start":623,"line_end":623,"column_start":1,"column_end":48}},{"value":"/ [`.index_axis_move()`]: Self::index_axis_move","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24308,"byte_end":24357,"line_start":624,"line_end":624,"column_start":1,"column_end":50}},{"value":"/ [`.collapse_axis()`]: Self::collapse_axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24358,"byte_end":24403,"line_start":625,"line_end":625,"column_start":1,"column_end":46}},{"value":"/ [`.outer_iter()`]: Self::outer_iter","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24404,"byte_end":24443,"line_start":626,"line_end":626,"column_start":1,"column_end":40}},{"value":"/ [`.outer_iter_mut()`]: Self::outer_iter_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24444,"byte_end":24491,"line_start":627,"line_end":627,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24492,"byte_end":24495,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24496,"byte_end":24503,"line_start":629,"line_end":629,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24504,"byte_end":24507,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr3, aview1, aview2, s, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24508,"byte_end":24557,"line_start":631,"line_end":631,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24558,"byte_end":24561,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24562,"byte_end":24565,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24566,"byte_end":24651,"line_start":634,"line_end":634,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24652,"byte_end":24655,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],    // \\ axis 0, submatrix 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24656,"byte_end":24717,"line_start":636,"line_end":636,"column_start":1,"column_end":62}},{"value":"/                 [ 4,  5,  6]],   // /","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24718,"byte_end":24759,"line_start":637,"line_end":637,"column_start":1,"column_end":42}},{"value":"/                [[ 7,  8,  9],    // \\ axis 0, submatrix 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24760,"byte_end":24821,"line_start":638,"line_end":638,"column_start":1,"column_end":62}},{"value":"/                 [10, 11, 12]]]); // /","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24822,"byte_end":24863,"line_start":639,"line_end":639,"column_start":1,"column_end":42}},{"value":"/         //        \\","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24864,"byte_end":24887,"line_start":640,"line_end":640,"column_start":1,"column_end":24}},{"value":"/         //         axis 2, column 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24888,"byte_end":24927,"line_start":641,"line_end":641,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24928,"byte_end":24931,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24932,"byte_end":24970,"line_start":643,"line_end":643,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24971,"byte_end":24974,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ // Let’s take a subview along the greatest dimension (axis 0),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":24975,"byte_end":25043,"line_start":645,"line_end":645,"column_start":1,"column_end":67}},{"value":"/ // taking submatrix 0, then submatrix 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25044,"byte_end":25087,"line_start":646,"line_end":646,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25088,"byte_end":25091,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ let sub_0 = a.index_axis(Axis(0), 0);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25092,"byte_end":25133,"line_start":648,"line_end":648,"column_start":1,"column_end":42}},{"value":"/ let sub_1 = a.index_axis(Axis(0), 1);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25134,"byte_end":25175,"line_start":649,"line_end":649,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25176,"byte_end":25179,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_0, aview2(&[[ 1,  2,  3],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25180,"byte_end":25224,"line_start":651,"line_end":651,"column_start":1,"column_end":45}},{"value":"/                            [ 4,  5,  6]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25225,"byte_end":25272,"line_start":652,"line_end":652,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_1, aview2(&[[ 7,  8,  9],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25273,"byte_end":25317,"line_start":653,"line_end":653,"column_start":1,"column_end":45}},{"value":"/                            [10, 11, 12]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25318,"byte_end":25365,"line_start":654,"line_end":654,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_0.shape(), &[2, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25366,"byte_end":25405,"line_start":655,"line_end":655,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25406,"byte_end":25409,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ // This is the subview picking only axis 2, column 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25410,"byte_end":25466,"line_start":657,"line_end":657,"column_start":1,"column_end":57}},{"value":"/ let sub_col = a.index_axis(Axis(2), 0);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25467,"byte_end":25510,"line_start":658,"line_end":658,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25511,"byte_end":25514,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_col, aview2(&[[ 1,  4],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25515,"byte_end":25557,"line_start":660,"line_end":660,"column_start":1,"column_end":43}},{"value":"/                              [ 7, 10]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25558,"byte_end":25603,"line_start":661,"line_end":661,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25604,"byte_end":25607,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ // You can take multiple subviews at once (and slice at the same time)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25608,"byte_end":25682,"line_start":663,"line_end":663,"column_start":1,"column_end":75}},{"value":"/ let double_sub = a.slice(s![1, .., 0]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25683,"byte_end":25726,"line_start":664,"line_end":664,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(double_sub, aview1(&[7, 10]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25727,"byte_end":25772,"line_start":665,"line_end":665,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25773,"byte_end":25780,"line_start":666,"line_end":666,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25781,"byte_end":25784,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ ## Arithmetic Operations","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25785,"byte_end":25813,"line_start":668,"line_end":668,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25814,"byte_end":25817,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ Arrays support all arithmetic operations the same way: they apply elementwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25818,"byte_end":25900,"line_start":670,"line_end":670,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25901,"byte_end":25904,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ Since the trait implementations are hard to overview, here is a summary.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25905,"byte_end":25981,"line_start":672,"line_end":672,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25982,"byte_end":25985,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Two Arrays","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":25986,"byte_end":26026,"line_start":674,"line_end":674,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26027,"byte_end":26030,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26031,"byte_end":26095,"line_start":676,"line_end":676,"column_start":1,"column_end":65}},{"value":"/ with owned storage (either `Array` or `ArcArray`).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26096,"byte_end":26150,"line_start":677,"line_end":677,"column_start":1,"column_end":55}},{"value":"/ Let `C` be an array with mutable data (either `Array`, `ArcArray`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26151,"byte_end":26220,"line_start":678,"line_end":678,"column_start":1,"column_end":70}},{"value":"/ or `ArrayViewMut`).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26221,"byte_end":26244,"line_start":679,"line_end":679,"column_start":1,"column_end":24}},{"value":"/ The following combinations of operands","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26245,"byte_end":26287,"line_start":680,"line_end":680,"column_start":1,"column_end":43}},{"value":"/ are supported for an arbitrary binary operator denoted by `@` (it can be","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26288,"byte_end":26364,"line_start":681,"line_end":681,"column_start":1,"column_end":77}},{"value":"/ `+`, `-`, `*`, `/` and so on).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26365,"byte_end":26399,"line_start":682,"line_end":682,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26400,"byte_end":26403,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ - `&A @ &A` which produces a new `Array`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26404,"byte_end":26448,"line_start":684,"line_end":684,"column_start":1,"column_end":45}},{"value":"/ - `B @ A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26449,"byte_end":26525,"line_start":685,"line_end":685,"column_start":1,"column_end":77}},{"value":"/ - `B @ &A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26526,"byte_end":26603,"line_start":686,"line_end":686,"column_start":1,"column_end":78}},{"value":"/ - `C @= &A` which performs an arithmetic operation in place","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26604,"byte_end":26667,"line_start":687,"line_end":687,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26668,"byte_end":26671,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ Note that the element type needs to implement the operator trait and the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26672,"byte_end":26748,"line_start":689,"line_end":689,"column_start":1,"column_end":77}},{"value":"/ `Clone` trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26749,"byte_end":26767,"line_start":690,"line_end":690,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26768,"byte_end":26771,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26772,"byte_end":26779,"line_start":692,"line_end":692,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{array, ArrayView1};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26780,"byte_end":26817,"line_start":693,"line_end":693,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26818,"byte_end":26821,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ let owned1 = array![1, 2];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26822,"byte_end":26852,"line_start":695,"line_end":695,"column_start":1,"column_end":31}},{"value":"/ let owned2 = array![3, 4];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26853,"byte_end":26883,"line_start":696,"line_end":696,"column_start":1,"column_end":31}},{"value":"/ let view1 = ArrayView1::from(&[5, 6]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26884,"byte_end":26926,"line_start":697,"line_end":697,"column_start":1,"column_end":43}},{"value":"/ let view2 = ArrayView1::from(&[7, 8]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26927,"byte_end":26969,"line_start":698,"line_end":698,"column_start":1,"column_end":43}},{"value":"/ let mut mutable = array![9, 10];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":26970,"byte_end":27006,"line_start":699,"line_end":699,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27007,"byte_end":27010,"line_start":700,"line_end":700,"column_start":1,"column_end":4}},{"value":"/ let sum1 = &view1 + &view2;   // Allocates a new array. Note the explicit `&`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27011,"byte_end":27093,"line_start":701,"line_end":701,"column_start":1,"column_end":83}},{"value":"/ // let sum2 = view1 + &view2; // This doesn't work because `view1` is not an owned array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27094,"byte_end":27187,"line_start":702,"line_end":702,"column_start":1,"column_end":94}},{"value":"/ let sum3 = owned1 + view1;    // Consumes `owned1`, updates it, and returns it.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27188,"byte_end":27271,"line_start":703,"line_end":703,"column_start":1,"column_end":84}},{"value":"/ let sum4 = owned2 + &view2;   // Consumes `owned2`, updates it, and returns it.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27272,"byte_end":27355,"line_start":704,"line_end":704,"column_start":1,"column_end":84}},{"value":"/ mutable += &view2;            // Updates `mutable` in-place.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27356,"byte_end":27420,"line_start":705,"line_end":705,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27421,"byte_end":27428,"line_start":706,"line_end":706,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27429,"byte_end":27432,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Array and Scalar","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27433,"byte_end":27479,"line_start":708,"line_end":708,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27480,"byte_end":27483,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ The trait [`ScalarOperand`] marks types that can be used in arithmetic","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27484,"byte_end":27558,"line_start":710,"line_end":710,"column_start":1,"column_end":75}},{"value":"/ with arrays directly. For a scalar `K` the following combinations of operands","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27559,"byte_end":27640,"line_start":711,"line_end":711,"column_start":1,"column_end":82}},{"value":"/ are supported (scalar can be on either the left or right side, but","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27641,"byte_end":27711,"line_start":712,"line_end":712,"column_start":1,"column_end":71}},{"value":"/ `ScalarOperand` docs has the detailed condtions).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27712,"byte_end":27765,"line_start":713,"line_end":713,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27766,"byte_end":27769,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ - `&A @ K` or `K @ &A` which produces a new `Array`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27770,"byte_end":27825,"line_start":715,"line_end":715,"column_start":1,"column_end":56}},{"value":"/ - `B @ K` or `K @ B` which consumes `B`, updates it with the result and returns it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27826,"byte_end":27912,"line_start":716,"line_end":716,"column_start":1,"column_end":87}},{"value":"/ - `C @= K` which performs an arithmetic operation in place","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27913,"byte_end":27975,"line_start":717,"line_end":717,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27976,"byte_end":27979,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ ### Unary Operators","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":27980,"byte_end":28003,"line_start":719,"line_end":719,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28004,"byte_end":28007,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array with owned","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28008,"byte_end":28083,"line_start":721,"line_end":721,"column_start":1,"column_end":76}},{"value":"/ storage (either `Array` or `ArcArray`). The following operands are supported","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28084,"byte_end":28164,"line_start":722,"line_end":722,"column_start":1,"column_end":81}},{"value":"/ for an arbitrary unary operator denoted by `@` (it can be `-` or `!`).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28165,"byte_end":28239,"line_start":723,"line_end":723,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28240,"byte_end":28243,"line_start":724,"line_end":724,"column_start":1,"column_end":4}},{"value":"/ - `@&A` which produces a new `Array`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28244,"byte_end":28284,"line_start":725,"line_end":725,"column_start":1,"column_end":41}},{"value":"/ - `@B` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28285,"byte_end":28358,"line_start":726,"line_end":726,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28359,"byte_end":28362,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ ## Broadcasting","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28363,"byte_end":28382,"line_start":728,"line_end":728,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28383,"byte_end":28386,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ Arrays support limited *broadcasting*, where arithmetic operations with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28387,"byte_end":28462,"line_start":730,"line_end":730,"column_start":1,"column_end":76}},{"value":"/ array operands of different sizes can be carried out by repeating the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28463,"byte_end":28536,"line_start":731,"line_end":731,"column_start":1,"column_end":74}},{"value":"/ elements of the smaller dimension array. See","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28537,"byte_end":28585,"line_start":732,"line_end":732,"column_start":1,"column_end":49}},{"value":"/ [`.broadcast()`](Self::broadcast) for a more detailed","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28586,"byte_end":28643,"line_start":733,"line_end":733,"column_start":1,"column_end":58}},{"value":"/ description.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28644,"byte_end":28660,"line_start":734,"line_end":734,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28661,"byte_end":28664,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28665,"byte_end":28672,"line_start":736,"line_end":736,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28673,"byte_end":28695,"line_start":737,"line_end":737,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28696,"byte_end":28699,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28700,"byte_end":28728,"line_start":739,"line_end":739,"column_start":1,"column_end":29}},{"value":"/                [1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28729,"byte_end":28757,"line_start":740,"line_end":740,"column_start":1,"column_end":29}},{"value":"/                [0., 3.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28758,"byte_end":28786,"line_start":741,"line_end":741,"column_start":1,"column_end":29}},{"value":"/                [0., 4.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28787,"byte_end":28817,"line_start":742,"line_end":742,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28818,"byte_end":28821,"line_start":743,"line_end":743,"column_start":1,"column_end":4}},{"value":"/ let b = arr2(&[[0., 1.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28822,"byte_end":28852,"line_start":744,"line_end":744,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28853,"byte_end":28856,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ let c = arr2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28857,"byte_end":28885,"line_start":746,"line_end":746,"column_start":1,"column_end":29}},{"value":"/                [1., 3.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28886,"byte_end":28914,"line_start":747,"line_end":747,"column_start":1,"column_end":29}},{"value":"/                [0., 4.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28915,"byte_end":28943,"line_start":748,"line_end":748,"column_start":1,"column_end":29}},{"value":"/                [0., 5.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28944,"byte_end":28974,"line_start":749,"line_end":749,"column_start":1,"column_end":31}},{"value":"/ // We can add because the shapes are compatible even if not equal.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":28975,"byte_end":29045,"line_start":750,"line_end":750,"column_start":1,"column_end":71}},{"value":"/ // The `b` array is shape 1 × 2 but acts like a 4 × 2 array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29046,"byte_end":29112,"line_start":751,"line_end":751,"column_start":1,"column_end":65}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29113,"byte_end":29125,"line_start":752,"line_end":752,"column_start":1,"column_end":13}},{"value":"/     c == a + b","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29126,"byte_end":29144,"line_start":753,"line_end":753,"column_start":1,"column_end":19}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29145,"byte_end":29151,"line_start":754,"line_end":754,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29152,"byte_end":29159,"line_start":755,"line_end":755,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29160,"byte_end":29163,"line_start":756,"line_end":756,"column_start":1,"column_end":4}},{"value":"/ ## Conversions","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29164,"byte_end":29182,"line_start":757,"line_end":757,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29183,"byte_end":29186,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Array Types","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29187,"byte_end":29226,"line_start":759,"line_end":759,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29227,"byte_end":29230,"line_start":760,"line_end":760,"column_start":1,"column_end":4}},{"value":"/ This table is a summary of the conversions between arrays of different","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29231,"byte_end":29305,"line_start":761,"line_end":761,"column_start":1,"column_end":75}},{"value":"/ ownership, dimensionality, and element type. All of the conversions in this","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29306,"byte_end":29385,"line_start":762,"line_end":762,"column_start":1,"column_end":80}},{"value":"/ table preserve the shape of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29386,"byte_end":29428,"line_start":763,"line_end":763,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29429,"byte_end":29432,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29433,"byte_end":29444,"line_start":765,"line_end":765,"column_start":1,"column_end":12}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29445,"byte_end":29453,"line_start":766,"line_end":766,"column_start":1,"column_end":9}},{"value":"/ <th rowspan=\"2\">Output</th>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29454,"byte_end":29485,"line_start":767,"line_end":767,"column_start":1,"column_end":32}},{"value":"/ <th colspan=\"5\">Input</th>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29486,"byte_end":29516,"line_start":768,"line_end":768,"column_start":1,"column_end":31}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29517,"byte_end":29526,"line_start":769,"line_end":769,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29527,"byte_end":29530,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29531,"byte_end":29539,"line_start":771,"line_end":771,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29540,"byte_end":29548,"line_start":772,"line_end":772,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29549,"byte_end":29552,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29553,"byte_end":29570,"line_start":774,"line_end":774,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29571,"byte_end":29574,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29575,"byte_end":29584,"line_start":776,"line_end":776,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29585,"byte_end":29593,"line_start":777,"line_end":777,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29594,"byte_end":29597,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29598,"byte_end":29618,"line_start":779,"line_end":779,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29619,"byte_end":29622,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29623,"byte_end":29632,"line_start":781,"line_end":781,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29633,"byte_end":29641,"line_start":782,"line_end":782,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29642,"byte_end":29645,"line_start":783,"line_end":783,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29646,"byte_end":29670,"line_start":784,"line_end":784,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29671,"byte_end":29674,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29675,"byte_end":29684,"line_start":786,"line_end":786,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29685,"byte_end":29693,"line_start":787,"line_end":787,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29694,"byte_end":29697,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'a, A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29698,"byte_end":29723,"line_start":789,"line_end":789,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29724,"byte_end":29727,"line_start":790,"line_end":790,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29728,"byte_end":29737,"line_start":791,"line_end":791,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29738,"byte_end":29746,"line_start":792,"line_end":792,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29747,"byte_end":29750,"line_start":793,"line_end":793,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'a, A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29751,"byte_end":29779,"line_start":794,"line_end":794,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29780,"byte_end":29783,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29784,"byte_end":29793,"line_start":796,"line_end":796,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29794,"byte_end":29803,"line_start":797,"line_end":797,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29804,"byte_end":29807,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<A, D>`-->","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29808,"byte_end":29847,"line_start":799,"line_end":799,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29848,"byte_end":29851,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29852,"byte_end":29860,"line_start":801,"line_end":801,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29861,"byte_end":29869,"line_start":802,"line_end":802,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29870,"byte_end":29873,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29874,"byte_end":29891,"line_start":804,"line_end":804,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29892,"byte_end":29895,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29896,"byte_end":29905,"line_start":806,"line_end":806,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29906,"byte_end":29914,"line_start":807,"line_end":807,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29915,"byte_end":29918,"line_start":808,"line_end":808,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29919,"byte_end":29928,"line_start":809,"line_end":809,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29929,"byte_end":29932,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29933,"byte_end":29942,"line_start":811,"line_end":811,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29943,"byte_end":29951,"line_start":812,"line_end":812,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29952,"byte_end":29955,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29956,"byte_end":29993,"line_start":814,"line_end":814,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29994,"byte_end":29997,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":29998,"byte_end":30007,"line_start":816,"line_end":816,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30008,"byte_end":30016,"line_start":817,"line_end":817,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30017,"byte_end":30020,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30021,"byte_end":30058,"line_start":819,"line_end":819,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30059,"byte_end":30062,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30063,"byte_end":30072,"line_start":821,"line_end":821,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30073,"byte_end":30081,"line_start":822,"line_end":822,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30082,"byte_end":30085,"line_start":823,"line_end":823,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30086,"byte_end":30119,"line_start":824,"line_end":824,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30120,"byte_end":30123,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30124,"byte_end":30133,"line_start":826,"line_end":826,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30134,"byte_end":30142,"line_start":827,"line_end":827,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30143,"byte_end":30146,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30147,"byte_end":30180,"line_start":829,"line_end":829,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30181,"byte_end":30184,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30185,"byte_end":30194,"line_start":831,"line_end":831,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30195,"byte_end":30204,"line_start":832,"line_end":832,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30205,"byte_end":30208,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArcArray<A, D>`-->","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30209,"byte_end":30251,"line_start":834,"line_end":834,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30252,"byte_end":30255,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30256,"byte_end":30264,"line_start":836,"line_end":836,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30265,"byte_end":30273,"line_start":837,"line_end":837,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30274,"byte_end":30277,"line_start":838,"line_end":838,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30278,"byte_end":30298,"line_start":839,"line_end":839,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30299,"byte_end":30302,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30303,"byte_end":30312,"line_start":841,"line_end":841,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30313,"byte_end":30321,"line_start":842,"line_end":842,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30322,"byte_end":30325,"line_start":843,"line_end":843,"column_start":1,"column_end":4}},{"value":"/ [`a.into_shared()`][.into_shared()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30326,"byte_end":30365,"line_start":844,"line_end":844,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30366,"byte_end":30369,"line_start":845,"line_end":845,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30370,"byte_end":30379,"line_start":846,"line_end":846,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30380,"byte_end":30388,"line_start":847,"line_end":847,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30389,"byte_end":30392,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30393,"byte_end":30402,"line_start":849,"line_end":849,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30403,"byte_end":30406,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30407,"byte_end":30416,"line_start":851,"line_end":851,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30417,"byte_end":30425,"line_start":852,"line_end":852,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30426,"byte_end":30429,"line_start":853,"line_end":853,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned().into_shared()`][.into_shared()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30430,"byte_end":30482,"line_start":854,"line_end":854,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30483,"byte_end":30486,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30487,"byte_end":30496,"line_start":856,"line_end":856,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30497,"byte_end":30505,"line_start":857,"line_end":857,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30506,"byte_end":30509,"line_start":858,"line_end":858,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30510,"byte_end":30560,"line_start":859,"line_end":859,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30561,"byte_end":30564,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30565,"byte_end":30574,"line_start":861,"line_end":861,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30575,"byte_end":30583,"line_start":862,"line_end":862,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30584,"byte_end":30587,"line_start":863,"line_end":863,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30588,"byte_end":30638,"line_start":864,"line_end":864,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30639,"byte_end":30642,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30643,"byte_end":30652,"line_start":866,"line_end":866,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30653,"byte_end":30662,"line_start":867,"line_end":867,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30663,"byte_end":30666,"line_start":868,"line_end":868,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `CowArray<'a, A, D>`-->","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30667,"byte_end":30713,"line_start":869,"line_end":869,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30714,"byte_end":30717,"line_start":870,"line_end":870,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30718,"byte_end":30726,"line_start":871,"line_end":871,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30727,"byte_end":30735,"line_start":872,"line_end":872,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30736,"byte_end":30739,"line_start":873,"line_end":873,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30740,"byte_end":30764,"line_start":874,"line_end":874,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30765,"byte_end":30768,"line_start":875,"line_end":875,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30769,"byte_end":30778,"line_start":876,"line_end":876,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30779,"byte_end":30787,"line_start":877,"line_end":877,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30788,"byte_end":30791,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](CowArray#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30792,"byte_end":30869,"line_start":879,"line_end":879,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30870,"byte_end":30873,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30874,"byte_end":30883,"line_start":881,"line_end":881,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30884,"byte_end":30892,"line_start":882,"line_end":882,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30893,"byte_end":30896,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.into_owned())`](CowArray#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30897,"byte_end":30987,"line_start":884,"line_end":884,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30988,"byte_end":30991,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":30992,"byte_end":31001,"line_start":886,"line_end":886,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31002,"byte_end":31010,"line_start":887,"line_end":887,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31011,"byte_end":31014,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31015,"byte_end":31024,"line_start":889,"line_end":889,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31025,"byte_end":31028,"line_start":890,"line_end":890,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31029,"byte_end":31038,"line_start":891,"line_end":891,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31039,"byte_end":31047,"line_start":892,"line_end":892,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31048,"byte_end":31051,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](CowArray#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31052,"byte_end":31138,"line_start":894,"line_end":894,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31139,"byte_end":31142,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31143,"byte_end":31152,"line_start":896,"line_end":896,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31153,"byte_end":31161,"line_start":897,"line_end":897,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31162,"byte_end":31165,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.view())`](CowArray#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31166,"byte_end":31259,"line_start":899,"line_end":899,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31260,"byte_end":31263,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31264,"byte_end":31273,"line_start":901,"line_end":901,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31274,"byte_end":31283,"line_start":902,"line_end":902,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31284,"byte_end":31287,"line_start":903,"line_end":903,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayView<'b, A, D>`-->","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31288,"byte_end":31335,"line_start":904,"line_end":904,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31336,"byte_end":31339,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31340,"byte_end":31348,"line_start":906,"line_end":906,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31349,"byte_end":31357,"line_start":907,"line_end":907,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31358,"byte_end":31361,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'b, A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31362,"byte_end":31387,"line_start":909,"line_end":909,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31388,"byte_end":31391,"line_start":910,"line_end":910,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31392,"byte_end":31401,"line_start":911,"line_end":911,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31402,"byte_end":31410,"line_start":912,"line_end":912,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31411,"byte_end":31414,"line_start":913,"line_end":913,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31415,"byte_end":31440,"line_start":914,"line_end":914,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31441,"byte_end":31444,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31445,"byte_end":31454,"line_start":916,"line_end":916,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31455,"byte_end":31463,"line_start":917,"line_end":917,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31464,"byte_end":31467,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31468,"byte_end":31493,"line_start":919,"line_end":919,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31494,"byte_end":31497,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31498,"byte_end":31507,"line_start":921,"line_end":921,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31508,"byte_end":31516,"line_start":922,"line_end":922,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31517,"byte_end":31520,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31521,"byte_end":31546,"line_start":924,"line_end":924,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31547,"byte_end":31550,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31551,"byte_end":31560,"line_start":926,"line_end":926,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31561,"byte_end":31569,"line_start":927,"line_end":927,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31570,"byte_end":31573,"line_start":928,"line_end":928,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()] or [`a.reborrow()`][ArrayView::reborrow()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31574,"byte_end":31642,"line_start":929,"line_end":929,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31643,"byte_end":31646,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31647,"byte_end":31656,"line_start":931,"line_end":931,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31657,"byte_end":31665,"line_start":932,"line_end":932,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31666,"byte_end":31669,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31670,"byte_end":31695,"line_start":934,"line_end":934,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31696,"byte_end":31699,"line_start":935,"line_end":935,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31700,"byte_end":31709,"line_start":936,"line_end":936,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31710,"byte_end":31719,"line_start":937,"line_end":937,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31720,"byte_end":31723,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayViewMut<'b, A, D>`-->","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31724,"byte_end":31774,"line_start":939,"line_end":939,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31775,"byte_end":31778,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31779,"byte_end":31787,"line_start":941,"line_end":941,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31788,"byte_end":31796,"line_start":942,"line_end":942,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31797,"byte_end":31800,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'b, A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31801,"byte_end":31829,"line_start":944,"line_end":944,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31830,"byte_end":31833,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31834,"byte_end":31843,"line_start":946,"line_end":946,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31844,"byte_end":31852,"line_start":947,"line_end":947,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31853,"byte_end":31856,"line_start":948,"line_end":948,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31857,"byte_end":31890,"line_start":949,"line_end":949,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31891,"byte_end":31894,"line_start":950,"line_end":950,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31895,"byte_end":31904,"line_start":951,"line_end":951,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31905,"byte_end":31913,"line_start":952,"line_end":952,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31914,"byte_end":31917,"line_start":953,"line_end":953,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31918,"byte_end":31951,"line_start":954,"line_end":954,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31952,"byte_end":31955,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31956,"byte_end":31965,"line_start":956,"line_end":956,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31966,"byte_end":31974,"line_start":957,"line_end":957,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31975,"byte_end":31978,"line_start":958,"line_end":958,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":31979,"byte_end":32012,"line_start":959,"line_end":959,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32013,"byte_end":32016,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32017,"byte_end":32026,"line_start":961,"line_end":961,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32027,"byte_end":32035,"line_start":962,"line_end":962,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32036,"byte_end":32039,"line_start":963,"line_end":963,"column_start":1,"column_end":4}},{"value":"/ illegal","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32040,"byte_end":32051,"line_start":964,"line_end":964,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32052,"byte_end":32055,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32056,"byte_end":32065,"line_start":966,"line_end":966,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32066,"byte_end":32074,"line_start":967,"line_end":967,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32075,"byte_end":32078,"line_start":968,"line_end":968,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()] or [`a.reborrow()`][ArrayViewMut::reborrow()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32079,"byte_end":32158,"line_start":969,"line_end":969,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32159,"byte_end":32162,"line_start":970,"line_end":970,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32163,"byte_end":32172,"line_start":971,"line_end":971,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32173,"byte_end":32182,"line_start":972,"line_end":972,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32183,"byte_end":32186,"line_start":973,"line_end":973,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `D2`-->","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32187,"byte_end":32237,"line_start":974,"line_end":974,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32238,"byte_end":32241,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32242,"byte_end":32250,"line_start":976,"line_end":976,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32251,"byte_end":32259,"line_start":977,"line_end":977,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32260,"byte_end":32263,"line_start":978,"line_end":978,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `D2` (e.g. converting from dynamic dim to const dim)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32264,"byte_end":32340,"line_start":979,"line_end":979,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32341,"byte_end":32344,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32345,"byte_end":32354,"line_start":981,"line_end":981,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32355,"byte_end":32375,"line_start":982,"line_end":982,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32376,"byte_end":32379,"line_start":983,"line_end":983,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dimensionality::<D2>()`][.into_dimensionality()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32380,"byte_end":32441,"line_start":984,"line_end":984,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32442,"byte_end":32445,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32446,"byte_end":32455,"line_start":986,"line_end":986,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32456,"byte_end":32465,"line_start":987,"line_end":987,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32466,"byte_end":32469,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `IxDyn`-->","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32470,"byte_end":32523,"line_start":989,"line_end":989,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32524,"byte_end":32527,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32528,"byte_end":32536,"line_start":991,"line_end":991,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32537,"byte_end":32545,"line_start":992,"line_end":992,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32546,"byte_end":32549,"line_start":993,"line_end":993,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `IxDyn`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32550,"byte_end":32581,"line_start":994,"line_end":994,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32582,"byte_end":32585,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32586,"byte_end":32595,"line_start":996,"line_end":996,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32596,"byte_end":32616,"line_start":997,"line_end":997,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32617,"byte_end":32620,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dyn()`][.into_dyn()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32621,"byte_end":32654,"line_start":999,"line_end":999,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32655,"byte_end":32658,"line_start":1000,"line_end":1000,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32659,"byte_end":32668,"line_start":1001,"line_end":1001,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32669,"byte_end":32678,"line_start":1002,"line_end":1002,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32679,"byte_end":32682,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<B, D>`-->","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32683,"byte_end":32722,"line_start":1004,"line_end":1004,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32723,"byte_end":32726,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32727,"byte_end":32735,"line_start":1006,"line_end":1006,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32736,"byte_end":32744,"line_start":1007,"line_end":1007,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32745,"byte_end":32748,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ `Array<B, D>` (new element type)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32749,"byte_end":32785,"line_start":1009,"line_end":1009,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32786,"byte_end":32789,"line_start":1010,"line_end":1010,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32790,"byte_end":32799,"line_start":1011,"line_end":1011,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32800,"byte_end":32820,"line_start":1012,"line_end":1012,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32821,"byte_end":32824,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ [`a.map(|x| x.do_your_conversion())`][.map()]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32825,"byte_end":32874,"line_start":1014,"line_end":1014,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32875,"byte_end":32878,"line_start":1015,"line_end":1015,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32879,"byte_end":32888,"line_start":1016,"line_end":1016,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32889,"byte_end":32898,"line_start":1017,"line_end":1017,"column_start":1,"column_end":10}},{"value":"/ </table>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32899,"byte_end":32911,"line_start":1018,"line_end":1018,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32912,"byte_end":32915,"line_start":1019,"line_end":1019,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Arrays and `Vec`s/Slices/Scalars","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32916,"byte_end":32976,"line_start":1020,"line_end":1020,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32977,"byte_end":32980,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ This is a table of the safe conversions between arrays and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":32981,"byte_end":33043,"line_start":1022,"line_end":1022,"column_start":1,"column_end":63}},{"value":"/ `Vec`s/slices/scalars. Note that some of the return values are actually","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33044,"byte_end":33119,"line_start":1023,"line_end":1023,"column_start":1,"column_end":76}},{"value":"/ `Result`/`Option` wrappers around the indicated output types.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33120,"byte_end":33185,"line_start":1024,"line_end":1024,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33186,"byte_end":33189,"line_start":1025,"line_end":1025,"column_start":1,"column_end":4}},{"value":"/ Input | Output | Methods","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33190,"byte_end":33218,"line_start":1026,"line_end":1026,"column_start":1,"column_end":29}},{"value":"/ ------|--------|--------","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33219,"byte_end":33247,"line_start":1027,"line_end":1027,"column_start":1,"column_end":29}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, Ix1>` | [`::from_vec()`](Self::from_vec)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33248,"byte_end":33328,"line_start":1028,"line_end":1028,"column_start":1,"column_end":81}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, D>` | [`::from_shape_vec()`](Self::from_shape_vec)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33329,"byte_end":33419,"line_start":1029,"line_end":1029,"column_start":1,"column_end":91}},{"value":"/ `&[A]` | `ArrayView1<A>` | [`::from()`](ArrayView#method.from)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33420,"byte_end":33486,"line_start":1030,"line_end":1030,"column_start":1,"column_end":67}},{"value":"/ `&[A]` | `ArrayView<A, D>` | [`::from_shape()`](ArrayView#method.from_shape)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33487,"byte_end":33567,"line_start":1031,"line_end":1031,"column_start":1,"column_end":81}},{"value":"/ `&mut [A]` | `ArrayViewMut1<A>` | [`::from()`](ArrayViewMut#method.from)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33568,"byte_end":33644,"line_start":1032,"line_end":1032,"column_start":1,"column_end":77}},{"value":"/ `&mut [A]` | `ArrayViewMut<A, D>` | [`::from_shape()`](ArrayViewMut#method.from_shape)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33645,"byte_end":33735,"line_start":1033,"line_end":1033,"column_start":1,"column_end":91}},{"value":"/ `&ArrayBase<S, Ix1>` | `Vec<A>` | [`.to_vec()`](Self::to_vec)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33736,"byte_end":33801,"line_start":1034,"line_end":1034,"column_start":1,"column_end":66}},{"value":"/ `Array<A, D>` | `Vec<A>` | [`.into_raw_vec()`](Array#method.into_raw_vec)<sup>[1](#into_raw_vec)</sup>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33802,"byte_end":33908,"line_start":1035,"line_end":1035,"column_start":1,"column_end":107}},{"value":"/ `&ArrayBase<S, D>` | `&[A]` | [`.as_slice()`](Self::as_slice)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order()`](Self::as_slice_memory_order)<sup>[3](#req_contig)</sup>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":33909,"byte_end":34091,"line_start":1036,"line_end":1036,"column_start":1,"column_end":183}},{"value":"/ `&mut ArrayBase<S: DataMut, D>` | `&mut [A]` | [`.as_slice_mut()`](Self::as_slice_mut)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order_mut()`](Self::as_slice_memory_order_mut)<sup>[3](#req_contig)</sup>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34092,"byte_end":34307,"line_start":1037,"line_end":1037,"column_start":1,"column_end":216}},{"value":"/ `ArrayView<A, D>` | `&[A]` | [`.to_slice()`](ArrayView#method.to_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34308,"byte_end":34414,"line_start":1038,"line_end":1038,"column_start":1,"column_end":107}},{"value":"/ `ArrayViewMut<A, D>` | `&mut [A]` | [`.into_slice()`](ArrayViewMut#method.into_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34415,"byte_end":34535,"line_start":1039,"line_end":1039,"column_start":1,"column_end":121}},{"value":"/ `Array0<A>` | `A` | [`.into_scalar()`](Array#method.into_scalar)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34536,"byte_end":34604,"line_start":1040,"line_end":1040,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34605,"byte_end":34608,"line_start":1041,"line_end":1041,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"into_raw_vec\">1</a></sup>Returns the data in memory order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34609,"byte_end":34685,"line_start":1042,"line_end":1042,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34686,"byte_end":34689,"line_start":1043,"line_end":1043,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig_std\">2</a></sup>Works only if the array is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34690,"byte_end":34761,"line_start":1044,"line_end":1044,"column_start":1,"column_end":72}},{"value":"/ contiguous and in standard order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34762,"byte_end":34799,"line_start":1045,"line_end":1045,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34800,"byte_end":34803,"line_start":1046,"line_end":1046,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig\">3</a></sup>Works only if the array is contiguous.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34804,"byte_end":34883,"line_start":1047,"line_end":1047,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34884,"byte_end":34887,"line_start":1048,"line_end":1048,"column_start":1,"column_end":4}},{"value":"/ The table above does not include all the constructors; it only shows","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34888,"byte_end":34960,"line_start":1049,"line_end":1049,"column_start":1,"column_end":73}},{"value":"/ conversions to/from `Vec`s/slices. See","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":34961,"byte_end":35003,"line_start":1050,"line_end":1050,"column_start":1,"column_end":43}},{"value":"/ [below](#constructor-methods-for-owned-arrays) for more constructors.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35004,"byte_end":35077,"line_start":1051,"line_end":1051,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35078,"byte_end":35081,"line_start":1052,"line_end":1052,"column_start":1,"column_end":4}},{"value":"/ [ArrayView::reborrow()]: ArrayView#method.reborrow","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35082,"byte_end":35136,"line_start":1053,"line_end":1053,"column_start":1,"column_end":55}},{"value":"/ [ArrayViewMut::reborrow()]: ArrayViewMut#method.reborrow","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35137,"byte_end":35197,"line_start":1054,"line_end":1054,"column_start":1,"column_end":61}},{"value":"/ [.into_dimensionality()]: Self::into_dimensionality","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35198,"byte_end":35253,"line_start":1055,"line_end":1055,"column_start":1,"column_end":56}},{"value":"/ [.into_dyn()]: Self::into_dyn","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35254,"byte_end":35287,"line_start":1056,"line_end":1056,"column_start":1,"column_end":34}},{"value":"/ [.into_owned()]: Self::into_owned","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35288,"byte_end":35325,"line_start":1057,"line_end":1057,"column_start":1,"column_end":38}},{"value":"/ [.into_shared()]: Self::into_shared","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35326,"byte_end":35365,"line_start":1058,"line_end":1058,"column_start":1,"column_end":40}},{"value":"/ [.to_owned()]: Self::to_owned","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35366,"byte_end":35399,"line_start":1059,"line_end":1059,"column_start":1,"column_end":34}},{"value":"/ [.map()]: Self::map","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35400,"byte_end":35423,"line_start":1060,"line_end":1060,"column_start":1,"column_end":24}},{"value":"/ [.view()]: Self::view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35424,"byte_end":35449,"line_start":1061,"line_end":1061,"column_start":1,"column_end":26}},{"value":"/ [.view_mut()]: Self::view_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35450,"byte_end":35483,"line_start":1062,"line_end":1062,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35484,"byte_end":35487,"line_start":1063,"line_end":1063,"column_start":1,"column_end":4}},{"value":"/ ### Conversions from Nested `Vec`s/`Array`s","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35488,"byte_end":35535,"line_start":1064,"line_end":1064,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35536,"byte_end":35539,"line_start":1065,"line_end":1065,"column_start":1,"column_end":4}},{"value":"/ It's generally a good idea to avoid nested `Vec`/`Array` types, such as","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35540,"byte_end":35615,"line_start":1066,"line_end":1066,"column_start":1,"column_end":76}},{"value":"/ `Vec<Vec<A>>` or `Vec<Array2<A>>` because:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35616,"byte_end":35662,"line_start":1067,"line_end":1067,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35663,"byte_end":35666,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ * they require extra heap allocations compared to a single `Array`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35667,"byte_end":35738,"line_start":1069,"line_end":1069,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35739,"byte_end":35742,"line_start":1070,"line_end":1070,"column_start":1,"column_end":4}},{"value":"/ * they can scatter data all over memory (because of multiple allocations),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35743,"byte_end":35821,"line_start":1071,"line_end":1071,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35822,"byte_end":35825,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ * they cause unnecessary indirection (traversing multiple pointers to reach","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35826,"byte_end":35905,"line_start":1073,"line_end":1073,"column_start":1,"column_end":80}},{"value":"/   the data),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35906,"byte_end":35922,"line_start":1074,"line_end":1074,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35923,"byte_end":35926,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ * they don't enforce consistent shape within the nested","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35927,"byte_end":35986,"line_start":1076,"line_end":1076,"column_start":1,"column_end":60}},{"value":"/   `Vec`s/`ArrayBase`s, and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":35987,"byte_end":36017,"line_start":1077,"line_end":1077,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36018,"byte_end":36021,"line_start":1078,"line_end":1078,"column_start":1,"column_end":4}},{"value":"/ * they are generally more difficult to work with.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36022,"byte_end":36075,"line_start":1079,"line_end":1079,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36076,"byte_end":36079,"line_start":1080,"line_end":1080,"column_start":1,"column_end":4}},{"value":"/ The most common case where users might consider using nested","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36080,"byte_end":36144,"line_start":1081,"line_end":1081,"column_start":1,"column_end":65}},{"value":"/ `Vec`s/`Array`s is when creating an array by appending rows/subviews in a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36145,"byte_end":36222,"line_start":1082,"line_end":1082,"column_start":1,"column_end":78}},{"value":"/ loop, where the rows/subviews are computed within the loop. However, there","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36223,"byte_end":36301,"line_start":1083,"line_end":1083,"column_start":1,"column_end":79}},{"value":"/ are better ways than using nested `Vec`s/`Array`s.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36302,"byte_end":36356,"line_start":1084,"line_end":1084,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36357,"byte_end":36360,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ If you know ahead-of-time the shape of the final array, the cleanest","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36361,"byte_end":36433,"line_start":1086,"line_end":1086,"column_start":1,"column_end":73}},{"value":"/ solution is to allocate the final array before the loop, and then assign","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36434,"byte_end":36510,"line_start":1087,"line_end":1087,"column_start":1,"column_end":77}},{"value":"/ the data to it within the loop, like this:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36511,"byte_end":36557,"line_start":1088,"line_end":1088,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36558,"byte_end":36561,"line_start":1089,"line_end":1089,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36562,"byte_end":36573,"line_start":1090,"line_end":1090,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36574,"byte_end":36613,"line_start":1091,"line_end":1091,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36614,"byte_end":36617,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ let mut arr = Array2::zeros((2, 3));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36618,"byte_end":36658,"line_start":1093,"line_end":1093,"column_start":1,"column_end":41}},{"value":"/ for (i, mut row) in arr.axis_iter_mut(Axis(0)).enumerate() {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36659,"byte_end":36723,"line_start":1094,"line_end":1094,"column_start":1,"column_end":65}},{"value":"/     // Perform calculations and assign to `row`; this is a trivial example:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36724,"byte_end":36803,"line_start":1095,"line_end":1095,"column_start":1,"column_end":80}},{"value":"/     row.fill(i);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36804,"byte_end":36824,"line_start":1096,"line_end":1096,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36825,"byte_end":36830,"line_start":1097,"line_end":1097,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36831,"byte_end":36881,"line_start":1098,"line_end":1098,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36882,"byte_end":36889,"line_start":1099,"line_end":1099,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36890,"byte_end":36893,"line_start":1100,"line_end":1100,"column_start":1,"column_end":4}},{"value":"/ If you don't know ahead-of-time the shape of the final array, then the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36894,"byte_end":36968,"line_start":1101,"line_end":1101,"column_start":1,"column_end":75}},{"value":"/ cleanest solution is generally to append the data to a flat `Vec`, and then","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":36969,"byte_end":37048,"line_start":1102,"line_end":1102,"column_start":1,"column_end":80}},{"value":"/ convert it to an `Array` at the end with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37049,"byte_end":37093,"line_start":1103,"line_end":1103,"column_start":1,"column_end":45}},{"value":"/ [`::from_shape_vec()`](Self::from_shape_vec). You just have to be careful","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37094,"byte_end":37171,"line_start":1104,"line_end":1104,"column_start":1,"column_end":78}},{"value":"/ that the layout of the data (the order of the elements in the flat `Vec`)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37172,"byte_end":37249,"line_start":1105,"line_end":1105,"column_start":1,"column_end":78}},{"value":"/ is correct.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37250,"byte_end":37265,"line_start":1106,"line_end":1106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37266,"byte_end":37269,"line_start":1107,"line_end":1107,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37270,"byte_end":37281,"line_start":1108,"line_end":1108,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37282,"byte_end":37315,"line_start":1109,"line_end":1109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37316,"byte_end":37319,"line_start":1110,"line_end":1110,"column_start":1,"column_end":4}},{"value":"/ let ncols = 3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37320,"byte_end":37338,"line_start":1111,"line_end":1111,"column_start":1,"column_end":19}},{"value":"/ let mut data = Vec::new();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37339,"byte_end":37369,"line_start":1112,"line_end":1112,"column_start":1,"column_end":31}},{"value":"/ let mut nrows = 0;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37370,"byte_end":37392,"line_start":1113,"line_end":1113,"column_start":1,"column_end":23}},{"value":"/ for i in 0..2 {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37393,"byte_end":37412,"line_start":1114,"line_end":1114,"column_start":1,"column_end":20}},{"value":"/     // Compute `row` and append it to `data`; this is a trivial example:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37413,"byte_end":37489,"line_start":1115,"line_end":1115,"column_start":1,"column_end":77}},{"value":"/     let row = vec![i; ncols];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37490,"byte_end":37523,"line_start":1116,"line_end":1116,"column_start":1,"column_end":34}},{"value":"/     data.extend_from_slice(&row);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37524,"byte_end":37561,"line_start":1117,"line_end":1117,"column_start":1,"column_end":38}},{"value":"/     nrows += 1;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37562,"byte_end":37581,"line_start":1118,"line_end":1118,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37582,"byte_end":37587,"line_start":1119,"line_end":1119,"column_start":1,"column_end":6}},{"value":"/ let arr = Array2::from_shape_vec((nrows, ncols), data)?;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37588,"byte_end":37648,"line_start":1120,"line_end":1120,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37649,"byte_end":37699,"line_start":1121,"line_end":1121,"column_start":1,"column_end":51}},{"value":"/ # Ok::<(), ndarray::ShapeError>(())","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37700,"byte_end":37739,"line_start":1122,"line_end":1122,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37740,"byte_end":37747,"line_start":1123,"line_end":1123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37748,"byte_end":37751,"line_start":1124,"line_end":1124,"column_start":1,"column_end":4}},{"value":"/ If neither of these options works for you, and you really need to convert","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37752,"byte_end":37829,"line_start":1125,"line_end":1125,"column_start":1,"column_end":78}},{"value":"/ nested `Vec`/`Array` instances to an `Array`, the cleanest solution is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37830,"byte_end":37904,"line_start":1126,"line_end":1126,"column_start":1,"column_end":75}},{"value":"/ generally to use [`Iterator::flatten()`]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37905,"byte_end":37949,"line_start":1127,"line_end":1127,"column_start":1,"column_end":45}},{"value":"/ to get a flat `Vec`, and then convert the `Vec` to an `Array` with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":37950,"byte_end":38020,"line_start":1128,"line_end":1128,"column_start":1,"column_end":71}},{"value":"/ [`::from_shape_vec()`](Self::from_shape_vec), like this:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38021,"byte_end":38081,"line_start":1129,"line_end":1129,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38082,"byte_end":38085,"line_start":1130,"line_end":1130,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38086,"byte_end":38097,"line_start":1131,"line_end":1131,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Array3};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38098,"byte_end":38139,"line_start":1132,"line_end":1132,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38140,"byte_end":38143,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ let nested: Vec<Array2<i32>> = vec![","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38144,"byte_end":38184,"line_start":1134,"line_end":1134,"column_start":1,"column_end":41}},{"value":"/     array![[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38185,"byte_end":38222,"line_start":1135,"line_end":1135,"column_start":1,"column_end":38}},{"value":"/     array![[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38223,"byte_end":38263,"line_start":1136,"line_end":1136,"column_start":1,"column_end":41}},{"value":"/ ];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38264,"byte_end":38270,"line_start":1137,"line_end":1137,"column_start":1,"column_end":7}},{"value":"/ let inner_shape = nested[0].dim();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38271,"byte_end":38309,"line_start":1138,"line_end":1138,"column_start":1,"column_end":39}},{"value":"/ let shape = (nested.len(), inner_shape.0, inner_shape.1);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38310,"byte_end":38371,"line_start":1139,"line_end":1139,"column_start":1,"column_end":62}},{"value":"/ let flat: Vec<i32> = nested.iter().flatten().cloned().collect();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38372,"byte_end":38440,"line_start":1140,"line_end":1140,"column_start":1,"column_end":69}},{"value":"/ let arr = Array3::from_shape_vec(shape, flat)?;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38441,"byte_end":38492,"line_start":1141,"line_end":1141,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(arr, array![","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38493,"byte_end":38520,"line_start":1142,"line_end":1142,"column_start":1,"column_end":28}},{"value":"/     [[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38521,"byte_end":38552,"line_start":1143,"line_end":1143,"column_start":1,"column_end":32}},{"value":"/     [[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38553,"byte_end":38587,"line_start":1144,"line_end":1144,"column_start":1,"column_end":35}},{"value":"/ ]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38588,"byte_end":38595,"line_start":1145,"line_end":1145,"column_start":1,"column_end":8}},{"value":"/ # Ok::<(), ndarray::ShapeError>(())","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38596,"byte_end":38635,"line_start":1146,"line_end":1146,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38636,"byte_end":38643,"line_start":1147,"line_end":1147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38644,"byte_end":38647,"line_start":1148,"line_end":1148,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation assumes that the nested `Vec`s are all the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38648,"byte_end":38724,"line_start":1149,"line_end":1149,"column_start":1,"column_end":77}},{"value":"/ same shape and that the `Vec` is non-empty. Depending on your application,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38725,"byte_end":38803,"line_start":1150,"line_end":1150,"column_start":1,"column_end":79}},{"value":"/ it may be a good idea to add checks for these assumptions and possibly","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38804,"byte_end":38878,"line_start":1151,"line_end":1151,"column_start":1,"column_end":75}},{"value":"/ choose a different way to handle the empty case.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38879,"byte_end":38931,"line_start":1152,"line_end":1152,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":38932,"byte_end":38935,"line_start":1153,"line_end":1153,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":3102},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46457,"byte_end":46465,"line_start":1306,"line_end":1306,"column_start":10,"column_end":18},"name":"ArcArray","qualname":"::ArcArray","value":"ArrayBase<OwnedArcRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array where the data has shared ownership and is copy on write.","sig":null,"attributes":[{"value":"/ An array where the data has shared ownership and is copy on write.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45459,"byte_end":45529,"line_start":1284,"line_end":1284,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45530,"byte_end":45533,"line_start":1285,"line_end":1285,"column_start":1,"column_end":4}},{"value":"/ The `ArcArray<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45534,"byte_end":45615,"line_start":1286,"line_end":1286,"column_start":1,"column_end":82}},{"value":"/ the dimensionality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45616,"byte_end":45639,"line_start":1287,"line_end":1287,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45640,"byte_end":45643,"line_start":1288,"line_end":1288,"column_start":1,"column_end":4}},{"value":"/ It can act as both an owner as the data as well as a shared reference (view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45644,"byte_end":45723,"line_start":1289,"line_end":1289,"column_start":1,"column_end":80}},{"value":"/ like).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45724,"byte_end":45734,"line_start":1290,"line_end":1290,"column_start":1,"column_end":11}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45735,"byte_end":45804,"line_start":1291,"line_end":1291,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](ArrayBase::view_mut) or","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45805,"byte_end":45847,"line_start":1292,"line_end":1292,"column_start":1,"column_end":43}},{"value":"/ [`get_mut()`](ArrayBase::get_mut), will break sharing and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45848,"byte_end":45909,"line_start":1293,"line_end":1293,"column_start":1,"column_end":62}},{"value":"/ require a clone of the data (if it is not uniquely held).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45910,"byte_end":45971,"line_start":1294,"line_end":1294,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45972,"byte_end":45975,"line_start":1295,"line_end":1295,"column_start":1,"column_end":4}},{"value":"/ `ArcArray` uses atomic reference counting like `Arc`, so it is `Send` and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":45976,"byte_end":46053,"line_start":1296,"line_end":1296,"column_start":1,"column_end":78}},{"value":"/ `Sync` (when allowed by the element type of the array too).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46054,"byte_end":46117,"line_start":1297,"line_end":1297,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46118,"byte_end":46121,"line_start":1298,"line_end":1298,"column_start":1,"column_end":4}},{"value":"/ **[`ArrayBase`]** is used to implement both the owned","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46122,"byte_end":46179,"line_start":1299,"line_end":1299,"column_start":1,"column_end":58}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46180,"byte_end":46257,"line_start":1300,"line_end":1300,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46258,"byte_end":46261,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46262,"byte_end":46275,"line_start":1302,"line_end":1302,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46276,"byte_end":46279,"line_start":1303,"line_end":1303,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](ArrayBase#constructor-methods-for-owned-arrays)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46280,"byte_end":46372,"line_start":1304,"line_end":1304,"column_start":1,"column_end":93}},{"value":"/ + [Methods For All Array Types](ArrayBase#methods-for-all-array-types)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46373,"byte_end":46447,"line_start":1305,"line_end":1305,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":3105},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47214,"byte_end":47219,"line_start":1329,"line_end":1329,"column_start":10,"column_end":15},"name":"Array","qualname":"::Array","value":"ArrayBase<OwnedRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array that owns its data uniquely.","sig":null,"attributes":[{"value":"/ An array that owns its data uniquely.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46506,"byte_end":46547,"line_start":1308,"line_end":1308,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46548,"byte_end":46551,"line_start":1309,"line_end":1309,"column_start":1,"column_end":4}},{"value":"/ `Array` is the main n-dimensional array type, and it owns all its array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46552,"byte_end":46627,"line_start":1310,"line_end":1310,"column_start":1,"column_end":76}},{"value":"/ elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46628,"byte_end":46641,"line_start":1311,"line_end":1311,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46642,"byte_end":46645,"line_start":1312,"line_end":1312,"column_start":1,"column_end":4}},{"value":"/ The `Array<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46646,"byte_end":46724,"line_start":1313,"line_end":1313,"column_start":1,"column_end":79}},{"value":"/ the dimensionality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46725,"byte_end":46748,"line_start":1314,"line_end":1314,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46749,"byte_end":46752,"line_start":1315,"line_end":1315,"column_start":1,"column_end":4}},{"value":"/ **[`ArrayBase`]** is used to implement both the owned","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46753,"byte_end":46810,"line_start":1316,"line_end":1316,"column_start":1,"column_end":58}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46811,"byte_end":46888,"line_start":1317,"line_end":1317,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46889,"byte_end":46892,"line_start":1318,"line_end":1318,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46893,"byte_end":46906,"line_start":1319,"line_end":1319,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46907,"byte_end":46910,"line_start":1320,"line_end":1320,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](ArrayBase#constructor-methods-for-owned-arrays)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":46911,"byte_end":47003,"line_start":1321,"line_end":1321,"column_start":1,"column_end":93}},{"value":"/ + [Methods For All Array Types](ArrayBase#methods-for-all-array-types)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47004,"byte_end":47078,"line_start":1322,"line_end":1322,"column_start":1,"column_end":75}},{"value":"/ + Dimensionality-specific type alises","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47079,"byte_end":47120,"line_start":1323,"line_end":1323,"column_start":1,"column_end":42}},{"value":"/ [`Array1`],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47121,"byte_end":47136,"line_start":1324,"line_end":1324,"column_start":1,"column_end":16}},{"value":"/ [`Array2`],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47137,"byte_end":47152,"line_start":1325,"line_end":1325,"column_start":1,"column_end":16}},{"value":"/ [`Array3`], ...,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47153,"byte_end":47173,"line_start":1326,"line_end":1326,"column_start":1,"column_end":21}},{"value":"/ [`ArrayD`],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47174,"byte_end":47189,"line_start":1327,"line_end":1327,"column_start":1,"column_end":16}},{"value":"/ and so on.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47190,"byte_end":47204,"line_start":1328,"line_end":1328,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":3108},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48017,"byte_end":48025,"line_start":1347,"line_end":1347,"column_start":10,"column_end":18},"name":"CowArray","qualname":"::CowArray","value":"ArrayBase<CowRepr, D>","parent":null,"children":[],"decl_id":null,"docs":" An array with copy-on-write behavior.","sig":null,"attributes":[{"value":"/ An array with copy-on-write behavior.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47257,"byte_end":47298,"line_start":1331,"line_end":1331,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47299,"byte_end":47302,"line_start":1332,"line_end":1332,"column_start":1,"column_end":4}},{"value":"/ An `CowArray` represents either a uniquely owned array or a view of an","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47303,"byte_end":47377,"line_start":1333,"line_end":1333,"column_start":1,"column_end":75}},{"value":"/ array. The `'a` corresponds to the lifetime of the view variant.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47378,"byte_end":47446,"line_start":1334,"line_end":1334,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47447,"byte_end":47450,"line_start":1335,"line_end":1335,"column_start":1,"column_end":4}},{"value":"/ This type is analogous to [`std::borrow::Cow`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47451,"byte_end":47502,"line_start":1336,"line_end":1336,"column_start":1,"column_end":52}},{"value":"/ If a `CowArray` instance is the immutable view variant, then calling a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47503,"byte_end":47577,"line_start":1337,"line_end":1337,"column_start":1,"column_end":75}},{"value":"/ method for mutating elements in the array will cause it to be converted","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47578,"byte_end":47653,"line_start":1338,"line_end":1338,"column_start":1,"column_end":76}},{"value":"/ into the owned variant (by cloning all the elements) before the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47654,"byte_end":47721,"line_start":1339,"line_end":1339,"column_start":1,"column_end":68}},{"value":"/ modification is performed.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47722,"byte_end":47752,"line_start":1340,"line_end":1340,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47753,"byte_end":47756,"line_start":1341,"line_end":1341,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`]).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47757,"byte_end":47826,"line_start":1342,"line_end":1342,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47827,"byte_end":47830,"line_start":1343,"line_end":1343,"column_start":1,"column_end":4}},{"value":"/ See also [`ArcArray`], which also provides","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47831,"byte_end":47877,"line_start":1344,"line_end":1344,"column_start":1,"column_end":47}},{"value":"/ copy-on-write behavior but has a reference-counted pointer to the data","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47878,"byte_end":47952,"line_start":1345,"line_end":1345,"column_start":1,"column_end":75}},{"value":"/ instead of either a view or a uniquely owned copy.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":47953,"byte_end":48007,"line_start":1346,"line_end":1346,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":3112},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48483,"byte_end":48492,"line_start":1360,"line_end":1360,"column_start":10,"column_end":19},"name":"ArrayView","qualname":"::ArrayView","value":"ArrayBase<ViewRepr<&'a A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view.","sig":null,"attributes":[{"value":"/ A read-only array view.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48069,"byte_end":48096,"line_start":1349,"line_end":1349,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48097,"byte_end":48100,"line_start":1350,"line_end":1350,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48101,"byte_end":48168,"line_start":1351,"line_end":1351,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48169,"byte_end":48215,"line_start":1352,"line_end":1352,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48216,"byte_end":48219,"line_start":1353,"line_end":1353,"column_start":1,"column_end":4}},{"value":"/ The `ArrayView<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48220,"byte_end":48295,"line_start":1354,"line_end":1354,"column_start":1,"column_end":76}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48296,"byte_end":48364,"line_start":1355,"line_end":1355,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48365,"byte_end":48368,"line_start":1356,"line_end":1356,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`]).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48369,"byte_end":48438,"line_start":1357,"line_end":1357,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48439,"byte_end":48442,"line_start":1358,"line_end":1358,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayViewMut`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48443,"byte_end":48473,"line_start":1359,"line_end":1359,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":3116},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48952,"byte_end":48964,"line_start":1373,"line_end":1373,"column_start":10,"column_end":22},"name":"ArrayViewMut","qualname":"::ArrayViewMut","value":"ArrayBase<ViewRepr<&'a mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-write array view.","sig":null,"attributes":[{"value":"/ A read-write array view.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48537,"byte_end":48565,"line_start":1362,"line_end":1362,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48566,"byte_end":48569,"line_start":1363,"line_end":1363,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48570,"byte_end":48637,"line_start":1364,"line_end":1364,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48638,"byte_end":48684,"line_start":1365,"line_end":1365,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48685,"byte_end":48688,"line_start":1366,"line_end":1366,"column_start":1,"column_end":4}},{"value":"/ The `ArrayViewMut<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48689,"byte_end":48767,"line_start":1367,"line_end":1367,"column_start":1,"column_end":79}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48768,"byte_end":48836,"line_start":1368,"line_end":1368,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48837,"byte_end":48840,"line_start":1369,"line_end":1369,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`]).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48841,"byte_end":48910,"line_start":1370,"line_end":1370,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48911,"byte_end":48914,"line_start":1371,"line_end":1371,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayView`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":48915,"byte_end":48942,"line_start":1372,"line_end":1372,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":3120},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49871,"byte_end":49883,"line_start":1396,"line_end":1396,"column_start":10,"column_end":22},"name":"RawArrayView","qualname":"::RawArrayView","value":"ArrayBase<RawViewRepr<*const A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view without a lifetime.","sig":null,"attributes":[{"value":"/ A read-only array view without a lifetime.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49013,"byte_end":49059,"line_start":1375,"line_end":1375,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49060,"byte_end":49063,"line_start":1376,"line_end":1376,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayView`] but does not carry any lifetime or","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49064,"byte_end":49135,"line_start":1377,"line_end":1377,"column_start":1,"column_end":72}},{"value":"/ ownership information, and its data cannot be read without an unsafe","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49136,"byte_end":49208,"line_start":1378,"line_end":1378,"column_start":1,"column_end":73}},{"value":"/ conversion into an [`ArrayView`]. The relationship between `RawArrayView`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49209,"byte_end":49286,"line_start":1379,"line_end":1379,"column_start":1,"column_end":78}},{"value":"/ and [`ArrayView`] is somewhat analogous to the relationship between `*const","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49287,"byte_end":49366,"line_start":1380,"line_end":1380,"column_start":1,"column_end":80}},{"value":"/ T` and `&T`, but `RawArrayView` has additional requirements that `*const T`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49367,"byte_end":49446,"line_start":1381,"line_end":1381,"column_start":1,"column_end":80}},{"value":"/ does not, such as non-nullness.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49447,"byte_end":49482,"line_start":1382,"line_end":1382,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49483,"byte_end":49486,"line_start":1383,"line_end":1383,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayView<A, D>` is parameterized by `A` for the element type and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49487,"byte_end":49564,"line_start":1384,"line_end":1384,"column_start":1,"column_end":78}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49565,"byte_end":49596,"line_start":1385,"line_end":1385,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49597,"byte_end":49600,"line_start":1386,"line_end":1386,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49601,"byte_end":49658,"line_start":1387,"line_end":1387,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`]).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49659,"byte_end":49678,"line_start":1388,"line_end":1388,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49679,"byte_end":49682,"line_start":1389,"line_end":1389,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayViewMut`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49683,"byte_end":49716,"line_start":1390,"line_end":1390,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49717,"byte_end":49720,"line_start":1391,"line_end":1391,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49721,"byte_end":49734,"line_start":1392,"line_end":1392,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49735,"byte_end":49738,"line_start":1393,"line_end":1393,"column_start":1,"column_end":4}},{"value":"/ You can't use this type with an arbitrary raw pointer; see","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49739,"byte_end":49801,"line_start":1394,"line_end":1394,"column_start":1,"column_end":63}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49802,"byte_end":49861,"line_start":1395,"line_end":1395,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":3123},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50809,"byte_end":50824,"line_start":1419,"line_end":1419,"column_start":10,"column_end":25},"name":"RawArrayViewMut","qualname":"::RawArrayViewMut","value":"ArrayBase<RawViewRepr<*mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable array view without a lifetime.","sig":null,"attributes":[{"value":"/ A mutable array view without a lifetime.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49930,"byte_end":49974,"line_start":1398,"line_end":1398,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49975,"byte_end":49978,"line_start":1399,"line_end":1399,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayViewMut`] but does not carry any lifetime or","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":49979,"byte_end":50053,"line_start":1400,"line_end":1400,"column_start":1,"column_end":75}},{"value":"/ ownership information, and its data cannot be read/written without an","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50054,"byte_end":50127,"line_start":1401,"line_end":1401,"column_start":1,"column_end":74}},{"value":"/ unsafe conversion into an [`ArrayViewMut`]. The relationship between","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50128,"byte_end":50200,"line_start":1402,"line_end":1402,"column_start":1,"column_end":73}},{"value":"/ `RawArrayViewMut` and [`ArrayViewMut`] is somewhat analogous to the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50201,"byte_end":50272,"line_start":1403,"line_end":1403,"column_start":1,"column_end":72}},{"value":"/ relationship between `*mut T` and `&mut T`, but `RawArrayViewMut` has","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50273,"byte_end":50346,"line_start":1404,"line_end":1404,"column_start":1,"column_end":74}},{"value":"/ additional requirements that `*mut T` does not, such as non-nullness.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50347,"byte_end":50420,"line_start":1405,"line_end":1405,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50421,"byte_end":50424,"line_start":1406,"line_end":1406,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayViewMut<A, D>` is parameterized by `A` for the element type","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50425,"byte_end":50501,"line_start":1407,"line_end":1407,"column_start":1,"column_end":77}},{"value":"/ and `D` for the dimensionality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50502,"byte_end":50537,"line_start":1408,"line_end":1408,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50538,"byte_end":50541,"line_start":1409,"line_end":1409,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50542,"byte_end":50599,"line_start":1410,"line_end":1410,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`]).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50600,"byte_end":50619,"line_start":1411,"line_end":1411,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50620,"byte_end":50623,"line_start":1412,"line_end":1412,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayView`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50624,"byte_end":50654,"line_start":1413,"line_end":1413,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50655,"byte_end":50658,"line_start":1414,"line_end":1414,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50659,"byte_end":50672,"line_start":1415,"line_end":1415,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50673,"byte_end":50676,"line_start":1416,"line_end":1416,"column_start":1,"column_end":4}},{"value":"/ You can't use this type with an arbitrary raw pointer; see","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50677,"byte_end":50739,"line_start":1417,"line_end":1417,"column_start":1,"column_end":63}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50740,"byte_end":50799,"line_start":1418,"line_end":1418,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6564},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51058,"byte_end":51070,"line_start":1428,"line_end":1428,"column_start":12,"column_end":24},"name":"OwnedArcRepr","qualname":"::OwnedArcRepr","value":"","parent":null,"children":[],"decl_id":null,"docs":" ArcArray's representation.","sig":null,"attributes":[{"value":"/ ArcArray's representation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50900,"byte_end":50930,"line_start":1423,"line_end":1423,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50931,"byte_end":50934,"line_start":1424,"line_end":1424,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50935,"byte_end":50991,"line_start":1425,"line_end":1425,"column_start":1,"column_end":53}},{"value":"/ [`ArcArray`] for the array type!*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":50992,"byte_end":51029,"line_start":1426,"line_end":1426,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6571},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51479,"byte_end":51490,"line_start":1442,"line_end":1442,"column_start":12,"column_end":23},"name":"RawViewRepr","qualname":"::RawViewRepr","value":"RawViewRepr {  }","parent":null,"children":[{"krate":0,"index":6573}],"decl_id":null,"docs":" Array pointer’s representation.","sig":null,"attributes":[{"value":"/ Array pointer’s representation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51207,"byte_end":51244,"line_start":1436,"line_end":1436,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51245,"byte_end":51248,"line_start":1437,"line_end":1437,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51249,"byte_end":51307,"line_start":1438,"line_end":1438,"column_start":1,"column_end":55}},{"value":"/ [`RawArrayView`] / [`RawArrayViewMut`] for the array type!*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51308,"byte_end":51371,"line_start":1439,"line_end":1439,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6579},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51898,"byte_end":51906,"line_start":1459,"line_end":1459,"column_start":12,"column_end":20},"name":"ViewRepr","qualname":"::ViewRepr","value":"ViewRepr {  }","parent":null,"children":[{"krate":0,"index":6581}],"decl_id":null,"docs":" Array view’s representation.","sig":null,"attributes":[{"value":"/ Array view’s representation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51644,"byte_end":51678,"line_start":1453,"line_end":1453,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51679,"byte_end":51682,"line_start":1454,"line_end":1454,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51683,"byte_end":51741,"line_start":1455,"line_end":1455,"column_start":1,"column_end":55}},{"value":"/ [`ArrayView`] / [`ArrayViewMut`] for the array type!*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51742,"byte_end":51799,"line_start":1456,"line_end":1456,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3139},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52237,"byte_end":52241,"line_start":1476,"line_end":1476,"column_start":5,"column_end":9},"name":"View","qualname":"::CowRepr::View","value":"CowRepr::View(ViewRepr<&'a A>)","parent":{"krate":0,"index":3136},"children":[],"decl_id":null,"docs":" Borrowed data.\n","sig":null,"attributes":[{"value":"/ Borrowed data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52214,"byte_end":52232,"line_start":1475,"line_end":1475,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3142},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52284,"byte_end":52289,"line_start":1478,"line_end":1478,"column_start":5,"column_end":10},"name":"Owned","qualname":"::CowRepr::Owned","value":"CowRepr::Owned(OwnedRepr<A>)","parent":{"krate":0,"index":3136},"children":[],"decl_id":null,"docs":" Owned data.\n","sig":null,"attributes":[{"value":"/ Owned data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52264,"byte_end":52279,"line_start":1477,"line_end":1477,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3136},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52193,"byte_end":52200,"line_start":1474,"line_end":1474,"column_start":10,"column_end":17},"name":"CowRepr","qualname":"::CowRepr","value":"pub enum CowRepr<'a, A> {\n\n    /// Borrowed data.\n    View(ViewRepr<&'a A>),\n\n    /// Owned data.\n    Owned(OwnedRepr<A>),\n}","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3142}],"decl_id":null,"docs":" CowArray's representation.","sig":null,"attributes":[{"value":"/ CowArray's representation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52056,"byte_end":52086,"line_start":1470,"line_end":1470,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52087,"byte_end":52090,"line_start":1471,"line_end":1471,"column_start":1,"column_end":4}},{"value":"/ *Don't use this type directly—use the type alias","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52091,"byte_end":52145,"line_start":1472,"line_end":1472,"column_start":1,"column_end":53}},{"value":"/ [`CowArray`] for the array type!*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52146,"byte_end":52183,"line_start":1473,"line_end":1473,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52407,"byte_end":52414,"line_start":1483,"line_end":1483,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowRepr>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `View` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `View` variant.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52341,"byte_end":52395,"line_start":1482,"line_end":1482,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52619,"byte_end":52627,"line_start":1491,"line_end":1491,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowRepr>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `Owned` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `Owned` variant.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52552,"byte_end":52607,"line_start":1490,"line_end":1490,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464316,"byte_end":464324,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ArrayBase<S, Ix1>>::from_vec","value":"pub fn from_vec(Vec<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array from a vector (no copying needed).","sig":null,"attributes":[{"value":"/ Create a one-dimensional array from a vector (no copying needed).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464033,"byte_end":464102,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464107,"byte_end":464110,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464115,"byte_end":464173,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464178,"byte_end":464181,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464186,"byte_end":464197,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464202,"byte_end":464225,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464230,"byte_end":464233,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let array = Array::from_vec(vec![1., 2., 3., 4.]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464238,"byte_end":464292,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464297,"byte_end":464304,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464913,"byte_end":464922,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"from_iter","qualname":"<ArrayBase<S, Ix1>>::from_iter","value":"pub fn from_iter<I: IntoIterator<Item = A>>(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array from an iterator or iterable.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array from an iterator or iterable.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464604,"byte_end":464668,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464673,"byte_end":464676,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464681,"byte_end":464739,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464744,"byte_end":464747,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464752,"byte_end":464763,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464768,"byte_end":464791,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464796,"byte_end":464799,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let array = Array::from_iter(0..10);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464804,"byte_end":464844,"line_start":75,"line_end":75,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464849,"byte_end":464856,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":464861,"byte_end":464901,"line_start":77,"line_end":77,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465814,"byte_end":465822,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"linspace","qualname":"<ArrayBase<S, Ix1>>::linspace","value":"pub fn linspace(A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` evenly spaced elements from\n `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` evenly spaced elements from","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465039,"byte_end":465110,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465115,"byte_end":465183,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465188,"byte_end":465191,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that if `start > end`, the first element will still be `start`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465196,"byte_end":465268,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ and the following elements will be decreasing. This is different from","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465273,"byte_end":465346,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ the behavior of `std::ops::RangeInclusive`, which interprets `start >","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465351,"byte_end":465424,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ end` to mean that the range is empty.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465429,"byte_end":465470,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465475,"byte_end":465478,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465483,"byte_end":465558,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465563,"byte_end":465585,"line_start":91,"line_end":91,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465590,"byte_end":465593,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465598,"byte_end":465609,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465614,"byte_end":465645,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465650,"byte_end":465653,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let array = Array::linspace(0., 1., 5);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465658,"byte_end":465701,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/ assert!(array == arr1(&[0.0, 0.25, 0.5, 0.75, 1.0]))","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465706,"byte_end":465762,"line_start":97,"line_end":97,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465767,"byte_end":465774,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465779,"byte_end":465802,"line_start":99,"line_end":99,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466407,"byte_end":466412,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"range","qualname":"<ArrayBase<S, Ix1>>::range","value":"pub fn range(A, A, A) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `start` to `end`\n (exclusive), incrementing by `step`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `start` to `end`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":465966,"byte_end":466036,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ (exclusive), incrementing by `step`. `A` must be a floating point type.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466041,"byte_end":466116,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466121,"byte_end":466124,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466129,"byte_end":466187,"line_start":110,"line_end":110,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466192,"byte_end":466195,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466200,"byte_end":466211,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466216,"byte_end":466247,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466252,"byte_end":466255,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let array = Array::range(0., 5., 1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466260,"byte_end":466301,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/ assert!(array == arr1(&[0., 1., 2., 3., 4.]))","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466306,"byte_end":466355,"line_start":116,"line_end":116,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466360,"byte_end":466367,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466372,"byte_end":466395,"line_start":118,"line_end":118,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467422,"byte_end":467430,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"logspace","qualname":"<ArrayBase<S, Ix1>>::logspace","value":"pub fn logspace(A, A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` logarithmically spaced\n elements, with the starting value being `base.powf(start)` and the\n final one being `base.powf(end)`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` logarithmically spaced","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466555,"byte_end":466621,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ elements, with the starting value being `base.powf(start)` and the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466626,"byte_end":466696,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ final one being `base.powf(end)`. `A` must be a floating point type.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466701,"byte_end":466773,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466778,"byte_end":466781,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If `base` is negative, all values will be negative.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466786,"byte_end":466841,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466846,"byte_end":466849,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466854,"byte_end":466929,"line_start":132,"line_end":132,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466934,"byte_end":466956,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466961,"byte_end":466964,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466969,"byte_end":466980,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":466985,"byte_end":467019,"line_start":136,"line_end":136,"column_start":5,"column_end":39}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467024,"byte_end":467059,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467064,"byte_end":467095,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467100,"byte_end":467103,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let array = Array::logspace(10.0, 0.0, 3.0, 4);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467108,"byte_end":467159,"line_start":140,"line_end":140,"column_start":5,"column_end":56}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467164,"byte_end":467224,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467229,"byte_end":467232,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let array = Array::logspace(-10.0, 3.0, 0.0, 4);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467237,"byte_end":467289,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467294,"byte_end":467358,"line_start":144,"line_end":144,"column_start":5,"column_end":69}},{"value":"/ # }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467363,"byte_end":467370,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467375,"byte_end":467382,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467387,"byte_end":467410,"line_start":147,"line_end":147,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468671,"byte_end":468680,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"geomspace","qualname":"<ArrayBase<S, Ix1>>::geomspace","value":"pub fn geomspace(A, A, usize) -> Option<Self> where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` geometrically spaced elements\n from `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` geometrically spaced elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467589,"byte_end":467662,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ from `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467667,"byte_end":467740,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467745,"byte_end":467748,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `start` and `end` have different signs or if either","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467753,"byte_end":467826,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ one is zero. Conceptually, this means that in order to obtain a `Some`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467831,"byte_end":467905,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ result, `end / start` must be positive.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467910,"byte_end":467953,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467958,"byte_end":467961,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":467966,"byte_end":468041,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468046,"byte_end":468068,"line_start":163,"line_end":163,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468073,"byte_end":468076,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468081,"byte_end":468092,"line_start":165,"line_end":165,"column_start":5,"column_end":16}},{"value":"/ # fn example() -> Option<()> {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468097,"byte_end":468131,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468136,"byte_end":468170,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468175,"byte_end":468210,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468215,"byte_end":468246,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468251,"byte_end":468254,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let array = Array::geomspace(1e0, 1e3, 4)?;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468259,"byte_end":468306,"line_start":171,"line_end":171,"column_start":5,"column_end":52}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]), epsilon = 1e-12);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468311,"byte_end":468388,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468393,"byte_end":468396,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let array = Array::geomspace(-1e3, -1e0, 4)?;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468401,"byte_end":468450,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]), epsilon = 1e-12);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468455,"byte_end":468536,"line_start":175,"line_end":175,"column_start":5,"column_end":86}},{"value":"/ # }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468541,"byte_end":468548,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # Some(())","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468553,"byte_end":468567,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468572,"byte_end":468579,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468584,"byte_end":468589,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ # example().unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468594,"byte_end":468619,"line_start":180,"line_end":180,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468624,"byte_end":468631,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468636,"byte_end":468659,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469097,"byte_end":469100,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"eye","qualname":"<ArrayBase<S, Ix2>>::eye","value":"pub fn eye(Ix) -> Self where S: DataMut, A: Clone + Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Create an identity matrix of size `n` (square 2D array).","sig":null,"attributes":[{"value":"/ Create an identity matrix of size `n` (square 2D array).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468963,"byte_end":469023,"line_start":196,"line_end":196,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469028,"byte_end":469031,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n * n` would overflow `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469036,"byte_end":469085,"line_start":198,"line_end":198,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469677,"byte_end":469686,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"from_diag","qualname":"<ArrayBase<S, Ix2>>::from_diag","value":"pub fn from_diag<S2>(&ArrayBase<S2, Ix1>) -> Self where A: Clone + Zero,\nS: DataMut, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Create a 2D matrix from its diagonal","sig":null,"attributes":[{"value":"/ Create a 2D matrix from its diagonal","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469326,"byte_end":469366,"line_start":211,"line_end":211,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469371,"byte_end":469374,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `diag.len() * diag.len()` would overflow `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469379,"byte_end":469446,"line_start":213,"line_end":213,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469451,"byte_end":469454,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469459,"byte_end":469470,"line_start":215,"line_end":215,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array2, arr1, arr2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469475,"byte_end":469513,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469518,"byte_end":469521,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let diag = arr1(&[1, 2]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469526,"byte_end":469555,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/ let array = Array2::from_diag(&diag);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469560,"byte_end":469601,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(array, arr2(&[[1, 0], [0, 2]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469606,"byte_end":469653,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469658,"byte_end":469665,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470335,"byte_end":470349,"line_start":245,"line_end":245,"column_start":12,"column_end":26},"name":"from_diag_elem","qualname":"<ArrayBase<S, Ix2>>::from_diag_elem","value":"pub fn from_diag_elem(usize, A) -> Self where S: DataMut, A: Clone + Zero","parent":null,"children":[],"decl_id":null,"docs":" Create a square 2D matrix of the specified size, with the specified\n element along the diagonal and zeros elsewhere.","sig":null,"attributes":[{"value":"/ Create a square 2D matrix of the specified size, with the specified","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":469946,"byte_end":470017,"line_start":234,"line_end":234,"column_start":5,"column_end":76}},{"value":"/ element along the diagonal and zeros elsewhere.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470022,"byte_end":470073,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470078,"byte_end":470081,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n * n` would overflow `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470086,"byte_end":470135,"line_start":237,"line_end":237,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470140,"byte_end":470143,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470148,"byte_end":470159,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{array, Array2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470164,"byte_end":470197,"line_start":240,"line_end":240,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470202,"byte_end":470205,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let array = Array2::from_diag_elem(2, 5.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470210,"byte_end":470256,"line_start":242,"line_end":242,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(array, array![[5., 0.], [0., 5.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470261,"byte_end":470311,"line_start":243,"line_end":243,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":470316,"byte_end":470323,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472893,"byte_end":472902,"line_start":326,"line_end":326,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<ArrayBase<S, D>>::from_elem","value":"pub fn from_elem<Sh>(Sh, A) -> Self where A: Clone, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with copies of `elem`, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with copies of `elem`, shape `shape`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472271,"byte_end":472328,"line_start":306,"line_end":306,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472333,"byte_end":472336,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472341,"byte_end":472414,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472419,"byte_end":472422,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472427,"byte_end":472434,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array, arr3, ShapeBuilder};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472439,"byte_end":472484,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472489,"byte_end":472492,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 2, 2), 1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472497,"byte_end":472541,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472546,"byte_end":472549,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472554,"byte_end":472566,"line_start":315,"line_end":315,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472571,"byte_end":472601,"line_start":316,"line_end":316,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472606,"byte_end":472637,"line_start":317,"line_end":317,"column_start":5,"column_end":36}},{"value":"/                 [[1., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472642,"byte_end":472672,"line_start":318,"line_end":318,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472677,"byte_end":472709,"line_start":319,"line_end":319,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472714,"byte_end":472720,"line_start":320,"line_end":320,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[4, 2, 1]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472725,"byte_end":472764,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472769,"byte_end":472772,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_elem((2, 2, 2).f(), 1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472777,"byte_end":472825,"line_start":323,"line_end":323,"column_start":5,"column_end":53}},{"value":"/ assert!(b.strides() == &[1, 2, 4]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472830,"byte_end":472869,"line_start":324,"line_end":324,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472874,"byte_end":472881,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473355,"byte_end":473360,"line_start":340,"line_end":340,"column_start":12,"column_end":17},"name":"zeros","qualname":"<ArrayBase<S, D>>::zeros","value":"pub fn zeros<Sh>(Sh) -> Self where A: Clone + Zero, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with zeros, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with zeros, shape `shape`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473211,"byte_end":473257,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473262,"byte_end":473265,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473270,"byte_end":473343,"line_start":339,"line_end":339,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473656,"byte_end":473660,"line_start":351,"line_end":351,"column_start":12,"column_end":16},"name":"ones","qualname":"<ArrayBase<S, D>>::ones","value":"pub fn ones<Sh>(Sh) -> Self where A: Clone + One, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with ones, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with ones, shape `shape`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473513,"byte_end":473558,"line_start":348,"line_end":348,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473563,"byte_end":473566,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473571,"byte_end":473644,"line_start":350,"line_end":350,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473963,"byte_end":473970,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"default","qualname":"<ArrayBase<S, D>>::default","value":"pub fn default<Sh>(Sh) -> Self where A: Default, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with default values, shape `shape`","sig":null,"attributes":[{"value":"/ Create an array with default values, shape `shape`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473811,"byte_end":473865,"line_start":359,"line_end":359,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473870,"byte_end":473873,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":473878,"byte_end":473951,"line_start":361,"line_end":361,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474649,"byte_end":474669,"line_start":380,"line_end":380,"column_start":12,"column_end":32},"name":"from_shape_simple_fn","qualname":"<ArrayBase<S, D>>::from_shape_simple_fn","value":"pub fn from_shape_simple_fn<Sh, F>(Sh, F) -> Self where Sh: ShapeBuilder<Dim =\nD>, F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Create an array with values created by the function `f`.","sig":null,"attributes":[{"value":"/ Create an array with values created by the function `f`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474130,"byte_end":474190,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474195,"byte_end":474198,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ `f` is called with no argument, and it should return the element to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474203,"byte_end":474274,"line_start":372,"line_end":372,"column_start":5,"column_end":76}},{"value":"/ create. If the precise index of the element to create is needed,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474279,"byte_end":474347,"line_start":373,"line_end":373,"column_start":5,"column_end":73}},{"value":"/ use [`from_shape_fn`](ArrayBase::from_shape_fn) instead.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474352,"byte_end":474412,"line_start":374,"line_end":374,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474417,"byte_end":474420,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This constructor can be useful if the element order is not important,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474425,"byte_end":474498,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ for example if they are identical or random.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474503,"byte_end":474551,"line_start":377,"line_end":377,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474556,"byte_end":474559,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":474564,"byte_end":474637,"line_start":379,"line_end":379,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475662,"byte_end":475675,"line_start":411,"line_end":411,"column_start":12,"column_end":25},"name":"from_shape_fn","qualname":"<ArrayBase<S, D>>::from_shape_fn","value":"pub fn from_shape_fn<Sh, F>(Sh, F) -> Self where Sh: ShapeBuilder<Dim = D>,\nF: FnMut(D::Pattern) -> A","parent":null,"children":[],"decl_id":null,"docs":" Create an array with values created by the function `f`.","sig":null,"attributes":[{"value":"/ Create an array with values created by the function `f`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475007,"byte_end":475067,"line_start":391,"line_end":391,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475072,"byte_end":475075,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ `f` is called with the index of the element to create; the elements are","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475080,"byte_end":475155,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475160,"byte_end":475191,"line_start":394,"line_end":394,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475196,"byte_end":475199,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475204,"byte_end":475277,"line_start":396,"line_end":396,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475282,"byte_end":475285,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475290,"byte_end":475297,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array, arr2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475302,"byte_end":475333,"line_start":399,"line_end":399,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475338,"byte_end":475341,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ // Create a table of i × j (with i and j from 1 to 3)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475346,"byte_end":475405,"line_start":401,"line_end":401,"column_start":5,"column_end":62}},{"value":"/ let ij_table = Array::from_shape_fn((3, 3), |(i, j)| (1 + i) * (1 + j));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475410,"byte_end":475486,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475491,"byte_end":475494,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475499,"byte_end":475514,"line_start":404,"line_end":404,"column_start":5,"column_end":20}},{"value":"/     ij_table,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475519,"byte_end":475536,"line_start":405,"line_end":405,"column_start":5,"column_end":22}},{"value":"/     arr2(&[[1, 2, 3],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475541,"byte_end":475566,"line_start":406,"line_end":406,"column_start":5,"column_end":30}},{"value":"/            [2, 4, 6],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475571,"byte_end":475596,"line_start":407,"line_end":407,"column_start":5,"column_end":30}},{"value":"/            [3, 6, 9]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475601,"byte_end":475627,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475632,"byte_end":475638,"line_start":409,"line_end":409,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":475643,"byte_end":475650,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477440,"byte_end":477454,"line_start":461,"line_end":461,"column_start":12,"column_end":26},"name":"from_shape_vec","qualname":"<ArrayBase<S, D>>::from_shape_vec","value":"pub fn from_shape_vec<Sh>(Sh, Vec<A>) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with the given shape from a vector. (No cloning of\n elements needed.)","sig":null,"attributes":[{"value":"/ Create an array with the given shape from a vector. (No cloning of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476272,"byte_end":476342,"line_start":428,"line_end":428,"column_start":5,"column_end":75}},{"value":"/ elements needed.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476347,"byte_end":476368,"line_start":429,"line_end":429,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476373,"byte_end":476376,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476381,"byte_end":476389,"line_start":431,"line_end":431,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476394,"byte_end":476397,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ For a contiguous c- or f-order shape, the following applies:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476402,"byte_end":476466,"line_start":433,"line_end":433,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476471,"byte_end":476474,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ **Errors** if `shape` does not correspond to the number of elements in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476479,"byte_end":476553,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ `v` or if the shape/strides would result in overflowing `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476558,"byte_end":476626,"line_start":436,"line_end":436,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476631,"byte_end":476634,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476639,"byte_end":476647,"line_start":438,"line_end":438,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476652,"byte_end":476655,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ For custom strides, the following applies:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476660,"byte_end":476706,"line_start":440,"line_end":440,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476711,"byte_end":476714,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ **Errors** if strides and dimensions can point out of bounds of `v`, if","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476719,"byte_end":476794,"line_start":442,"line_end":442,"column_start":5,"column_end":80}},{"value":"/ strides allow multiple indices to point to the same element, or if the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476799,"byte_end":476873,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ shape/strides would result in overflowing `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476878,"byte_end":476932,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476937,"byte_end":476940,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476945,"byte_end":476952,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476957,"byte_end":476980,"line_start":447,"line_end":447,"column_start":5,"column_end":28}},{"value":"/ use ndarray::ShapeBuilder; // Needed for .strides() method","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":476985,"byte_end":477047,"line_start":448,"line_end":448,"column_start":5,"column_end":67}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477052,"byte_end":477074,"line_start":449,"line_end":449,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477079,"byte_end":477082,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_shape_vec((2, 2), vec![1., 2., 3., 4.]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477087,"byte_end":477151,"line_start":451,"line_end":451,"column_start":5,"column_end":69}},{"value":"/ assert!(a.is_ok());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477156,"byte_end":477179,"line_start":452,"line_end":452,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477184,"byte_end":477187,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_shape_vec((2, 2).strides((1, 2)),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477192,"byte_end":477249,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/                               vec![1., 2., 3., 4.]).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477254,"byte_end":477319,"line_start":455,"line_end":455,"column_start":5,"column_end":70}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477324,"byte_end":477336,"line_start":456,"line_end":456,"column_start":5,"column_end":17}},{"value":"/     b == arr2(&[[1., 3.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477341,"byte_end":477370,"line_start":457,"line_end":457,"column_start":5,"column_end":34}},{"value":"/                 [2., 4.]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477375,"byte_end":477405,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477410,"byte_end":477416,"line_start":459,"line_end":459,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":477421,"byte_end":477428,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":479239,"byte_end":479263,"line_start":504,"line_end":504,"column_start":19,"column_end":43},"name":"from_shape_vec_unchecked","qualname":"<ArrayBase<S, D>>::from_shape_vec_unchecked","value":"pub unsafe fn from_shape_vec_unchecked<Sh>(Sh, Vec<A>) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an array from a vector and interpret it according to the\n provided shape and strides. (No cloning of elements needed.)","sig":null,"attributes":[{"value":"/ Creates an array from a vector and interpret it according to the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478205,"byte_end":478273,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/ provided shape and strides. (No cloning of elements needed.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478278,"byte_end":478342,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478347,"byte_end":478350,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478355,"byte_end":478367,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478372,"byte_end":478375,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the following conditions are met:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478380,"byte_end":478445,"line_start":485,"line_end":485,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478450,"byte_end":478453,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ 1. The ndim of `dim` and `strides` must be the same.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478458,"byte_end":478514,"line_start":487,"line_end":487,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478519,"byte_end":478522,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ 2. The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478527,"byte_end":478600,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478605,"byte_end":478608,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ 3. For axes with length > 1, the pointer cannot move outside the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478613,"byte_end":478681,"line_start":491,"line_end":491,"column_start":5,"column_end":73}},{"value":"/    slice.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478686,"byte_end":478699,"line_start":492,"line_end":492,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478704,"byte_end":478707,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ 4. If the array will be empty (any axes are zero-length), the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478712,"byte_end":478777,"line_start":494,"line_end":494,"column_start":5,"column_end":70}},{"value":"/    difference between the least address and greatest address accessible","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478782,"byte_end":478857,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/    by moving along all axes must be ≤ `v.len()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478862,"byte_end":478916,"line_start":496,"line_end":496,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478921,"byte_end":478924,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/    If the array will not be empty, the difference between the least","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":478929,"byte_end":479000,"line_start":498,"line_end":498,"column_start":5,"column_end":76}},{"value":"/    address and greatest address accessible by moving along all axes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":479005,"byte_end":479076,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/    must be < `v.len()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":479081,"byte_end":479108,"line_start":500,"line_end":500,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":479113,"byte_end":479116,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ 5. The strides must not allow any element to be referenced by two different","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":479121,"byte_end":479200,"line_start":502,"line_end":502,"column_start":5,"column_end":84}},{"value":"/    indices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":479205,"byte_end":479220,"line_start":503,"line_end":503,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482349,"byte_end":482355,"line_start":588,"line_end":588,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ArrayBase<S, D>>::uninit","value":"pub fn uninit<Sh>(Sh) -> ArrayBase<S::MaybeUninit, D> where\nSh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":480670,"byte_end":480732,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":480737,"byte_end":480740,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ The uninitialized elements of type `A` are represented by the type `MaybeUninit<A>`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":480745,"byte_end":480833,"line_start":545,"line_end":545,"column_start":5,"column_end":93}},{"value":"/ an easier way to handle uninit values correctly.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":480838,"byte_end":480890,"line_start":546,"line_end":546,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":480895,"byte_end":480898,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Only *when* the array is completely initialized with valid elements, can it be","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":480903,"byte_end":480985,"line_start":548,"line_end":548,"column_start":5,"column_end":87}},{"value":"/ converted to an array of `A` elements using [`.assume_init()`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":480990,"byte_end":481057,"line_start":549,"line_end":549,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481062,"byte_end":481065,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481070,"byte_end":481143,"line_start":551,"line_end":551,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481148,"byte_end":481151,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481156,"byte_end":481170,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481175,"byte_end":481178,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ The whole of the array must be initialized before it is converted","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481183,"byte_end":481252,"line_start":555,"line_end":555,"column_start":5,"column_end":74}},{"value":"/ using [`.assume_init()`] or otherwise traversed/read with the element type `A`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481257,"byte_end":481340,"line_start":556,"line_end":556,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481345,"byte_end":481348,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481353,"byte_end":481369,"line_start":558,"line_end":558,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481374,"byte_end":481377,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ It is possible to assign individual values through `*elt = MaybeUninit::new(value)`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481382,"byte_end":481469,"line_start":560,"line_end":560,"column_start":5,"column_end":92}},{"value":"/ and so on.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481474,"byte_end":481488,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481493,"byte_end":481496,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ [`.assume_init()`]: ArrayBase::assume_init","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481501,"byte_end":481547,"line_start":563,"line_end":563,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481552,"byte_end":481555,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481560,"byte_end":481567,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{s, Array2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481572,"byte_end":481601,"line_start":566,"line_end":566,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481606,"byte_end":481609,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ // Example Task: Let's create a column shifted copy of the input","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481614,"byte_end":481682,"line_start":568,"line_end":568,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481687,"byte_end":481690,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ fn shift_by_two(a: &Array2<f32>) -> Array2<f32> {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481695,"byte_end":481748,"line_start":570,"line_end":570,"column_start":5,"column_end":58}},{"value":"/     // create an uninitialized array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481753,"byte_end":481793,"line_start":571,"line_end":571,"column_start":5,"column_end":45}},{"value":"/     let mut b = Array2::uninit(a.dim());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481798,"byte_end":481842,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481847,"byte_end":481850,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/     // two first columns in b are two last in a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481855,"byte_end":481906,"line_start":574,"line_end":574,"column_start":5,"column_end":56}},{"value":"/     // rest of columns in b are the initial columns in a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481911,"byte_end":481971,"line_start":575,"line_end":575,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481976,"byte_end":481979,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     a.slice(s![.., -2..]).assign_to(b.slice_mut(s![.., ..2]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":481984,"byte_end":482050,"line_start":577,"line_end":577,"column_start":5,"column_end":71}},{"value":"/     a.slice(s![.., 2..]).assign_to(b.slice_mut(s![.., ..-2]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482055,"byte_end":482121,"line_start":578,"line_end":578,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482126,"byte_end":482129,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/     // Now we can promise that `b` is safe to use with all operations","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482134,"byte_end":482207,"line_start":580,"line_end":580,"column_start":5,"column_end":78}},{"value":"/     unsafe {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482212,"byte_end":482228,"line_start":581,"line_end":581,"column_start":5,"column_end":21}},{"value":"/         b.assume_init()","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482233,"byte_end":482260,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482265,"byte_end":482274,"line_start":583,"line_end":583,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482279,"byte_end":482284,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482289,"byte_end":482293,"line_start":585,"line_end":585,"column_start":5,"column_end":9}},{"value":"/ # let _ = shift_by_two;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482298,"byte_end":482325,"line_start":586,"line_end":586,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482330,"byte_end":482337,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483812,"byte_end":483824,"line_start":622,"line_end":622,"column_start":12,"column_end":24},"name":"build_uninit","qualname":"<ArrayBase<S, D>>::build_uninit","value":"pub fn build_uninit<Sh, F>(Sh, F) -> ArrayBase<S::MaybeUninit, D> where\nSh: ShapeBuilder<Dim = D>, F: FnOnce(ArrayViewMut<, MaybeUninit<A>, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482739,"byte_end":482801,"line_start":601,"line_end":601,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482806,"byte_end":482809,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ The uninitialized elements of type `A` are represented by the type `MaybeUninit<A>`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482814,"byte_end":482902,"line_start":603,"line_end":603,"column_start":5,"column_end":93}},{"value":"/ an easier way to handle uninit values correctly.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482907,"byte_end":482959,"line_start":604,"line_end":604,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482964,"byte_end":482967,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The `builder` closure gets unshared access to the array through a view and can use it to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":482972,"byte_end":483064,"line_start":606,"line_end":606,"column_start":5,"column_end":97}},{"value":"/ modify the array before it is returned. This allows initializing the array for any owned","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483069,"byte_end":483161,"line_start":607,"line_end":607,"column_start":5,"column_end":97}},{"value":"/ array type (avoiding clone requirements for copy-on-write, because the array is unshared","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483166,"byte_end":483258,"line_start":608,"line_end":608,"column_start":5,"column_end":97}},{"value":"/ when initially created).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483263,"byte_end":483291,"line_start":609,"line_end":609,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483296,"byte_end":483299,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Only *when* the array is completely initialized with valid elements, can it be","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483304,"byte_end":483386,"line_start":611,"line_end":611,"column_start":5,"column_end":87}},{"value":"/ converted to an array of `A` elements using [`.assume_init()`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483391,"byte_end":483458,"line_start":612,"line_end":612,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483463,"byte_end":483466,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483471,"byte_end":483544,"line_start":614,"line_end":614,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483549,"byte_end":483552,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483557,"byte_end":483571,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483576,"byte_end":483579,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The whole of the array must be initialized before it is converted","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483584,"byte_end":483653,"line_start":618,"line_end":618,"column_start":5,"column_end":74}},{"value":"/ using [`.assume_init()`] or otherwise traversed/read with the element type `A`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483658,"byte_end":483741,"line_start":619,"line_end":619,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483746,"byte_end":483749,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ [`.assume_init()`]: ArrayBase::assume_init","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":483754,"byte_end":483800,"line_start":621,"line_end":621,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485509,"byte_end":485522,"line_start":660,"line_end":660,"column_start":19,"column_end":32},"name":"uninitialized","qualname":"<ArrayBase<S, D>>::uninitialized","value":"pub unsafe fn uninitialized<Sh>(Sh) -> Self where A: Copy,\nSh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"deprecated(note =\n             \"This method is hard to use correctly. Use `uninit` instead.\",\n             since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484214,"byte_end":484332,"line_start":635,"line_end":636,"column_start":5,"column_end":36}},{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484337,"byte_end":484399,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484404,"byte_end":484407,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ Prefer to use [`uninit()`](ArrayBase::uninit) if possible, because it is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484412,"byte_end":484488,"line_start":639,"line_end":639,"column_start":5,"column_end":81}},{"value":"/ easier to use correctly.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484493,"byte_end":484521,"line_start":640,"line_end":640,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484526,"byte_end":484529,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484534,"byte_end":484607,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484612,"byte_end":484615,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484620,"byte_end":484634,"line_start":644,"line_end":644,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484639,"byte_end":484642,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ Accessing uninitalized values is undefined behaviour. You must overwrite *all* the elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484647,"byte_end":484742,"line_start":646,"line_end":646,"column_start":5,"column_end":100}},{"value":"/ in the array after it is created; for example using","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484747,"byte_end":484802,"line_start":647,"line_end":647,"column_start":5,"column_end":60}},{"value":"/ [`raw_view_mut`](ArrayBase::raw_view_mut) or other low-level element access.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484807,"byte_end":484887,"line_start":648,"line_end":648,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484892,"byte_end":484895,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ The contents of the array is indeterminate before initialization and it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484900,"byte_end":484975,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ is an error to perform operations that use the previous values. For","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":484980,"byte_end":485051,"line_start":651,"line_end":651,"column_start":5,"column_end":76}},{"value":"/ example it would not be legal to use `a += 1.;` on such an array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485056,"byte_end":485125,"line_start":652,"line_end":652,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485130,"byte_end":485133,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ This constructor is limited to elements where `A: Copy` (no destructors)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485138,"byte_end":485214,"line_start":654,"line_end":654,"column_start":5,"column_end":81}},{"value":"/ to avoid users shooting themselves too hard in the foot.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485219,"byte_end":485279,"line_start":655,"line_end":655,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485284,"byte_end":485287,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ (Also note that the constructors `from_shape_vec` and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485292,"byte_end":485349,"line_start":657,"line_end":657,"column_start":5,"column_end":62}},{"value":"/ `from_shape_vec_unchecked` allow the user yet more control, in the sense","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485354,"byte_end":485430,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ that Arrays can be created from arbitrary vectors.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485435,"byte_end":485490,"line_start":659,"line_end":659,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":486144,"byte_end":486156,"line_start":683,"line_end":683,"column_start":12,"column_end":24},"name":"maybe_uninit","qualname":"<ArrayBase<S, D>>::maybe_uninit","value":"pub fn maybe_uninit<Sh>(Sh) -> Self where Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485947,"byte_end":486009,"line_start":679,"line_end":679,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":486014,"byte_end":486017,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ This method has been renamed to `uninit`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":486022,"byte_end":486066,"line_start":681,"line_end":681,"column_start":5,"column_end":49}},{"value":"deprecated(note = \"Renamed to `uninit`\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":486071,"byte_end":486132,"line_start":682,"line_end":682,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488168,"byte_end":488171,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"len","qualname":"<ArrayBase<S, D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of elements in the array.\n","sig":null,"attributes":[{"value":"/ Return the total number of elements in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488103,"byte_end":488156,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488464,"byte_end":488470,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"len_of","qualname":"<ArrayBase<S, D>>::len_of","value":"pub fn len_of(&Self, Axis) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of `axis`.","sig":null,"attributes":[{"value":"/ Return the length of `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488225,"byte_end":488257,"line_start":54,"line_end":54,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488262,"byte_end":488265,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488270,"byte_end":488343,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488348,"byte_end":488393,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488398,"byte_end":488401,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488406,"byte_end":488452,"line_start":59,"line_end":59,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488600,"byte_end":488608,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArrayBase<S, D>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether the array has any elements\n","sig":null,"attributes":[{"value":"/ Return whether the array has any elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488543,"byte_end":488588,"line_start":64,"line_end":64,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488728,"byte_end":488732,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"ndim","qualname":"<ArrayBase<S, D>>::ndim","value":"pub fn ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of dimensions (axes) in the array\n","sig":null,"attributes":[{"value":"/ Return the number of dimensions (axes) in the array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488661,"byte_end":488716,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488958,"byte_end":488961,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"dim","qualname":"<ArrayBase<S, D>>::dim","value":"pub fn dim(&Self) -> D::Pattern","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array in its “pattern” form,\n an integer in the one-dimensional case, tuple in the n-dimensional cases\n and so on.\n","sig":null,"attributes":[{"value":"/ Return the shape of the array in its “pattern” form,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488786,"byte_end":488846,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/ an integer in the one-dimensional case, tuple in the n-dimensional cases","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488851,"byte_end":488927,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ and so on.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488932,"byte_end":488946,"line_start":76,"line_end":76,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489545,"byte_end":489552,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"raw_dim","qualname":"<ArrayBase<S, D>>::raw_dim","value":"pub fn raw_dim(&Self) -> D","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as it's stored in the array.","sig":null,"attributes":[{"value":"/ Return the shape of the array as it's stored in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489036,"byte_end":489098,"line_start":81,"line_end":81,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489103,"byte_end":489106,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is primarily useful for passing to other `ArrayBase`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489111,"byte_end":489172,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ functions, such as when creating another array of the same","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489177,"byte_end":489239,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/ shape and dimensionality.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489244,"byte_end":489273,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489278,"byte_end":489281,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489286,"byte_end":489293,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489298,"byte_end":489321,"line_start":88,"line_end":88,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489326,"byte_end":489329,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 3), 5.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489334,"byte_end":489375,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489380,"byte_end":489383,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Create an array of zeros that's the same shape and dimensionality as `a`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489388,"byte_end":489468,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"/ let b = Array::<f64, _>::zeros(a.raw_dim());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489473,"byte_end":489521,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489526,"byte_end":489533,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490612,"byte_end":490617,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"shape","qualname":"<ArrayBase<S, D>>::shape","value":"pub fn shape(&Self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as a slice.","sig":null,"attributes":[{"value":"/ Return the shape of the array as a slice.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489603,"byte_end":489648,"line_start":99,"line_end":99,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489653,"byte_end":489656,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Note that you probably don't want to use this to create an array of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489661,"byte_end":489736,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ same shape as another array because creating an array with e.g.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489741,"byte_end":489808,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/ [`Array::zeros()`](ArrayBase::zeros) using a shape of type `&[usize]`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489813,"byte_end":489886,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ results in a dynamic-dimensional array. If you want to create an array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489891,"byte_end":489965,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ that has the same shape and dimensionality as another array, use","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":489970,"byte_end":490038,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ [`.raw_dim()`](ArrayBase::raw_dim) instead:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490043,"byte_end":490090,"line_start":106,"line_end":106,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490095,"byte_end":490098,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490103,"byte_end":490114,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, Array2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490119,"byte_end":490152,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490157,"byte_end":490160,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let a = Array2::<i32>::zeros((3, 4));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490165,"byte_end":490206,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/ let shape = a.shape();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490211,"byte_end":490237,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(shape, &[3, 4]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490242,"byte_end":490273,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490278,"byte_end":490281,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ // Since `a.shape()` returned `&[usize]`, we get an `ArrayD` instance:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490286,"byte_end":490360,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ let b = Array::zeros(shape);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490365,"byte_end":490397,"line_start":116,"line_end":116,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(a.clone().into_dyn(), b);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490402,"byte_end":490442,"line_start":117,"line_end":117,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490447,"byte_end":490450,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ // To get the same dimension type, use `.raw_dim()` instead:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490455,"byte_end":490519,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ let c = Array::zeros(a.raw_dim());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490524,"byte_end":490562,"line_start":120,"line_end":120,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a, c);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490567,"byte_end":490588,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490593,"byte_end":490600,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490734,"byte_end":490741,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"strides","qualname":"<ArrayBase<S, D>>::strides","value":"pub fn strides(&Self) -> &[isize]","parent":null,"children":[],"decl_id":null,"docs":" Return the strides of the array as a slice.\n","sig":null,"attributes":[{"value":"/ Return the strides of the array as a slice.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490675,"byte_end":490722,"line_start":127,"line_end":127,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491175,"byte_end":491184,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"stride_of","qualname":"<ArrayBase<S, D>>::stride_of","value":"pub fn stride_of(&Self, Axis) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Return the stride of `axis`.","sig":null,"attributes":[{"value":"/ Return the stride of `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490936,"byte_end":490968,"line_start":134,"line_end":134,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490973,"byte_end":490976,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":490981,"byte_end":491054,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491059,"byte_end":491104,"line_start":137,"line_end":137,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491109,"byte_end":491112,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491117,"byte_end":491163,"line_start":139,"line_end":139,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491368,"byte_end":491372,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"view","qualname":"<ArrayBase<S, D>>::view","value":"pub fn view(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a read-only view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-only view of the array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491316,"byte_end":491356,"line_start":145,"line_end":145,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491635,"byte_end":491643,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"view_mut","qualname":"<ArrayBase<S, D>>::view_mut","value":"pub fn view_mut(&mut Self) -> ArrayViewMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-write view of the array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491582,"byte_end":491623,"line_start":154,"line_end":154,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492275,"byte_end":492284,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"cell_view","qualname":"<ArrayBase<S, D>>::cell_view","value":"pub fn cell_view(&mut Self) -> ArrayView<, MathCell<A>, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a shared view of the array with elements as if they were embedded in cells.","sig":null,"attributes":[{"value":"/ Return a shared view of the array with elements as if they were embedded in cells.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491845,"byte_end":491931,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491936,"byte_end":491939,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The cell view requires a mutable borrow of the array. Once borrowed the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":491944,"byte_end":492019,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ cell view itself can be copied and accessed without exclusivity.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492024,"byte_end":492092,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492097,"byte_end":492100,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The view acts \"as if\" the elements are temporarily in cells, and elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492105,"byte_end":492182,"line_start":168,"line_end":168,"column_start":5,"column_end":82}},{"value":"/ can be changed through shared references using the regular cell methods.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492187,"byte_end":492263,"line_start":169,"line_end":169,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493684,"byte_end":493692,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<ArrayBase<S, D>>::to_owned","value":"pub fn to_owned(&Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an uniquely owned copy of the array.","sig":null,"attributes":[{"value":"/ Return an uniquely owned copy of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492417,"byte_end":492464,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492469,"byte_end":492472,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If the input array is contiguous, then the output array will have the same","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492477,"byte_end":492555,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ memory layout. Otherwise, the layout of the output array is unspecified.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492560,"byte_end":492636,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ If you need a particular layout, you can allocate a new array with the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492641,"byte_end":492715,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ desired memory layout and [`.assign()`](Self::assign) the data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492720,"byte_end":492787,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/ Alternatively, you can collectan iterator, like this for a result in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492792,"byte_end":492864,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ standard layout:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492869,"byte_end":492889,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492894,"byte_end":492897,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492902,"byte_end":492909,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492914,"byte_end":492944,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2).f(), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":492949,"byte_end":493026,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ # let owned = {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493031,"byte_end":493050,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim(), arr.iter().cloned().collect()).unwrap()","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493055,"byte_end":493135,"line_start":190,"line_end":190,"column_start":5,"column_end":85}},{"value":"/ # };","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493140,"byte_end":493148,"line_start":191,"line_end":191,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.is_standard_layout());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493153,"byte_end":493195,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493200,"byte_end":493229,"line_start":193,"line_end":193,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493234,"byte_end":493241,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493246,"byte_end":493249,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ or this for a result in column-major (Fortran) layout:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493254,"byte_end":493312,"line_start":196,"line_end":196,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493317,"byte_end":493320,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493325,"byte_end":493332,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493337,"byte_end":493367,"line_start":199,"line_end":199,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493372,"byte_end":493445,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ # let owned = {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493450,"byte_end":493469,"line_start":201,"line_end":201,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim().f(), arr.t().iter().cloned().collect()).unwrap()","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493474,"byte_end":493562,"line_start":202,"line_end":202,"column_start":5,"column_end":93}},{"value":"/ # };","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493567,"byte_end":493575,"line_start":203,"line_end":203,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.t().is_standard_layout());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493580,"byte_end":493626,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493631,"byte_end":493660,"line_start":205,"line_end":205,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":493665,"byte_end":493672,"line_start":206,"line_end":206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494210,"byte_end":494219,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"to_shared","qualname":"<ArrayBase<S, D>>::to_shared","value":"pub fn to_shared(&Self) -> ArcArray<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a shared ownership (copy on write) array, cloning the array\n elements if necessary.\n","sig":null,"attributes":[{"value":"/ Return a shared ownership (copy on write) array, cloning the array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494097,"byte_end":494167,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ elements if necessary.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494172,"byte_end":494198,"line_start":225,"line_end":225,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494442,"byte_end":494452,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<ArrayBase<S, D>>::into_owned","value":"pub fn into_owned(Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a uniquely owned array, cloning the array elements\n if necessary.\n","sig":null,"attributes":[{"value":"/ Turn the array into a uniquely owned array, cloning the array elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494334,"byte_end":494408,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ if necessary.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494413,"byte_end":494430,"line_start":235,"line_end":235,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495564,"byte_end":495585,"line_start":265,"line_end":265,"column_start":12,"column_end":33},"name":"try_into_owned_nocopy","qualname":"<ArrayBase<S, D>>::try_into_owned_nocopy","value":"pub fn try_into_owned_nocopy(Self) -> Result<Array<A, D>, Self> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Converts the array into `Array<A, D>` if this is possible without\n cloning the array elements. Otherwise, returns `self` unchanged.","sig":null,"attributes":[{"value":"/ Converts the array into `Array<A, D>` if this is possible without","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494564,"byte_end":494633,"line_start":244,"line_end":244,"column_start":5,"column_end":74}},{"value":"/ cloning the array elements. Otherwise, returns `self` unchanged.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494638,"byte_end":494706,"line_start":245,"line_end":245,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494711,"byte_end":494714,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494719,"byte_end":494726,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{array, rcarr2, ArcArray2, Array2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494731,"byte_end":494783,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494788,"byte_end":494791,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Reference-counted, clone-on-write `ArcArray`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494796,"byte_end":494848,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/ let a: ArcArray2<_> = rcarr2(&[[1., 2.], [3., 4.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494853,"byte_end":494909,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/ {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494914,"byte_end":494919,"line_start":252,"line_end":252,"column_start":5,"column_end":10}},{"value":"/     // Another reference to the same data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494924,"byte_end":494970,"line_start":253,"line_end":253,"column_start":5,"column_end":51}},{"value":"/     let b: ArcArray2<_> = a.clone();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":494975,"byte_end":495015,"line_start":254,"line_end":254,"column_start":5,"column_end":45}},{"value":"/     // Since there are two references to the same data, `.into_owned()`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495020,"byte_end":495095,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/     // would require cloning the data, so `.try_into_owned_nocopy()`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495100,"byte_end":495172,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/     // returns `Err`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495177,"byte_end":495202,"line_start":257,"line_end":257,"column_start":5,"column_end":30}},{"value":"/     assert!(b.try_into_owned_nocopy().is_err());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495207,"byte_end":495259,"line_start":258,"line_end":258,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495264,"byte_end":495269,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/ // Here, since the second reference has been dropped, the `ArcArray`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495274,"byte_end":495346,"line_start":260,"line_end":260,"column_start":5,"column_end":77}},{"value":"/ // can be converted into an `Array` without cloning the data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495351,"byte_end":495416,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ let unique: Array2<_> = a.try_into_owned_nocopy().unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495421,"byte_end":495484,"line_start":262,"line_end":262,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(unique, array![[1., 2.], [3., 4.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495489,"byte_end":495540,"line_start":263,"line_end":263,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495545,"byte_end":495552,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495810,"byte_end":495821,"line_start":274,"line_end":274,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<ArrayBase<S, D>>::into_shared","value":"pub fn into_shared(Self) -> ArcArray<A, D> where S: DataOwned","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a shared ownership (copy on write) array,\n without any copying.\n","sig":null,"attributes":[{"value":"/ Turn the array into a shared ownership (copy on write) array,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495704,"byte_end":495769,"line_start":272,"line_end":272,"column_start":5,"column_end":70}},{"value":"/ without any copying.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":495774,"byte_end":495798,"line_start":273,"line_end":273,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496557,"byte_end":496562,"line_start":300,"line_end":300,"column_start":12,"column_end":17},"name":"first","qualname":"<ArrayBase<S, D>>::first","value":"pub fn first(&Self) -> Option<&A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first element of the array, or `None` if it\n is empty.","sig":null,"attributes":[{"value":"/ Returns a reference to the first element of the array, or `None` if it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496136,"byte_end":496210,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ is empty.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496215,"byte_end":496228,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496233,"byte_end":496236,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496241,"byte_end":496254,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496259,"byte_end":496262,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496267,"byte_end":496278,"line_start":290,"line_end":290,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496283,"byte_end":496307,"line_start":291,"line_end":291,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496312,"byte_end":496315,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros([3, 4, 2]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496320,"byte_end":496368,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/ a[[0, 0, 0]] = 42.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496373,"byte_end":496396,"line_start":294,"line_end":294,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(a.first(), Some(&42.));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496401,"byte_end":496439,"line_start":295,"line_end":295,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496444,"byte_end":496447,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let b = Array3::<f64>::zeros([3, 0, 5]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496452,"byte_end":496496,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(b.first(), None);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496501,"byte_end":496533,"line_start":298,"line_end":298,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496538,"byte_end":496545,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497190,"byte_end":497199,"line_start":326,"line_end":326,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<ArrayBase<S, D>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first element of the array, or\n `None` if it is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first element of the array, or","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496746,"byte_end":496815,"line_start":311,"line_end":311,"column_start":5,"column_end":74}},{"value":"/ `None` if it is empty.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496820,"byte_end":496846,"line_start":312,"line_end":312,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496851,"byte_end":496854,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496859,"byte_end":496872,"line_start":314,"line_end":314,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496877,"byte_end":496880,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496885,"byte_end":496896,"line_start":316,"line_end":316,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496901,"byte_end":496925,"line_start":317,"line_end":317,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496930,"byte_end":496933,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros([3, 4, 2]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496938,"byte_end":496986,"line_start":319,"line_end":319,"column_start":5,"column_end":53}},{"value":"/ *a.first_mut().unwrap() = 42.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":496991,"byte_end":497025,"line_start":320,"line_end":320,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a[[0, 0, 0]], 42.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497030,"byte_end":497064,"line_start":321,"line_end":321,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497069,"byte_end":497072,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let mut b = Array3::<f64>::zeros([3, 0, 5]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497077,"byte_end":497125,"line_start":323,"line_end":323,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(b.first_mut(), None);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497130,"byte_end":497166,"line_start":324,"line_end":324,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497171,"byte_end":497178,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497820,"byte_end":497824,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"last","qualname":"<ArrayBase<S, D>>::last","value":"pub fn last(&Self) -> Option<&A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the last element of the array, or `None` if it\n is empty.","sig":null,"attributes":[{"value":"/ Returns a reference to the last element of the array, or `None` if it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497402,"byte_end":497475,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ is empty.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497480,"byte_end":497493,"line_start":338,"line_end":338,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497498,"byte_end":497501,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497506,"byte_end":497519,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497524,"byte_end":497527,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497532,"byte_end":497543,"line_start":342,"line_end":342,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497548,"byte_end":497572,"line_start":343,"line_end":343,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497577,"byte_end":497580,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros([3, 4, 2]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497585,"byte_end":497633,"line_start":345,"line_end":345,"column_start":5,"column_end":53}},{"value":"/ a[[2, 3, 1]] = 42.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497638,"byte_end":497661,"line_start":346,"line_end":346,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(a.last(), Some(&42.));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497666,"byte_end":497703,"line_start":347,"line_end":347,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497708,"byte_end":497711,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let b = Array3::<f64>::zeros([3, 0, 5]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497716,"byte_end":497760,"line_start":349,"line_end":349,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(b.last(), None);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497765,"byte_end":497796,"line_start":350,"line_end":350,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":497801,"byte_end":497808,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498580,"byte_end":498588,"line_start":382,"line_end":382,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<ArrayBase<S, D>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<&mut A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the last element of the array, or `None`\n if it is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the last element of the array, or `None`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498139,"byte_end":498214,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/ if it is empty.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498219,"byte_end":498238,"line_start":368,"line_end":368,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498243,"byte_end":498246,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498251,"byte_end":498264,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498269,"byte_end":498272,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498277,"byte_end":498288,"line_start":372,"line_end":372,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498293,"byte_end":498317,"line_start":373,"line_end":373,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498322,"byte_end":498325,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros([3, 4, 2]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498330,"byte_end":498378,"line_start":375,"line_end":375,"column_start":5,"column_end":53}},{"value":"/ *a.last_mut().unwrap() = 42.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498383,"byte_end":498416,"line_start":376,"line_end":376,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a[[2, 3, 1]], 42.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498421,"byte_end":498455,"line_start":377,"line_end":377,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498460,"byte_end":498463,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ let mut b = Array3::<f64>::zeros([3, 0, 5]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498468,"byte_end":498516,"line_start":379,"line_end":379,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(b.last_mut(), None);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498521,"byte_end":498556,"line_start":380,"line_end":380,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498561,"byte_end":498568,"line_start":381,"line_end":381,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499184,"byte_end":499188,"line_start":403,"line_end":403,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArrayBase<S, D>>::iter","value":"pub fn iter(&Self) -> Iter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of references to the elements of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498918,"byte_end":498984,"line_start":397,"line_end":397,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498989,"byte_end":498992,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":498997,"byte_end":499064,"line_start":399,"line_end":399,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499069,"byte_end":499125,"line_start":400,"line_end":400,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499130,"byte_end":499133,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&A`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499138,"byte_end":499172,"line_start":402,"line_end":402,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499620,"byte_end":499628,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArrayBase<S, D>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of mutable references to the elements of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499342,"byte_end":499416,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499421,"byte_end":499424,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499429,"byte_end":499496,"line_start":413,"line_end":413,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499501,"byte_end":499557,"line_start":414,"line_end":414,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499562,"byte_end":499565,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&mut A`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499570,"byte_end":499608,"line_start":416,"line_end":416,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500079,"byte_end":500091,"line_start":432,"line_end":432,"column_start":12,"column_end":24},"name":"indexed_iter","qualname":"<ArrayBase<S, D>>::indexed_iter","value":"pub fn indexed_iter(&Self) -> IndexedIter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and references to the elements of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499745,"byte_end":499823,"line_start":424,"line_end":424,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499828,"byte_end":499831,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499836,"byte_end":499903,"line_start":426,"line_end":426,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499908,"byte_end":499964,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499969,"byte_end":499972,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &A)`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":499977,"byte_end":500025,"line_start":429,"line_end":429,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500030,"byte_end":500033,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ See also [`Zip::indexed`]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500038,"byte_end":500067,"line_start":431,"line_end":431,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500531,"byte_end":500547,"line_start":445,"line_end":445,"column_start":12,"column_end":28},"name":"indexed_iter_mut","qualname":"<ArrayBase<S, D>>::indexed_iter_mut","value":"pub fn indexed_iter_mut(&mut Self) -> IndexedIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and mutable references to the elements of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500227,"byte_end":500313,"line_start":439,"line_end":439,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500318,"byte_end":500321,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500326,"byte_end":500393,"line_start":441,"line_end":441,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500398,"byte_end":500454,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500459,"byte_end":500462,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &mut A)`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500467,"byte_end":500519,"line_start":444,"line_end":444,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501065,"byte_end":501070,"line_start":459,"line_end":459,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBase<S, D>>::slice","value":"pub fn slice<I>(&Self, I) -> ArrayView<, A, I::OutDim> where I: SliceArg<D>,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced view of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500700,"byte_end":500738,"line_start":452,"line_end":452,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500743,"byte_end":500746,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500751,"byte_end":500804,"line_start":454,"line_end":454,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500809,"byte_end":500880,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500885,"byte_end":500888,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500893,"byte_end":500962,"line_start":457,"line_end":457,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":500967,"byte_end":501053,"line_start":458,"line_end":458,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501602,"byte_end":501611,"line_start":474,"line_end":474,"column_start":12,"column_end":21},"name":"slice_mut","qualname":"<ArrayBase<S, D>>::slice_mut","value":"pub fn slice_mut<I>(&mut Self, I) -> ArrayViewMut<, A, I::OutDim> where\nI: SliceArg<D>, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced read-write view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced read-write view of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501226,"byte_end":501275,"line_start":467,"line_end":467,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501280,"byte_end":501283,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501288,"byte_end":501341,"line_start":469,"line_end":469,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501346,"byte_end":501417,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501422,"byte_end":501425,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501430,"byte_end":501499,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501504,"byte_end":501590,"line_start":473,"line_end":473,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502666,"byte_end":502681,"line_start":505,"line_end":505,"column_start":12,"column_end":27},"name":"multi_slice_mut","qualname":"<ArrayBase<S, D>>::multi_slice_mut","value":"pub fn multi_slice_mut<'a, M>(&'a mut Self, M) -> M::Output where\nM: MultiSliceArg, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return multiple disjoint, sliced, mutable views of the array.","sig":null,"attributes":[{"value":"/ Return multiple disjoint, sliced, mutable views of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501781,"byte_end":501846,"line_start":482,"line_end":482,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501851,"byte_end":501854,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation. See also","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501859,"byte_end":501921,"line_start":484,"line_end":484,"column_start":5,"column_end":67}},{"value":"/ [`MultiSliceArg`], [`s!`], [`SliceArg`], and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501926,"byte_end":501974,"line_start":485,"line_end":485,"column_start":5,"column_end":53}},{"value":"/ [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":501979,"byte_end":502015,"line_start":486,"line_end":486,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502020,"byte_end":502023,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the following occur:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502028,"byte_end":502073,"line_start":488,"line_end":488,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502078,"byte_end":502081,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * if any of the views would intersect (i.e. if any element would appear in multiple slices)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502086,"byte_end":502181,"line_start":490,"line_end":490,"column_start":5,"column_end":100}},{"value":"/ * if an index is out of bounds or step size is zero","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502186,"byte_end":502241,"line_start":491,"line_end":491,"column_start":5,"column_end":60}},{"value":"/ * if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502246,"byte_end":502320,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502325,"byte_end":502328,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502333,"byte_end":502346,"line_start":494,"line_end":494,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502351,"byte_end":502354,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502359,"byte_end":502366,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, s};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502371,"byte_end":502398,"line_start":497,"line_end":497,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502403,"byte_end":502406,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502411,"byte_end":502457,"line_start":499,"line_end":499,"column_start":5,"column_end":51}},{"value":"/ let (mut edges, mut middle) = a.multi_slice_mut((s![.., ..;2], s![.., 1]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502462,"byte_end":502541,"line_start":500,"line_end":500,"column_start":5,"column_end":84}},{"value":"/ edges.fill(1);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502546,"byte_end":502564,"line_start":501,"line_end":501,"column_start":5,"column_end":23}},{"value":"/ middle.fill(0);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502569,"byte_end":502588,"line_start":502,"line_end":502,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(a, arr2(&[[1, 0, 1], [1, 0, 1]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502593,"byte_end":502642,"line_start":503,"line_end":503,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502647,"byte_end":502654,"line_start":504,"line_end":504,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":503246,"byte_end":503256,"line_start":520,"line_end":520,"column_start":12,"column_end":22},"name":"slice_move","qualname":"<ArrayBase<S, D>>::slice_move","value":"pub fn slice_move<I>(Self, I) -> ArrayBase<S, I::OutDim> where I: SliceArg<D>","parent":null,"children":[],"decl_id":null,"docs":" Slice the array, possibly changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array, possibly changing the number of dimensions.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502855,"byte_end":502919,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502924,"byte_end":502927,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502932,"byte_end":502985,"line_start":515,"line_end":515,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":502990,"byte_end":503061,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":503066,"byte_end":503069,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":503074,"byte_end":503143,"line_start":518,"line_end":518,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":503148,"byte_end":503234,"line_start":519,"line_end":519,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":506257,"byte_end":506271,"line_start":589,"line_end":589,"column_start":12,"column_end":26},"name":"slice_collapse","qualname":"<ArrayBase<S, D>>::slice_collapse","value":"pub fn slice_collapse<I>(&mut Self, I) where I: SliceArg<D>","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place without changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array in place without changing the number of dimensions.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505347,"byte_end":505418,"line_start":569,"line_end":569,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505423,"byte_end":505426,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ In particular, if an axis is sliced with an index, the axis is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505431,"byte_end":505497,"line_start":571,"line_end":571,"column_start":5,"column_end":71}},{"value":"/ collapsed, as in [`.collapse_axis()`], rather than removed, as in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505502,"byte_end":505571,"line_start":572,"line_end":572,"column_start":5,"column_end":74}},{"value":"/ [`.slice_move()`] or [`.index_axis_move()`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505576,"byte_end":505624,"line_start":573,"line_end":573,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505629,"byte_end":505632,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ [`.collapse_axis()`]: Self::collapse_axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505637,"byte_end":505682,"line_start":575,"line_end":575,"column_start":5,"column_end":50}},{"value":"/ [`.slice_move()`]: Self::slice_move","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505687,"byte_end":505726,"line_start":576,"line_end":576,"column_start":5,"column_end":44}},{"value":"/ [`.index_axis_move()`]: Self::index_axis_move","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505731,"byte_end":505780,"line_start":577,"line_end":577,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505785,"byte_end":505788,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505793,"byte_end":505846,"line_start":579,"line_end":579,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505851,"byte_end":505922,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505927,"byte_end":505930,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ **Panics** in the following cases:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505935,"byte_end":505973,"line_start":582,"line_end":582,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505978,"byte_end":505981,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ - if an index is out of bounds","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":505986,"byte_end":506020,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/ - if a step size is zero","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":506025,"byte_end":506053,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/ - if [`SliceInfoElem::NewAxis`] is in `info`, e.g. if [`NewAxis`] was","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":506058,"byte_end":506131,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/   used in the [`s!`] macro","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":506136,"byte_end":506166,"line_start":587,"line_end":587,"column_start":5,"column_end":35}},{"value":"/ - if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":506171,"byte_end":506245,"line_start":588,"line_end":588,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507474,"byte_end":507484,"line_start":619,"line_end":619,"column_start":12,"column_end":22},"name":"slice_axis","qualname":"<ArrayBase<S, D>>::slice_axis","value":"pub fn slice_axis(&Self, Axis, Slice) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a view of the array, sliced along the specified axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507193,"byte_end":507257,"line_start":614,"line_end":614,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507262,"byte_end":507265,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507270,"byte_end":507339,"line_start":616,"line_end":616,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507344,"byte_end":507386,"line_start":617,"line_end":617,"column_start":5,"column_end":47}},{"value":"must_use = \"slice_axis returns an array view with the sliced result\"","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507391,"byte_end":507462,"line_start":618,"line_end":618,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507977,"byte_end":507991,"line_start":633,"line_end":633,"column_start":12,"column_end":26},"name":"slice_axis_mut","qualname":"<ArrayBase<S, D>>::slice_axis_mut","value":"pub fn slice_axis_mut(&mut Self, Axis, Slice) -> ArrayViewMut<, A, D> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a mutable view of the array, sliced along the specified axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507684,"byte_end":507756,"line_start":628,"line_end":628,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507761,"byte_end":507764,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507769,"byte_end":507838,"line_start":630,"line_end":630,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507843,"byte_end":507885,"line_start":631,"line_end":631,"column_start":5,"column_end":47}},{"value":"must_use = \"slice_axis_mut returns an array view with the sliced result\"","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":507890,"byte_end":507965,"line_start":632,"line_end":632,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508412,"byte_end":508430,"line_start":646,"line_end":646,"column_start":12,"column_end":30},"name":"slice_axis_inplace","qualname":"<ArrayBase<S, D>>::slice_axis_inplace","value":"pub fn slice_axis_inplace(&mut Self, Axis, Slice)","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place along the specified axis.","sig":null,"attributes":[{"value":"/ Slice the array in place along the specified axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508217,"byte_end":508271,"line_start":642,"line_end":642,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508276,"byte_end":508279,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508284,"byte_end":508353,"line_start":644,"line_end":644,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508358,"byte_end":508400,"line_start":645,"line_end":645,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509087,"byte_end":509102,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"slice_each_axis","qualname":"<ArrayBase<S, D>>::slice_each_axis","value":"pub fn slice_each_axis<F>(&Self, F) -> ArrayView<, A, D> where\nF: FnMut(AxisDescription) -> Slice, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of a slice of the array, with a closure specifying the\n slice for each axis.","sig":null,"attributes":[{"value":"/ Return a view of a slice of the array, with a closure specifying the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508782,"byte_end":508854,"line_start":658,"line_end":658,"column_start":5,"column_end":77}},{"value":"/ slice for each axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508859,"byte_end":508883,"line_start":659,"line_end":659,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508888,"byte_end":508891,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for code which is generic over the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508896,"byte_end":508960,"line_start":661,"line_end":661,"column_start":5,"column_end":69}},{"value":"/ dimensionality of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":508965,"byte_end":508997,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509002,"byte_end":509005,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509010,"byte_end":509075,"line_start":664,"line_end":664,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509633,"byte_end":509652,"line_start":682,"line_end":682,"column_start":12,"column_end":31},"name":"slice_each_axis_mut","qualname":"<ArrayBase<S, D>>::slice_each_axis_mut","value":"pub fn slice_each_axis_mut<F>(&mut Self, F) -> ArrayViewMut<, A, D> where\nF: FnMut(AxisDescription) -> Slice, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view of a slice of the array, with a closure\n specifying the slice for each axis.","sig":null,"attributes":[{"value":"/ Return a mutable view of a slice of the array, with a closure","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509320,"byte_end":509385,"line_start":675,"line_end":675,"column_start":5,"column_end":70}},{"value":"/ specifying the slice for each axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509390,"byte_end":509429,"line_start":676,"line_end":676,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509434,"byte_end":509437,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for code which is generic over the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509442,"byte_end":509506,"line_start":678,"line_end":678,"column_start":5,"column_end":69}},{"value":"/ dimensionality of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509511,"byte_end":509543,"line_start":679,"line_end":679,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509548,"byte_end":509551,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509556,"byte_end":509621,"line_start":681,"line_end":681,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510176,"byte_end":510199,"line_start":699,"line_end":699,"column_start":12,"column_end":35},"name":"slice_each_axis_inplace","qualname":"<ArrayBase<S, D>>::slice_each_axis_inplace","value":"pub fn slice_each_axis_inplace<F>(&mut Self, F) where\nF: FnMut(AxisDescription) -> Slice","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place, with a closure specifying the slice for each\n axis.","sig":null,"attributes":[{"value":"/ Slice the array in place, with a closure specifying the slice for each","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509884,"byte_end":509958,"line_start":692,"line_end":692,"column_start":5,"column_end":79}},{"value":"/ axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509963,"byte_end":509972,"line_start":693,"line_end":693,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509977,"byte_end":509980,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for code which is generic over the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":509985,"byte_end":510049,"line_start":695,"line_end":695,"column_start":5,"column_end":69}},{"value":"/ dimensionality of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510054,"byte_end":510086,"line_start":696,"line_end":696,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510091,"byte_end":510094,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510099,"byte_end":510164,"line_start":698,"line_end":698,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":511098,"byte_end":511101,"line_start":733,"line_end":733,"column_start":12,"column_end":15},"name":"get","qualname":"<ArrayBase<S, D>>::get","value":"pub fn get<I>(&Self, I) -> Option<&A> where I: NdIndex<D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the element at `index`, or return `None`\n if the index is out of bounds.","sig":null,"attributes":[{"value":"/ Return a reference to the element at `index`, or return `None`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510603,"byte_end":510669,"line_start":715,"line_end":715,"column_start":5,"column_end":71}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510674,"byte_end":510708,"line_start":716,"line_end":716,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510713,"byte_end":510716,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Arrays also support indexing syntax: `array[index]`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510721,"byte_end":510777,"line_start":718,"line_end":718,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510782,"byte_end":510785,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510790,"byte_end":510797,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510802,"byte_end":510824,"line_start":721,"line_end":721,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510829,"byte_end":510832,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510837,"byte_end":510865,"line_start":723,"line_end":723,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510870,"byte_end":510900,"line_start":724,"line_end":724,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510905,"byte_end":510908,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510913,"byte_end":510925,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/     a.get((0, 1)) == Some(&2.) &&","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510930,"byte_end":510967,"line_start":727,"line_end":727,"column_start":5,"column_end":42}},{"value":"/     a.get((0, 2)) == None &&","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":510972,"byte_end":511004,"line_start":728,"line_end":728,"column_start":5,"column_end":37}},{"value":"/     a[(0, 1)] == 2. &&","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":511009,"byte_end":511035,"line_start":729,"line_end":729,"column_start":5,"column_end":31}},{"value":"/     a[[0, 1]] == 2.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":511040,"byte_end":511063,"line_start":730,"line_end":730,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":511068,"byte_end":511074,"line_start":731,"line_end":731,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":511079,"byte_end":511086,"line_start":732,"line_end":732,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3380},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":511674,"byte_end":511681,"line_start":753,"line_end":753,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ArrayBase<S, D>>::get_mut","value":"pub fn get_mut<I>(&mut Self, I) -> Option<&mut A> where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the element at `index`, or return `None`\n if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the element at `index`, or return `None`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":511549,"byte_end":511623,"line_start":751,"line_end":751,"column_start":5,"column_end":79}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":511628,"byte_end":511662,"line_start":752,"line_end":752,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512575,"byte_end":512579,"line_start":784,"line_end":784,"column_start":19,"column_end":23},"name":"uget","qualname":"<ArrayBase<S, D>>::uget","value":"pub unsafe fn uget<I>(&Self, I) -> &A where S: Data, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512274,"byte_end":512313,"line_start":774,"line_end":774,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512318,"byte_end":512321,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ Return a reference to the element at `index`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512326,"byte_end":512375,"line_start":776,"line_end":776,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512380,"byte_end":512383,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512388,"byte_end":512449,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512454,"byte_end":512457,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512462,"byte_end":512474,"line_start":780,"line_end":780,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512479,"byte_end":512482,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the index is in-bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512487,"byte_end":512542,"line_start":782,"line_end":782,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512547,"byte_end":512556,"line_start":783,"line_end":783,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513326,"byte_end":513334,"line_start":809,"line_end":809,"column_start":19,"column_end":27},"name":"uget_mut","qualname":"<ArrayBase<S, D>>::uget_mut","value":"pub unsafe fn uget_mut<I>(&mut Self, I) -> &mut A where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512824,"byte_end":512863,"line_start":794,"line_end":794,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512868,"byte_end":512871,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Return a mutable reference to the element at `index`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512876,"byte_end":512933,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512938,"byte_end":512941,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ **Note:** Only unchecked for non-debug builds of ndarray.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":512946,"byte_end":513007,"line_start":798,"line_end":798,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513012,"byte_end":513015,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513020,"byte_end":513032,"line_start":800,"line_end":800,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513037,"byte_end":513040,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513045,"byte_end":513077,"line_start":802,"line_end":802,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513082,"byte_end":513085,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ 1. the index is in-bounds and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513090,"byte_end":513123,"line_start":804,"line_end":804,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513128,"byte_end":513131,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ 2. the data is uniquely held by the array. (This property is guaranteed","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513136,"byte_end":513211,"line_start":806,"line_end":806,"column_start":5,"column_end":80}},{"value":"/    for `Array` and `ArrayViewMut`, but not for `ArcArray` or `CowArray`.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513216,"byte_end":513293,"line_start":807,"line_end":807,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513298,"byte_end":513307,"line_start":808,"line_end":808,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513800,"byte_end":513804,"line_start":825,"line_end":825,"column_start":12,"column_end":16},"name":"swap","qualname":"<ArrayBase<S, D>>::swap","value":"pub fn swap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements at indices `index1` and `index2`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513640,"byte_end":513691,"line_start":820,"line_end":820,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513696,"byte_end":513699,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513704,"byte_end":513729,"line_start":822,"line_end":822,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513734,"byte_end":513737,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an index is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":513742,"byte_end":513788,"line_start":824,"line_end":824,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514924,"byte_end":514929,"line_start":858,"line_end":858,"column_start":19,"column_end":24},"name":"uswap","qualname":"<ArrayBase<S, D>>::uswap","value":"pub unsafe fn uswap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements *unchecked* at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements *unchecked* at indices `index1` and `index2`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514426,"byte_end":514489,"line_start":844,"line_end":844,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514494,"byte_end":514497,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514502,"byte_end":514527,"line_start":846,"line_end":846,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514532,"byte_end":514535,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514540,"byte_end":514601,"line_start":848,"line_end":848,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514606,"byte_end":514609,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514614,"byte_end":514626,"line_start":850,"line_end":850,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514631,"byte_end":514634,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514639,"byte_end":514671,"line_start":852,"line_end":852,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514676,"byte_end":514679,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ 1. both `index1` and `index2` are in-bounds and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514684,"byte_end":514735,"line_start":854,"line_end":854,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514740,"byte_end":514743,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ 2. the data is uniquely held by the array. (This property is guaranteed","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514748,"byte_end":514823,"line_start":856,"line_end":856,"column_start":5,"column_end":80}},{"value":"/    for `Array` and `ArrayViewMut`, but not for `ArcArray` or `CowArray`.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":514828,"byte_end":514905,"line_start":857,"line_end":857,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516475,"byte_end":516485,"line_start":905,"line_end":905,"column_start":12,"column_end":22},"name":"index_axis","qualname":"<ArrayBase<S, D>>::index_axis","value":"pub fn index_axis(&Self, Axis, usize) -> ArrayView<, A, D::Smaller> where\nS: Data, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a view restricted to `index` along the axis, with the axis\n removed.","sig":null,"attributes":[{"value":"/ Returns a view restricted to `index` along the axis, with the axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515691,"byte_end":515761,"line_start":884,"line_end":884,"column_start":5,"column_end":75}},{"value":"/ removed.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515766,"byte_end":515778,"line_start":885,"line_end":885,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515783,"byte_end":515786,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515791,"byte_end":515846,"line_start":887,"line_end":887,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515851,"byte_end":515854,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515859,"byte_end":515912,"line_start":889,"line_end":889,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515917,"byte_end":515920,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515925,"byte_end":515932,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayView, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515937,"byte_end":515978,"line_start":892,"line_end":892,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515983,"byte_end":515986,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2. ],    // ... axis 0, row 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":515991,"byte_end":516044,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/                [3., 4. ],    // --- axis 0, row 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516049,"byte_end":516102,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/                [5., 6. ]]);  // ... axis 0, row 2","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516107,"byte_end":516160,"line_start":896,"line_end":896,"column_start":5,"column_end":58}},{"value":"/ //               .   \\","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516165,"byte_end":516191,"line_start":897,"line_end":897,"column_start":5,"column_end":31}},{"value":"/ //                .   axis 1, column 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516196,"byte_end":516238,"line_start":898,"line_end":898,"column_start":5,"column_end":47}},{"value":"/ //                 axis 1, column 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516243,"byte_end":516282,"line_start":899,"line_end":899,"column_start":5,"column_end":44}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516287,"byte_end":516299,"line_start":900,"line_end":900,"column_start":5,"column_end":17}},{"value":"/     a.index_axis(Axis(0), 1) == ArrayView::from(&[3., 4.]) &&","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516304,"byte_end":516369,"line_start":901,"line_end":901,"column_start":5,"column_end":70}},{"value":"/     a.index_axis(Axis(1), 1) == ArrayView::from(&[2., 4., 6.])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516374,"byte_end":516440,"line_start":902,"line_end":902,"column_start":5,"column_end":71}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516445,"byte_end":516451,"line_start":903,"line_end":903,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516456,"byte_end":516463,"line_start":904,"line_end":904,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517362,"byte_end":517376,"line_start":937,"line_end":937,"column_start":12,"column_end":26},"name":"index_axis_mut","qualname":"<ArrayBase<S, D>>::index_axis_mut","value":"pub fn index_axis_mut(&mut Self, Axis, usize) -> ArrayViewMut<, A, D::Smaller>\nwhere S: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view restricted to `index` along the axis, with the\n axis removed.","sig":null,"attributes":[{"value":"/ Returns a mutable view restricted to `index` along the axis, with the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516667,"byte_end":516740,"line_start":913,"line_end":913,"column_start":5,"column_end":78}},{"value":"/ axis removed.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516745,"byte_end":516762,"line_start":914,"line_end":914,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516767,"byte_end":516770,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516775,"byte_end":516828,"line_start":916,"line_end":916,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516833,"byte_end":516836,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516841,"byte_end":516848,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, aview2, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516853,"byte_end":516891,"line_start":919,"line_end":919,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516896,"byte_end":516899,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2. ],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516904,"byte_end":516937,"line_start":921,"line_end":921,"column_start":5,"column_end":38}},{"value":"/                    [3., 4. ]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516942,"byte_end":516977,"line_start":922,"line_end":922,"column_start":5,"column_end":40}},{"value":"/ //                   .   \\","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":516982,"byte_end":517012,"line_start":923,"line_end":923,"column_start":5,"column_end":35}},{"value":"/ //                    .   axis 1, column 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517017,"byte_end":517063,"line_start":924,"line_end":924,"column_start":5,"column_end":51}},{"value":"/ //                     axis 1, column 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517068,"byte_end":517111,"line_start":925,"line_end":925,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517116,"byte_end":517119,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517124,"byte_end":517129,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/     let mut column1 = a.index_axis_mut(Axis(1), 1);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517134,"byte_end":517189,"line_start":928,"line_end":928,"column_start":5,"column_end":60}},{"value":"/     column1 += 10.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517194,"byte_end":517217,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517222,"byte_end":517227,"line_start":930,"line_end":930,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517232,"byte_end":517235,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517240,"byte_end":517252,"line_start":932,"line_end":932,"column_start":5,"column_end":17}},{"value":"/     a == aview2(&[[1., 12.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517257,"byte_end":517289,"line_start":933,"line_end":933,"column_start":5,"column_end":37}},{"value":"/                   [3., 14.]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517294,"byte_end":517327,"line_start":934,"line_end":934,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517332,"byte_end":517338,"line_start":935,"line_end":935,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517343,"byte_end":517350,"line_start":936,"line_end":936,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517829,"byte_end":517844,"line_start":950,"line_end":950,"column_start":12,"column_end":27},"name":"index_axis_move","qualname":"<ArrayBase<S, D>>::index_axis_move","value":"pub fn index_axis_move(Self, Axis, usize) -> ArrayBase<S, D::Smaller> where\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517572,"byte_end":517643,"line_start":945,"line_end":945,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517648,"byte_end":517651,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ See [`.index_axis()`](Self::index_axis) and [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517656,"byte_end":517751,"line_start":947,"line_end":947,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517756,"byte_end":517759,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":517764,"byte_end":517817,"line_start":949,"line_end":949,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518409,"byte_end":518422,"line_start":966,"line_end":966,"column_start":12,"column_end":25},"name":"collapse_axis","qualname":"<ArrayBase<S, D>>::collapse_axis","value":"pub fn collapse_axis(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Selects `index` along the axis, collapsing the axis into length one.","sig":null,"attributes":[{"value":"/ Selects `index` along the axis, collapsing the axis into length one.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518259,"byte_end":518331,"line_start":963,"line_end":963,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518336,"byte_end":518339,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518344,"byte_end":518397,"line_start":965,"line_end":965,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519327,"byte_end":519333,"line_start":993,"line_end":993,"column_start":12,"column_end":18},"name":"select","qualname":"<ArrayBase<S, D>>::select","value":"pub fn select(&Self, Axis, &[Ix]) -> Array<A, D> where A: Clone, S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Along `axis`, select arbitrary subviews corresponding to `indices`\n and and copy them into a new array.","sig":null,"attributes":[{"value":"/ Along `axis`, select arbitrary subviews corresponding to `indices`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518680,"byte_end":518750,"line_start":972,"line_end":972,"column_start":5,"column_end":75}},{"value":"/ and and copy them into a new array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518755,"byte_end":518794,"line_start":973,"line_end":973,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518799,"byte_end":518802,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or an element of `indices` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518807,"byte_end":518876,"line_start":975,"line_end":975,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518881,"byte_end":518884,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518889,"byte_end":518896,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518901,"byte_end":518931,"line_start":978,"line_end":978,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518936,"byte_end":518939,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ let x = arr2(&[[0., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518944,"byte_end":518972,"line_start":980,"line_end":980,"column_start":5,"column_end":33}},{"value":"/                [2., 3.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":518977,"byte_end":519005,"line_start":981,"line_end":981,"column_start":5,"column_end":33}},{"value":"/                [4., 5.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519010,"byte_end":519038,"line_start":982,"line_end":982,"column_start":5,"column_end":33}},{"value":"/                [6., 7.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519043,"byte_end":519071,"line_start":983,"line_end":983,"column_start":5,"column_end":33}},{"value":"/                [8., 9.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519076,"byte_end":519106,"line_start":984,"line_end":984,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519111,"byte_end":519114,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ let r = x.select(Axis(0), &[0, 4, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519119,"byte_end":519161,"line_start":986,"line_end":986,"column_start":5,"column_end":47}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519166,"byte_end":519178,"line_start":987,"line_end":987,"column_start":5,"column_end":17}},{"value":"/         r == arr2(&[[0., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519183,"byte_end":519216,"line_start":988,"line_end":988,"column_start":5,"column_end":38}},{"value":"/                     [8., 9.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519221,"byte_end":519254,"line_start":989,"line_end":989,"column_start":5,"column_end":38}},{"value":"/                     [6., 7.]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519259,"byte_end":519293,"line_start":990,"line_end":990,"column_start":5,"column_end":39}},{"value":"/);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519298,"byte_end":519303,"line_start":991,"line_end":991,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":519308,"byte_end":519315,"line_start":992,"line_end":992,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521827,"byte_end":521831,"line_start":1057,"line_end":1057,"column_start":12,"column_end":16},"name":"rows","qualname":"<ArrayBase<S, D>>::rows","value":"pub fn rows(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array. For a 2D array these are the regular rows.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":520797,"byte_end":520869,"line_start":1031,"line_end":1031,"column_start":5,"column_end":77}},{"value":"/ rows of the array. For a 2D array these are the regular rows.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":520874,"byte_end":520939,"line_start":1032,"line_end":1032,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":520944,"byte_end":520947,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(n - 1))` where *n* is `self.ndim()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":520952,"byte_end":521027,"line_start":1034,"line_end":1034,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521032,"byte_end":521035,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521040,"byte_end":521109,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ it has *a* × *b* × *c* × ... × *l* rows each of length *m*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521114,"byte_end":521181,"line_start":1037,"line_end":1037,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521186,"byte_end":521189,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each row is 3 elements long","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521194,"byte_end":521262,"line_start":1039,"line_end":1039,"column_start":5,"column_end":71}},{"value":"/ and there are 2 × 2 = 4 rows in total.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521267,"byte_end":521310,"line_start":1040,"line_end":1040,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521315,"byte_end":521318,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521323,"byte_end":521379,"line_start":1042,"line_end":1042,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521384,"byte_end":521387,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521392,"byte_end":521399,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521404,"byte_end":521426,"line_start":1045,"line_end":1045,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521431,"byte_end":521434,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],    // -- row 0, 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521439,"byte_end":521490,"line_start":1047,"line_end":1047,"column_start":5,"column_end":56}},{"value":"/                 [ 3,  4,  5]],   // -- row 0, 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521495,"byte_end":521546,"line_start":1048,"line_end":1048,"column_start":5,"column_end":56}},{"value":"/                [[ 6,  7,  8],    // -- row 1, 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521551,"byte_end":521602,"line_start":1049,"line_end":1049,"column_start":5,"column_end":56}},{"value":"/                 [ 9, 10, 11]]]); // -- row 1, 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521607,"byte_end":521658,"line_start":1050,"line_end":1050,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521663,"byte_end":521666,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ // `rows` will yield the four generalized rows of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521671,"byte_end":521735,"line_start":1052,"line_end":1052,"column_start":5,"column_end":69}},{"value":"/ for row in a.rows() {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521740,"byte_end":521765,"line_start":1053,"line_end":1053,"column_start":5,"column_end":30}},{"value":"/     /* loop body */","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521770,"byte_end":521793,"line_start":1054,"line_end":1054,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521798,"byte_end":521803,"line_start":1055,"line_end":1055,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":521808,"byte_end":521815,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522107,"byte_end":522114,"line_start":1069,"line_end":1069,"column_start":12,"column_end":19},"name":"genrows","qualname":"<ArrayBase<S, D>>::genrows","value":"pub fn genrows(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to .rows()\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522039,"byte_end":522095,"line_start":1068,"line_end":1068,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522436,"byte_end":522444,"line_start":1080,"line_end":1080,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ArrayBase<S, D>>::rows_mut","value":"pub fn rows_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522214,"byte_end":522286,"line_start":1076,"line_end":1076,"column_start":5,"column_end":77}},{"value":"/ rows of the array and yields mutable array views.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522291,"byte_end":522344,"line_start":1077,"line_end":1077,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522349,"byte_end":522352,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522357,"byte_end":522424,"line_start":1079,"line_end":1079,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522741,"byte_end":522752,"line_start":1092,"line_end":1092,"column_start":12,"column_end":23},"name":"genrows_mut","qualname":"<ArrayBase<S, D>>::genrows_mut","value":"pub fn genrows_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to .rows_mut()\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522669,"byte_end":522729,"line_start":1091,"line_end":1091,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523901,"byte_end":523908,"line_start":1125,"line_end":1125,"column_start":12,"column_end":19},"name":"columns","qualname":"<ArrayBase<S, D>>::columns","value":"pub fn columns(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array. For a 2D array these are the regular columns.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522866,"byte_end":522938,"line_start":1099,"line_end":1099,"column_start":5,"column_end":77}},{"value":"/ columns of the array. For a 2D array these are the regular columns.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":522943,"byte_end":523014,"line_start":1100,"line_end":1100,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523019,"byte_end":523022,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(0))`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523027,"byte_end":523071,"line_start":1102,"line_end":1102,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523076,"byte_end":523079,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523084,"byte_end":523153,"line_start":1104,"line_end":1104,"column_start":5,"column_end":69}},{"value":"/ it has *b* × *c* × ... × *l* × *m* columns each of length *a*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523158,"byte_end":523228,"line_start":1105,"line_end":1105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523233,"byte_end":523236,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each column is 2 elements long","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523241,"byte_end":523312,"line_start":1107,"line_end":1107,"column_start":5,"column_end":74}},{"value":"/ and there are 2 × 3 = 6 columns in total.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523317,"byte_end":523363,"line_start":1108,"line_end":1108,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523368,"byte_end":523371,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523376,"byte_end":523432,"line_start":1110,"line_end":1110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523437,"byte_end":523440,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523445,"byte_end":523452,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523457,"byte_end":523479,"line_start":1113,"line_end":1113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523484,"byte_end":523487,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ // The generalized columns of a 3D array:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523492,"byte_end":523537,"line_start":1115,"line_end":1115,"column_start":5,"column_end":50}},{"value":"/ // are directed along the 0th axis: 0 and 6, 1 and 7 and so on...","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523542,"byte_end":523611,"line_start":1116,"line_end":1116,"column_start":5,"column_end":74}},{"value":"/ let a = arr3(&[[[ 0,  1,  2], [ 3,  4,  5]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523616,"byte_end":523664,"line_start":1117,"line_end":1117,"column_start":5,"column_end":53}},{"value":"/                [[ 6,  7,  8], [ 9, 10, 11]]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523669,"byte_end":523719,"line_start":1118,"line_end":1118,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523724,"byte_end":523727,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ // Here `columns` will yield the six generalized columns of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523732,"byte_end":523806,"line_start":1120,"line_end":1120,"column_start":5,"column_end":79}},{"value":"/ for row in a.columns() {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523811,"byte_end":523839,"line_start":1121,"line_end":1121,"column_start":5,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523844,"byte_end":523867,"line_start":1122,"line_end":1122,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523872,"byte_end":523877,"line_start":1123,"line_end":1123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":523882,"byte_end":523889,"line_start":1124,"line_end":1124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524293,"byte_end":524303,"line_start":1137,"line_end":1137,"column_start":12,"column_end":22},"name":"gencolumns","qualname":"<ArrayBase<S, D>>::gencolumns","value":"pub fn gencolumns(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array. For a 2D array these are the regular columns.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524029,"byte_end":524101,"line_start":1132,"line_end":1132,"column_start":5,"column_end":77}},{"value":"/ columns of the array. For a 2D array these are the regular columns.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524106,"byte_end":524177,"line_start":1133,"line_end":1133,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524182,"byte_end":524185,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ Renamed to `.columns()`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524190,"byte_end":524217,"line_start":1135,"line_end":1135,"column_start":5,"column_end":32}},{"value":"deprecated(note = \"Renamed to .columns()\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524222,"byte_end":524281,"line_start":1136,"line_end":1136,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3407},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524631,"byte_end":524642,"line_start":1148,"line_end":1148,"column_start":12,"column_end":23},"name":"columns_mut","qualname":"<ArrayBase<S, D>>::columns_mut","value":"pub fn columns_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524406,"byte_end":524478,"line_start":1144,"line_end":1144,"column_start":5,"column_end":77}},{"value":"/ columns of the array and yields mutable array views.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524483,"byte_end":524539,"line_start":1145,"line_end":1145,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524544,"byte_end":524547,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524552,"byte_end":524619,"line_start":1147,"line_end":1147,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3408},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525037,"byte_end":525051,"line_start":1160,"line_end":1160,"column_start":12,"column_end":26},"name":"gencolumns_mut","qualname":"<ArrayBase<S, D>>::gencolumns_mut","value":"pub fn gencolumns_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524780,"byte_end":524852,"line_start":1155,"line_end":1155,"column_start":5,"column_end":77}},{"value":"/ columns of the array and yields mutable array views.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524857,"byte_end":524913,"line_start":1156,"line_end":1156,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524918,"byte_end":524921,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ Renamed to `.columns_mut()`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524926,"byte_end":524957,"line_start":1158,"line_end":1158,"column_start":5,"column_end":36}},{"value":"deprecated(note = \"Renamed to .columns_mut()\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":524962,"byte_end":525025,"line_start":1159,"line_end":1159,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3409},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526300,"byte_end":526305,"line_start":1195,"line_end":1195,"column_start":12,"column_end":17},"name":"lanes","qualname":"<ArrayBase<S, D>>::lanes","value":"pub fn lanes(&Self, Axis) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525168,"byte_end":525235,"line_start":1167,"line_end":1167,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525240,"byte_end":525280,"line_start":1168,"line_end":1168,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525285,"byte_end":525288,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ When pointing in the direction of the first axis, they are *columns*,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525293,"byte_end":525366,"line_start":1170,"line_end":1170,"column_start":5,"column_end":78}},{"value":"/ in the direction of the last axis *rows*; in general they are all","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525371,"byte_end":525440,"line_start":1171,"line_end":1171,"column_start":5,"column_end":74}},{"value":"/ *lanes* and are one dimensional.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525445,"byte_end":525481,"line_start":1172,"line_end":1172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525486,"byte_end":525489,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525494,"byte_end":525550,"line_start":1174,"line_end":1174,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525555,"byte_end":525558,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525563,"byte_end":525570,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, aview1, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525575,"byte_end":525613,"line_start":1177,"line_end":1177,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525618,"byte_end":525621,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525626,"byte_end":525659,"line_start":1179,"line_end":1179,"column_start":5,"column_end":38}},{"value":"/                 [ 3,  4,  5]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525664,"byte_end":525698,"line_start":1180,"line_end":1180,"column_start":5,"column_end":39}},{"value":"/                [[ 6,  7,  8],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525703,"byte_end":525736,"line_start":1181,"line_end":1181,"column_start":5,"column_end":38}},{"value":"/                 [ 9, 10, 11]]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525741,"byte_end":525777,"line_start":1182,"line_end":1182,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525782,"byte_end":525785,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ let inner0 = a.lanes(Axis(0));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525790,"byte_end":525824,"line_start":1184,"line_end":1184,"column_start":5,"column_end":39}},{"value":"/ let inner1 = a.lanes(Axis(1));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525829,"byte_end":525863,"line_start":1185,"line_end":1185,"column_start":5,"column_end":39}},{"value":"/ let inner2 = a.lanes(Axis(2));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525868,"byte_end":525902,"line_start":1186,"line_end":1186,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525907,"byte_end":525910,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ // The first lane for axis 0 is [0, 6]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525915,"byte_end":525957,"line_start":1188,"line_end":1188,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner0.into_iter().next().unwrap(), aview1(&[0, 6]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":525962,"byte_end":526030,"line_start":1189,"line_end":1189,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 1 is [0, 3]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526035,"byte_end":526077,"line_start":1190,"line_end":1190,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner1.into_iter().next().unwrap(), aview1(&[0, 3]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526082,"byte_end":526150,"line_start":1191,"line_end":1191,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 2 is [0, 1, 2]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526155,"byte_end":526200,"line_start":1192,"line_end":1192,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(inner2.into_iter().next().unwrap(), aview1(&[0, 1, 2]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526205,"byte_end":526276,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526281,"byte_end":526288,"line_start":1194,"line_end":1194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526642,"byte_end":526651,"line_start":1206,"line_end":1206,"column_start":12,"column_end":21},"name":"lanes_mut","qualname":"<ArrayBase<S, D>>::lanes_mut","value":"pub fn lanes_mut(&mut Self, Axis) -> LanesMut<, A, D::Smaller> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526435,"byte_end":526502,"line_start":1202,"line_end":1202,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526507,"byte_end":526547,"line_start":1203,"line_end":1203,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526552,"byte_end":526555,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut1<A>` (1D read-write array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526560,"byte_end":526630,"line_start":1205,"line_end":1205,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527082,"byte_end":527092,"line_start":1220,"line_end":1220,"column_start":12,"column_end":22},"name":"outer_iter","qualname":"<ArrayBase<S, D>>::outer_iter","value":"pub fn outer_iter(&Self) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526798,"byte_end":526864,"line_start":1213,"line_end":1213,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526869,"byte_end":526897,"line_start":1214,"line_end":1214,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526902,"byte_end":526905,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter(Axis(0))`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526910,"byte_end":526958,"line_start":1216,"line_end":1216,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526963,"byte_end":526966,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":526971,"byte_end":527045,"line_start":1218,"line_end":1218,"column_start":5,"column_end":79}},{"value":"allow(deprecated)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527050,"byte_end":527070,"line_start":1219,"line_end":1219,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527528,"byte_end":527542,"line_start":1235,"line_end":1235,"column_start":12,"column_end":26},"name":"outer_iter_mut","qualname":"<ArrayBase<S, D>>::outer_iter_mut","value":"pub fn outer_iter_mut(&mut Self) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527236,"byte_end":527302,"line_start":1228,"line_end":1228,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527307,"byte_end":527335,"line_start":1229,"line_end":1229,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527340,"byte_end":527343,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter_mut(Axis(0))`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527348,"byte_end":527400,"line_start":1231,"line_end":1231,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527405,"byte_end":527408,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>` (read-write array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527413,"byte_end":527491,"line_start":1233,"line_end":1233,"column_start":5,"column_end":83}},{"value":"allow(deprecated)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527496,"byte_end":527516,"line_start":1234,"line_end":1234,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528331,"byte_end":528340,"line_start":1258,"line_end":1258,"column_start":12,"column_end":21},"name":"axis_iter","qualname":"<ArrayBase<S, D>>::axis_iter","value":"pub fn axis_iter(&Self, Axis) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527700,"byte_end":527749,"line_start":1243,"line_end":1243,"column_start":5,"column_end":54}},{"value":"/ and yields each subview along it.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527754,"byte_end":527791,"line_start":1244,"line_end":1244,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527796,"byte_end":527799,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ For example, in a 3 × 4 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527804,"byte_end":527876,"line_start":1246,"line_end":1246,"column_start":5,"column_end":75}},{"value":"/ the iterator element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527881,"byte_end":527905,"line_start":1247,"line_end":1247,"column_start":5,"column_end":29}},{"value":"/ is a 3 × 4 subview (and there are 5 in total), as shown","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527910,"byte_end":527970,"line_start":1248,"line_end":1248,"column_start":5,"column_end":64}},{"value":"/ in the picture below.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":527975,"byte_end":528000,"line_start":1249,"line_end":1249,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528005,"byte_end":528008,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528013,"byte_end":528087,"line_start":1251,"line_end":1251,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528092,"byte_end":528095,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528100,"byte_end":528155,"line_start":1253,"line_end":1253,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528160,"byte_end":528163,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528168,"byte_end":528210,"line_start":1255,"line_end":1255,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528215,"byte_end":528218,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ <img src=\"https://rust-ndarray.github.io/ndarray/images/axis_iter_3_4_5.svg\" height=\"250px\">","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528223,"byte_end":528319,"line_start":1257,"line_end":1257,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528764,"byte_end":528777,"line_start":1273,"line_end":1273,"column_start":12,"column_end":25},"name":"axis_iter_mut","qualname":"<ArrayBase<S, D>>::axis_iter_mut","value":"pub fn axis_iter_mut(&mut Self, Axis) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each mutable subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528499,"byte_end":528548,"line_start":1266,"line_end":1266,"column_start":5,"column_end":54}},{"value":"/ and yields each mutable subview along it.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528553,"byte_end":528598,"line_start":1267,"line_end":1267,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528603,"byte_end":528606,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528611,"byte_end":528664,"line_start":1269,"line_end":1269,"column_start":5,"column_end":58}},{"value":"/ (read-write array view).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528669,"byte_end":528697,"line_start":1270,"line_end":1270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528702,"byte_end":528705,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528710,"byte_end":528752,"line_start":1272,"line_end":1272,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529975,"byte_end":529991,"line_start":1307,"line_end":1307,"column_start":12,"column_end":28},"name":"axis_chunks_iter","qualname":"<ArrayBase<S, D>>::axis_chunks_iter","value":"pub fn axis_chunks_iter(&Self, Axis, usize) -> AxisChunksIter<, A, D> where\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":528953,"byte_end":529023,"line_start":1281,"line_end":1281,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping views along that axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529028,"byte_end":529079,"line_start":1282,"line_end":1282,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529084,"byte_end":529087,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529092,"byte_end":529133,"line_start":1284,"line_end":1284,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529138,"byte_end":529141,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ The last view may have less elements if `size` does not divide","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529146,"byte_end":529212,"line_start":1286,"line_end":1286,"column_start":5,"column_end":71}},{"value":"/ the axis' dimension.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529217,"byte_end":529241,"line_start":1287,"line_end":1287,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529246,"byte_end":529249,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529254,"byte_end":529317,"line_start":1289,"line_end":1289,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529322,"byte_end":529325,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529330,"byte_end":529337,"line_start":1291,"line_end":1291,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529342,"byte_end":529365,"line_start":1292,"line_end":1292,"column_start":5,"column_end":28}},{"value":"/ use ndarray::{arr3, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529370,"byte_end":529400,"line_start":1293,"line_end":1293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529405,"byte_end":529408,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_iter(0..28).into_shape((2, 7, 2)).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529413,"byte_end":529480,"line_start":1295,"line_end":1295,"column_start":5,"column_end":72}},{"value":"/ let mut iter = a.axis_chunks_iter(Axis(1), 2);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529485,"byte_end":529535,"line_start":1296,"line_end":1296,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529540,"byte_end":529543,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ // first iteration yields a 2 × 2 × 2 view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529548,"byte_end":529596,"line_start":1298,"line_end":1298,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(iter.next().unwrap(),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529601,"byte_end":529637,"line_start":1299,"line_end":1299,"column_start":5,"column_end":41}},{"value":"/            arr3(&[[[ 0,  1], [ 2, 3]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529642,"byte_end":529684,"line_start":1300,"line_end":1300,"column_start":5,"column_end":47}},{"value":"/                   [[14, 15], [16, 17]]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529689,"byte_end":529735,"line_start":1301,"line_end":1301,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529740,"byte_end":529743,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ // however the last element is a 2 × 1 × 2 view since 7 % 2 == 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529748,"byte_end":529818,"line_start":1303,"line_end":1303,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next_back().unwrap(), arr3(&[[[12, 13]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529823,"byte_end":529883,"line_start":1304,"line_end":1304,"column_start":5,"column_end":65}},{"value":"/                                              [[26, 27]]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529888,"byte_end":529951,"line_start":1305,"line_end":1305,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":529956,"byte_end":529963,"line_start":1306,"line_end":1306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530431,"byte_end":530451,"line_start":1320,"line_end":1320,"column_start":12,"column_end":32},"name":"axis_chunks_iter_mut","qualname":"<ArrayBase<S, D>>::axis_chunks_iter_mut","value":"pub fn axis_chunks_iter_mut(&mut Self, Axis, usize)\n-> AxisChunksIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping read-write views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530149,"byte_end":530219,"line_start":1314,"line_end":1314,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping read-write views along that axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530224,"byte_end":530286,"line_start":1315,"line_end":1315,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530291,"byte_end":530294,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D>`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530299,"byte_end":530343,"line_start":1317,"line_end":1317,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530348,"byte_end":530351,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530356,"byte_end":530419,"line_start":1319,"line_end":1319,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531134,"byte_end":531146,"line_start":1338,"line_end":1338,"column_start":12,"column_end":24},"name":"exact_chunks","qualname":"<ArrayBase<S, D>>::exact_chunks","value":"pub fn exact_chunks<E>(&Self, E) -> ExactChunks<, A, D> where\nE: IntoDimension<Dim = D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530626,"byte_end":530677,"line_start":1327,"line_end":1327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530682,"byte_end":530685,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530690,"byte_end":530759,"line_start":1329,"line_end":1329,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530764,"byte_end":530836,"line_start":1330,"line_end":1330,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530841,"byte_end":530844,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530849,"byte_end":530923,"line_start":1332,"line_end":1332,"column_start":5,"column_end":79}},{"value":"/ `chunk_size`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530928,"byte_end":530945,"line_start":1333,"line_end":1333,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530950,"byte_end":530953,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":530958,"byte_end":531017,"line_start":1335,"line_end":1335,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531022,"byte_end":531091,"line_start":1336,"line_end":1336,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531096,"byte_end":531122,"line_start":1337,"line_end":1337,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532500,"byte_end":532516,"line_start":1378,"line_end":1378,"column_start":12,"column_end":28},"name":"exact_chunks_mut","qualname":"<ArrayBase<S, D>>::exact_chunks_mut","value":"pub fn exact_chunks_mut<E>(&mut Self, E) -> ExactChunksMut<, A, D> where\nE: IntoDimension<Dim = D>, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531326,"byte_end":531377,"line_start":1346,"line_end":1346,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531382,"byte_end":531385,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531390,"byte_end":531459,"line_start":1348,"line_end":1348,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531464,"byte_end":531536,"line_start":1349,"line_end":1349,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531541,"byte_end":531544,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayViewMut<A, D>` with exactly","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531549,"byte_end":531612,"line_start":1351,"line_end":1351,"column_start":5,"column_end":68}},{"value":"/ the dimension `chunk_size`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531617,"byte_end":531648,"line_start":1352,"line_end":1352,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531653,"byte_end":531656,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531661,"byte_end":531720,"line_start":1354,"line_end":1354,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531725,"byte_end":531794,"line_start":1355,"line_end":1355,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531799,"byte_end":531825,"line_start":1356,"line_end":1356,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531830,"byte_end":531833,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531838,"byte_end":531849,"line_start":1358,"line_end":1358,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531854,"byte_end":531877,"line_start":1359,"line_end":1359,"column_start":5,"column_end":28}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531882,"byte_end":531904,"line_start":1360,"line_end":1360,"column_start":5,"column_end":27}},{"value":"/ let mut a = Array::zeros((6, 7));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531909,"byte_end":531946,"line_start":1361,"line_end":1361,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531951,"byte_end":531954,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ // Fill each 2 × 2 chunk with the index of where it appeared in iteration","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":531959,"byte_end":532037,"line_start":1363,"line_end":1363,"column_start":5,"column_end":82}},{"value":"/ for (i, mut chunk) in a.exact_chunks_mut((2, 2)).into_iter().enumerate() {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532042,"byte_end":532120,"line_start":1364,"line_end":1364,"column_start":5,"column_end":83}},{"value":"/     chunk.fill(i);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532125,"byte_end":532147,"line_start":1365,"line_end":1365,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532152,"byte_end":532157,"line_start":1366,"line_end":1366,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532162,"byte_end":532165,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ // The resulting array is:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532170,"byte_end":532200,"line_start":1368,"line_end":1368,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532205,"byte_end":532220,"line_start":1369,"line_end":1369,"column_start":5,"column_end":20}},{"value":"/   a,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532225,"byte_end":532233,"line_start":1370,"line_end":1370,"column_start":5,"column_end":13}},{"value":"/   arr2(&[[0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532238,"byte_end":532273,"line_start":1371,"line_end":1371,"column_start":5,"column_end":40}},{"value":"/          [0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532278,"byte_end":532313,"line_start":1372,"line_end":1372,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532318,"byte_end":532353,"line_start":1373,"line_end":1373,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532358,"byte_end":532393,"line_start":1374,"line_end":1374,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532398,"byte_end":532433,"line_start":1375,"line_end":1375,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532438,"byte_end":532476,"line_start":1376,"line_end":1376,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532481,"byte_end":532488,"line_start":1377,"line_end":1377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536336,"byte_end":536343,"line_start":1422,"line_end":1422,"column_start":12,"column_end":19},"name":"windows","qualname":"<ArrayBase<S, D>>::windows","value":"pub fn windows<E>(&Self, E) -> Windows<, A, D> where E: IntoDimension<Dim =\nD>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a window producer and iterable.","sig":null,"attributes":[{"value":"/ Return a window producer and iterable.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532713,"byte_end":532755,"line_start":1386,"line_end":1386,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532760,"byte_end":532763,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ The windows are all distinct overlapping views of size `window_size`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532768,"byte_end":532840,"line_start":1388,"line_end":1388,"column_start":5,"column_end":77}},{"value":"/ that fit into the array's shape.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532845,"byte_end":532881,"line_start":1389,"line_end":1389,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532886,"byte_end":532889,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ This produces no elements if the window size is larger than the actual array size along any","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532894,"byte_end":532989,"line_start":1391,"line_end":1391,"column_start":5,"column_end":100}},{"value":"/ axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":532994,"byte_end":533003,"line_start":1392,"line_end":1392,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533008,"byte_end":533011,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ The produced element is an `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533016,"byte_end":533091,"line_start":1394,"line_end":1394,"column_start":5,"column_end":80}},{"value":"/ `window_size`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533096,"byte_end":533114,"line_start":1395,"line_end":1395,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533119,"byte_end":533122,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `window_size` is zero.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533127,"byte_end":533188,"line_start":1397,"line_end":1397,"column_start":5,"column_end":66}},{"value":"/ (**Panics** if `D` is `IxDyn` and `window_size` does not match the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533193,"byte_end":533263,"line_start":1398,"line_end":1398,"column_start":5,"column_end":75}},{"value":"/ number of array axes.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533268,"byte_end":533294,"line_start":1399,"line_end":1399,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533299,"byte_end":533302,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ This is an illustration of the 2×2 windows in a 3×4 array:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533307,"byte_end":533371,"line_start":1401,"line_end":1401,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533376,"byte_end":533379,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533384,"byte_end":533395,"line_start":1403,"line_end":1403,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533400,"byte_end":533430,"line_start":1404,"line_end":1404,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533435,"byte_end":533438,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/      │   ┏━━━━━┳━━━━━┱─────┬─────┐   ┌─────┲━━━━━┳━━━━━┱─────┐   ┌─────┬─────┲━━━━━┳━━━━━┓","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533443,"byte_end":533689,"line_start":1406,"line_end":1406,"column_start":5,"column_end":99}},{"value":"/      ▼   ┃ a₀₀ ┃ a₀₁ ┃     │     │   │     ┃ a₀₁ ┃ a₀₂ ┃     │   │     │     ┃ a₀₂ ┃ a₀₃ ┃","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533694,"byte_end":533844,"line_start":1407,"line_end":1407,"column_start":5,"column_end":99}},{"value":"/ Axis(0)  ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":533849,"byte_end":534093,"line_start":1408,"line_end":1408,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":534098,"byte_end":534246,"line_start":1409,"line_end":1409,"column_start":5,"column_end":99}},{"value":"/          ┡━━━━━╇━━━━━╃─────┼─────┤   ├─────╄━━━━━╇━━━━━╃─────┤   ├─────┼─────╄━━━━━╇━━━━━┩","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":534251,"byte_end":534495,"line_start":1410,"line_end":1410,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":534500,"byte_end":534624,"line_start":1411,"line_end":1411,"column_start":5,"column_end":99}},{"value":"/          └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":534629,"byte_end":534873,"line_start":1412,"line_end":1412,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":534878,"byte_end":534881,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/          ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":534886,"byte_end":535130,"line_start":1414,"line_end":1414,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":535135,"byte_end":535259,"line_start":1415,"line_end":1415,"column_start":5,"column_end":99}},{"value":"/          ┢━━━━━╈━━━━━╅─────┼─────┤   ├─────╆━━━━━╈━━━━━╅─────┤   ├─────┼─────╆━━━━━╈━━━━━┪","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":535264,"byte_end":535508,"line_start":1416,"line_end":1416,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":535513,"byte_end":535661,"line_start":1417,"line_end":1417,"column_start":5,"column_end":99}},{"value":"/          ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":535666,"byte_end":535910,"line_start":1418,"line_end":1418,"column_start":5,"column_end":99}},{"value":"/          ┃ a₂₀ ┃ a₂₁ ┃     │     │   │     ┃ a₂₁ ┃ a₂₂ ┃     │   │     │     ┃ a₂₂ ┃ a₂₃ ┃","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":535915,"byte_end":536063,"line_start":1419,"line_end":1419,"column_start":5,"column_end":99}},{"value":"/          ┗━━━━━┻━━━━━┹─────┴─────┘   └─────┺━━━━━┻━━━━━┹─────┘   └─────┴─────┺━━━━━┻━━━━━┛","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536068,"byte_end":536312,"line_start":1420,"line_end":1420,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536317,"byte_end":536324,"line_start":1421,"line_end":1421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537407,"byte_end":537419,"line_start":1451,"line_end":1451,"column_start":12,"column_end":24},"name":"axis_windows","qualname":"<ArrayBase<S, D>>::axis_windows","value":"pub fn axis_windows(&Self, Axis, usize) -> Windows<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Returns a producer which traverses over all windows of a given length along an axis.","sig":null,"attributes":[{"value":"/ Returns a producer which traverses over all windows of a given length along an axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536517,"byte_end":536605,"line_start":1430,"line_end":1430,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536610,"byte_end":536613,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ The windows are all distinct, possibly-overlapping views. The shape of each window","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536618,"byte_end":536704,"line_start":1432,"line_end":1432,"column_start":5,"column_end":91}},{"value":"/ is the shape of `self`, with the length of `axis` replaced with `window_size`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536709,"byte_end":536791,"line_start":1433,"line_end":1433,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536796,"byte_end":536799,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out-of-bounds or if `window_size` is zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536804,"byte_end":536874,"line_start":1435,"line_end":1435,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536879,"byte_end":536882,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536887,"byte_end":536894,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array3, Axis, s};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536899,"byte_end":536934,"line_start":1438,"line_end":1438,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536939,"byte_end":536942,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ let arr = Array3::from_shape_fn([4, 5, 2], |(i, j, k)| i * 100 + j * 10 + k);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":536947,"byte_end":537028,"line_start":1440,"line_end":1440,"column_start":5,"column_end":86}},{"value":"/ let correct = vec![","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537033,"byte_end":537056,"line_start":1441,"line_end":1441,"column_start":5,"column_end":28}},{"value":"/     arr.slice(s![.., 0..3, ..]),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537061,"byte_end":537097,"line_start":1442,"line_end":1442,"column_start":5,"column_end":41}},{"value":"/     arr.slice(s![.., 1..4, ..]),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537102,"byte_end":537138,"line_start":1443,"line_end":1443,"column_start":5,"column_end":41}},{"value":"/     arr.slice(s![.., 2..5, ..]),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537143,"byte_end":537179,"line_start":1444,"line_end":1444,"column_start":5,"column_end":41}},{"value":"/ ];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537184,"byte_end":537190,"line_start":1445,"line_end":1445,"column_start":5,"column_end":11}},{"value":"/ for (window, correct) in arr.axis_windows(Axis(1), 3).into_iter().zip(&correct) {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537195,"byte_end":537280,"line_start":1446,"line_end":1446,"column_start":5,"column_end":90}},{"value":"/     assert_eq!(window, correct);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537285,"byte_end":537321,"line_start":1447,"line_end":1447,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(window.shape(), &[4, 3, 2]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537326,"byte_end":537373,"line_start":1448,"line_end":1448,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537378,"byte_end":537383,"line_start":1449,"line_end":1449,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":537388,"byte_end":537395,"line_start":1450,"line_end":1450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":538460,"byte_end":538464,"line_start":1486,"line_end":1486,"column_start":12,"column_end":16},"name":"diag","qualname":"<ArrayBase<S, D>>::diag","value":"pub fn diag(&Self) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of the diagonal elements of the array.","sig":null,"attributes":[{"value":"/ Return a view of the diagonal elements of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":538248,"byte_end":538304,"line_start":1482,"line_end":1482,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":538309,"byte_end":538312,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ The diagonal is simply the sequence indexed by *(0, 0, .., 0)*,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":538317,"byte_end":538384,"line_start":1484,"line_end":1484,"column_start":5,"column_end":72}},{"value":"/ *(1, 1, ..., 1)* etc as long as all axes have elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":538389,"byte_end":538448,"line_start":1485,"line_end":1485,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":538650,"byte_end":538658,"line_start":1494,"line_end":1494,"column_start":12,"column_end":20},"name":"diag_mut","qualname":"<ArrayBase<S, D>>::diag_mut","value":"pub fn diag_mut(&mut Self) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view over the diagonal elements of the array.\n","sig":null,"attributes":[{"value":"/ Return a read-write view over the diagonal elements of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":538569,"byte_end":538638,"line_start":1493,"line_end":1493,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":538840,"byte_end":538849,"line_start":1502,"line_end":1502,"column_start":12,"column_end":21},"name":"into_diag","qualname":"<ArrayBase<S, D>>::into_diag","value":"pub fn into_diag(Self) -> ArrayBase<S, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" Return the diagonal as a one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the diagonal as a one-dimensional array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":538777,"byte_end":538828,"line_start":1501,"line_end":1501,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540117,"byte_end":540135,"line_start":1541,"line_end":1541,"column_start":12,"column_end":30},"name":"is_standard_layout","qualname":"<ArrayBase<S, D>>::is_standard_layout","value":"pub fn is_standard_layout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the array data is laid out in contiguous “C order” in\n memory (where the last index is the most rapidly varying).","sig":null,"attributes":[{"value":"/ Return `true` if the array data is laid out in contiguous “C order” in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":539829,"byte_end":539907,"line_start":1536,"line_end":1536,"column_start":5,"column_end":79}},{"value":"/ memory (where the last index is the most rapidly varying).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":539912,"byte_end":539974,"line_start":1537,"line_end":1537,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":539979,"byte_end":539982,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ Return `false` otherwise, i.e. the array is possibly not","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":539987,"byte_end":540047,"line_start":1539,"line_end":1539,"column_start":5,"column_end":65}},{"value":"/ contiguous in memory, it has custom strides, etc.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540052,"byte_end":540105,"line_start":1540,"line_end":1540,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":541233,"byte_end":541251,"line_start":1572,"line_end":1572,"column_start":12,"column_end":30},"name":"as_standard_layout","qualname":"<ArrayBase<S, D>>::as_standard_layout","value":"pub fn as_standard_layout(&Self) -> CowArray<, A, D> where S: Data<Elem = A>,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Return a standard-layout array containing the data, cloning if\n necessary.","sig":null,"attributes":[{"value":"/ Return a standard-layout array containing the data, cloning if","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540388,"byte_end":540454,"line_start":1550,"line_end":1550,"column_start":5,"column_end":71}},{"value":"/ necessary.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540459,"byte_end":540473,"line_start":1551,"line_end":1551,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540478,"byte_end":540481,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ If `self` is in standard layout, a COW view of the data is returned","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540486,"byte_end":540557,"line_start":1553,"line_end":1553,"column_start":5,"column_end":76}},{"value":"/ without cloning. Otherwise, the data is cloned, and the returned array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540562,"byte_end":540636,"line_start":1554,"line_end":1554,"column_start":5,"column_end":79}},{"value":"/ owns the cloned data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540641,"byte_end":540666,"line_start":1555,"line_end":1555,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540671,"byte_end":540674,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540679,"byte_end":540686,"line_start":1557,"line_end":1557,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540691,"byte_end":540715,"line_start":1558,"line_end":1558,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540720,"byte_end":540723,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ let standard = Array2::<f64>::zeros((3, 4));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540728,"byte_end":540776,"line_start":1560,"line_end":1560,"column_start":5,"column_end":53}},{"value":"/ assert!(standard.is_standard_layout());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540781,"byte_end":540824,"line_start":1561,"line_end":1561,"column_start":5,"column_end":48}},{"value":"/ let cow_view = standard.as_standard_layout();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540829,"byte_end":540878,"line_start":1562,"line_end":1562,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_view.is_view());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540883,"byte_end":540915,"line_start":1563,"line_end":1563,"column_start":5,"column_end":37}},{"value":"/ assert!(cow_view.is_standard_layout());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540920,"byte_end":540963,"line_start":1564,"line_end":1564,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540968,"byte_end":540971,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ let fortran = standard.reversed_axes();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":540976,"byte_end":541019,"line_start":1566,"line_end":1566,"column_start":5,"column_end":48}},{"value":"/ assert!(!fortran.is_standard_layout());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":541024,"byte_end":541067,"line_start":1567,"line_end":1567,"column_start":5,"column_end":48}},{"value":"/ let cow_owned = fortran.as_standard_layout();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":541072,"byte_end":541121,"line_start":1568,"line_end":1568,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_owned.is_owned());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":541126,"byte_end":541160,"line_start":1569,"line_end":1569,"column_start":5,"column_end":39}},{"value":"/ assert!(cow_owned.is_standard_layout());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":541165,"byte_end":541209,"line_start":1570,"line_end":1570,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":541214,"byte_end":541221,"line_start":1571,"line_end":1571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542274,"byte_end":542280,"line_start":1602,"line_end":1602,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ArrayBase<S, D>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const A","parent":null,"children":[],"decl_id":null,"docs":" Return a pointer to the first element in the array.","sig":null,"attributes":[{"value":"/ Return a pointer to the first element in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":541881,"byte_end":541936,"line_start":1592,"line_end":1592,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":541941,"byte_end":541944,"line_start":1593,"line_end":1593,"column_start":5,"column_end":8}},{"value":"/ Raw access to array elements needs to follow the strided indexing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":541949,"byte_end":542018,"line_start":1594,"line_end":1594,"column_start":5,"column_end":74}},{"value":"/ scheme: an element at multi-index *I* in an array with strides *S* is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542023,"byte_end":542096,"line_start":1595,"line_end":1595,"column_start":5,"column_end":78}},{"value":"/ located at offset","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542101,"byte_end":542122,"line_start":1596,"line_end":1596,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542127,"byte_end":542130,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ *Σ<sub>0 ≤ k < d</sub> I<sub>k</sub> × S<sub>k</sub>*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542135,"byte_end":542196,"line_start":1598,"line_end":1598,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542201,"byte_end":542204,"line_start":1599,"line_end":1599,"column_start":5,"column_end":8}},{"value":"/ where *d* is `self.ndim()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542209,"byte_end":542240,"line_start":1600,"line_end":1600,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542245,"byte_end":542262,"line_start":1601,"line_end":1601,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542821,"byte_end":542831,"line_start":1617,"line_end":1617,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<ArrayBase<S, D>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut A where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable pointer to the first element in the array.","sig":null,"attributes":[{"value":"/ Return a mutable pointer to the first element in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542351,"byte_end":542414,"line_start":1606,"line_end":1606,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542419,"byte_end":542422,"line_start":1607,"line_end":1607,"column_start":5,"column_end":8}},{"value":"/ This method attempts to unshare the data. If `S: DataMut`, then the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542427,"byte_end":542498,"line_start":1608,"line_end":1608,"column_start":5,"column_end":76}},{"value":"/ data is guaranteed to be uniquely held on return.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542503,"byte_end":542556,"line_start":1609,"line_end":1609,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542561,"byte_end":542564,"line_start":1610,"line_end":1610,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542569,"byte_end":542582,"line_start":1611,"line_end":1611,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542587,"byte_end":542590,"line_start":1612,"line_end":1612,"column_start":5,"column_end":8}},{"value":"/ When accessing elements through this pointer, make sure to use strides","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542595,"byte_end":542669,"line_start":1613,"line_end":1613,"column_start":5,"column_end":79}},{"value":"/ obtained *after* calling this method, since the process of unsharing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542674,"byte_end":542746,"line_start":1614,"line_end":1614,"column_start":5,"column_end":77}},{"value":"/ the data may change the strides.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542751,"byte_end":542787,"line_start":1615,"line_end":1615,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542792,"byte_end":542809,"line_start":1616,"line_end":1616,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":543040,"byte_end":543048,"line_start":1627,"line_end":1627,"column_start":12,"column_end":20},"name":"raw_view","qualname":"<ArrayBase<S, D>>::raw_view","value":"pub fn raw_view(&Self) -> RawArrayView<A, D>","parent":null,"children":[],"decl_id":null,"docs":" Return a raw view of the array.\n","sig":null,"attributes":[{"value":"/ Return a raw view of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":542979,"byte_end":543014,"line_start":1625,"line_end":1625,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":543019,"byte_end":543028,"line_start":1626,"line_end":1626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":543389,"byte_end":543401,"line_start":1636,"line_end":1636,"column_start":12,"column_end":24},"name":"raw_view_mut","qualname":"<ArrayBase<S, D>>::raw_view_mut","value":"pub fn raw_view_mut(&mut Self) -> RawArrayViewMut<A, D> where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a raw mutable view of the array.","sig":null,"attributes":[{"value":"/ Return a raw mutable view of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":543178,"byte_end":543221,"line_start":1631,"line_end":1631,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":543226,"byte_end":543229,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ This method attempts to unshare the data. If `S: DataMut`, then the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":543234,"byte_end":543305,"line_start":1633,"line_end":1633,"column_start":5,"column_end":76}},{"value":"/ data is guaranteed to be uniquely held on return.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":543310,"byte_end":543363,"line_start":1634,"line_end":1634,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":543368,"byte_end":543377,"line_start":1635,"line_end":1635,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":544283,"byte_end":544291,"line_start":1660,"line_end":1660,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ArrayBase<S, D>>::as_slice","value":"pub fn as_slice(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":543998,"byte_end":544082,"line_start":1655,"line_end":1655,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":544087,"byte_end":544115,"line_start":1656,"line_end":1656,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":544120,"byte_end":544123,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the element order in the slice","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":544128,"byte_end":544203,"line_start":1658,"line_end":1658,"column_start":5,"column_end":80}},{"value":"/ corresponds to the logical order of the array’s elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":544208,"byte_end":544271,"line_start":1659,"line_end":1659,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":544653,"byte_end":544665,"line_start":1673,"line_end":1673,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<ArrayBase<S, D>>::as_slice_mut","value":"pub fn as_slice_mut(&mut Self) -> Option<&mut [A]> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":544524,"byte_end":544608,"line_start":1671,"line_end":1671,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":544613,"byte_end":544641,"line_start":1672,"line_end":1672,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545193,"byte_end":545214,"line_start":1690,"line_end":1690,"column_start":12,"column_end":33},"name":"as_slice_memory_order","qualname":"<ArrayBase<S, D>>::as_slice_memory_order","value":"pub fn as_slice_memory_order(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":544947,"byte_end":545008,"line_start":1685,"line_end":1685,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545013,"byte_end":545041,"line_start":1686,"line_end":1686,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545046,"byte_end":545049,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the elements in the slice","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545054,"byte_end":545124,"line_start":1688,"line_end":1688,"column_start":5,"column_end":75}},{"value":"/ have whatever order the elements have in memory.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545129,"byte_end":545181,"line_start":1689,"line_end":1689,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545917,"byte_end":545942,"line_start":1713,"line_end":1713,"column_start":12,"column_end":37},"name":"as_slice_memory_order_mut","qualname":"<ArrayBase<S, D>>::as_slice_memory_order_mut","value":"pub fn as_slice_memory_order_mut(&mut Self) -> Option<&mut [A]> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545633,"byte_end":545694,"line_start":1707,"line_end":1707,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545699,"byte_end":545727,"line_start":1708,"line_end":1708,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545732,"byte_end":545735,"line_start":1709,"line_end":1709,"column_start":5,"column_end":8}},{"value":"/ In the contiguous case, in order to return a unique reference, this","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545740,"byte_end":545811,"line_start":1710,"line_end":1710,"column_start":5,"column_end":76}},{"value":"/ method unshares the data if necessary, but it preserves the existing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545816,"byte_end":545888,"line_start":1711,"line_end":1711,"column_start":5,"column_end":77}},{"value":"/ strides.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":545893,"byte_end":545905,"line_start":1712,"line_end":1712,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548287,"byte_end":548295,"line_start":1784,"line_end":1784,"column_start":12,"column_end":20},"name":"to_shape","qualname":"<ArrayBase<S, D>>::to_shape","value":"pub fn to_shape<E>(&Self, E) -> Result<CowArray<, A, E::Dim>, ShapeError>\nwhere E: ShapeArg, A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Transform the array into `new_shape`; any shape with the same number of elements is\n accepted.","sig":null,"attributes":[{"value":"/ Transform the array into `new_shape`; any shape with the same number of elements is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":546716,"byte_end":546803,"line_start":1740,"line_end":1740,"column_start":5,"column_end":92}},{"value":"/ accepted.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":546808,"byte_end":546821,"line_start":1741,"line_end":1741,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":546826,"byte_end":546829,"line_start":1742,"line_end":1742,"column_start":5,"column_end":8}},{"value":"/ `order` specifies the *logical* order in which the array is to be read and reshaped.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":546834,"byte_end":546922,"line_start":1743,"line_end":1743,"column_start":5,"column_end":93}},{"value":"/ The array is returned as a `CowArray`; a view if possible, otherwise an owned array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":546927,"byte_end":547015,"line_start":1744,"line_end":1744,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547020,"byte_end":547023,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ For example, when starting from the one-dimensional sequence 1 2 3 4 5 6, it would be","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547028,"byte_end":547117,"line_start":1746,"line_end":1746,"column_start":5,"column_end":94}},{"value":"/ understood as a 2 x 3 array in row major (\"C\") order this way:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547122,"byte_end":547188,"line_start":1747,"line_end":1747,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547193,"byte_end":547196,"line_start":1748,"line_end":1748,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547201,"byte_end":547212,"line_start":1749,"line_end":1749,"column_start":5,"column_end":16}},{"value":"/ 1 2 3","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547217,"byte_end":547226,"line_start":1750,"line_end":1750,"column_start":5,"column_end":14}},{"value":"/ 4 5 6","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547231,"byte_end":547240,"line_start":1751,"line_end":1751,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547245,"byte_end":547252,"line_start":1752,"line_end":1752,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547257,"byte_end":547260,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ and as 2 x 3 in column major (\"F\") order this way:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547265,"byte_end":547319,"line_start":1754,"line_end":1754,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547324,"byte_end":547327,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547332,"byte_end":547343,"line_start":1756,"line_end":1756,"column_start":5,"column_end":16}},{"value":"/ 1 3 5","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547348,"byte_end":547357,"line_start":1757,"line_end":1757,"column_start":5,"column_end":14}},{"value":"/ 2 4 6","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547362,"byte_end":547371,"line_start":1758,"line_end":1758,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547376,"byte_end":547383,"line_start":1759,"line_end":1759,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547388,"byte_end":547391,"line_start":1760,"line_end":1760,"column_start":5,"column_end":8}},{"value":"/ This example should show that any time we \"reflow\" the elements in the array to a different","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547396,"byte_end":547491,"line_start":1761,"line_end":1761,"column_start":5,"column_end":100}},{"value":"/ number of rows and columns (or more axes if applicable), it is important to pick an index","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547496,"byte_end":547589,"line_start":1762,"line_end":1762,"column_start":5,"column_end":98}},{"value":"/ ordering, and that's the reason for the function parameter for `order`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547594,"byte_end":547669,"line_start":1763,"line_end":1763,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547674,"byte_end":547677,"line_start":1764,"line_end":1764,"column_start":5,"column_end":8}},{"value":"/ **Errors** if the new shape doesn't have the same number of elements as the array's current","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547682,"byte_end":547777,"line_start":1765,"line_end":1765,"column_start":5,"column_end":100}},{"value":"/ shape.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547782,"byte_end":547792,"line_start":1766,"line_end":1766,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547797,"byte_end":547800,"line_start":1767,"line_end":1767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547805,"byte_end":547812,"line_start":1768,"line_end":1768,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547817,"byte_end":547840,"line_start":1769,"line_end":1769,"column_start":5,"column_end":28}},{"value":"/ use ndarray::Order;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547845,"byte_end":547868,"line_start":1770,"line_end":1770,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547873,"byte_end":547876,"line_start":1771,"line_end":1771,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547881,"byte_end":547893,"line_start":1772,"line_end":1772,"column_start":5,"column_end":17}},{"value":"/     array![1., 2., 3., 4., 5., 6.].to_shape(((2, 3), Order::RowMajor)).unwrap()","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547898,"byte_end":547981,"line_start":1773,"line_end":1773,"column_start":5,"column_end":88}},{"value":"/     == array![[1., 2., 3.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":547986,"byte_end":548017,"line_start":1774,"line_end":1774,"column_start":5,"column_end":36}},{"value":"/               [4., 5., 6.]]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548022,"byte_end":548053,"line_start":1775,"line_end":1775,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548058,"byte_end":548064,"line_start":1776,"line_end":1776,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548069,"byte_end":548072,"line_start":1777,"line_end":1777,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548077,"byte_end":548089,"line_start":1778,"line_end":1778,"column_start":5,"column_end":17}},{"value":"/     array![1., 2., 3., 4., 5., 6.].to_shape(((2, 3), Order::ColumnMajor)).unwrap()","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548094,"byte_end":548180,"line_start":1779,"line_end":1779,"column_start":5,"column_end":91}},{"value":"/     == array![[1., 3., 5.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548185,"byte_end":548216,"line_start":1780,"line_end":1780,"column_start":5,"column_end":36}},{"value":"/               [2., 4., 6.]]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548221,"byte_end":548252,"line_start":1781,"line_end":1781,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548257,"byte_end":548263,"line_start":1782,"line_end":1782,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":548268,"byte_end":548275,"line_start":1783,"line_end":1783,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3447},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550690,"byte_end":550700,"line_start":1851,"line_end":1851,"column_start":12,"column_end":22},"name":"into_shape","qualname":"<ArrayBase<S, D>>::into_shape","value":"pub fn into_shape<E>(Self, E) -> Result<ArrayBase<S, E::Dim>, ShapeError>\nwhere E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Transform the array into `shape`; any shape with the same number of\n elements is accepted, but the source array or view must be in standard\n or column-major (Fortran) layout.","sig":null,"attributes":[{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550094,"byte_end":550165,"line_start":1835,"line_end":1835,"column_start":5,"column_end":76}},{"value":"/ elements is accepted, but the source array or view must be in standard","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550170,"byte_end":550244,"line_start":1836,"line_end":1836,"column_start":5,"column_end":79}},{"value":"/ or column-major (Fortran) layout.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550249,"byte_end":550286,"line_start":1837,"line_end":1837,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550291,"byte_end":550294,"line_start":1838,"line_end":1838,"column_start":5,"column_end":8}},{"value":"/ **Errors** if the shapes don't have the same number of elements.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550299,"byte_end":550371,"line_start":1839,"line_end":1839,"column_start":5,"column_end":77}},{"value":"/ **Errors** if the input array is not c- or f-contiguous.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550376,"byte_end":550436,"line_start":1840,"line_end":1840,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550441,"byte_end":550444,"line_start":1841,"line_end":1841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550449,"byte_end":550456,"line_start":1842,"line_end":1842,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550461,"byte_end":550495,"line_start":1843,"line_end":1843,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550500,"byte_end":550503,"line_start":1844,"line_end":1844,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550508,"byte_end":550520,"line_start":1845,"line_end":1845,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 2., 3., 4.]).into_shape((2, 2)).unwrap()","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550525,"byte_end":550586,"line_start":1846,"line_end":1846,"column_start":5,"column_end":66}},{"value":"/     == aview2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550591,"byte_end":550620,"line_start":1847,"line_end":1847,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550625,"byte_end":550655,"line_start":1848,"line_end":1848,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550660,"byte_end":550666,"line_start":1849,"line_end":1849,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":550671,"byte_end":550678,"line_start":1850,"line_end":1850,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":552213,"byte_end":552220,"line_start":1892,"line_end":1892,"column_start":12,"column_end":19},"name":"reshape","qualname":"<ArrayBase<S, D>>::reshape","value":"pub fn reshape<E>(&Self, E) -> ArrayBase<S, E::Dim> where S: DataShared +\nDataOwned, A: Clone, E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for\n other arrays and array views.*","sig":null,"attributes":[{"value":"/ *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551580,"byte_end":551646,"line_start":1872,"line_end":1872,"column_start":5,"column_end":71}},{"value":"/ other arrays and array views.*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551651,"byte_end":551685,"line_start":1873,"line_end":1873,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551690,"byte_end":551693,"line_start":1874,"line_end":1874,"column_start":5,"column_end":8}},{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551698,"byte_end":551769,"line_start":1875,"line_end":1875,"column_start":5,"column_end":76}},{"value":"/ elements is accepted.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551774,"byte_end":551799,"line_start":1876,"line_end":1876,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551804,"byte_end":551807,"line_start":1877,"line_end":1877,"column_start":5,"column_end":8}},{"value":"/ May clone all elements if needed to arrange elements in standard","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551812,"byte_end":551880,"line_start":1878,"line_end":1878,"column_start":5,"column_end":73}},{"value":"/ layout (and break sharing).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551885,"byte_end":551916,"line_start":1879,"line_end":1879,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551921,"byte_end":551924,"line_start":1880,"line_end":1880,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551929,"byte_end":551971,"line_start":1881,"line_end":1881,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551976,"byte_end":551979,"line_start":1882,"line_end":1882,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551984,"byte_end":551991,"line_start":1883,"line_end":1883,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{rcarr1, rcarr2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":551996,"byte_end":552030,"line_start":1884,"line_end":1884,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":552035,"byte_end":552038,"line_start":1885,"line_end":1885,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":552043,"byte_end":552055,"line_start":1886,"line_end":1886,"column_start":5,"column_end":17}},{"value":"/     rcarr1(&[1., 2., 3., 4.]).reshape((2, 2))","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":552060,"byte_end":552109,"line_start":1887,"line_end":1887,"column_start":5,"column_end":54}},{"value":"/     == rcarr2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":552114,"byte_end":552143,"line_start":1888,"line_end":1888,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":552148,"byte_end":552178,"line_start":1889,"line_end":1889,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":552183,"byte_end":552189,"line_start":1890,"line_end":1890,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":552194,"byte_end":552201,"line_start":1891,"line_end":1891,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553480,"byte_end":553488,"line_start":1928,"line_end":1928,"column_start":12,"column_end":20},"name":"into_dyn","qualname":"<ArrayBase<S, D>>::into_dyn","value":"pub fn into_dyn(Self) -> ArrayBase<S, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" Convert any array or array view to a dynamic dimensional array or\n array view (respectively).","sig":null,"attributes":[{"value":"/ Convert any array or array view to a dynamic dimensional array or","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553178,"byte_end":553247,"line_start":1919,"line_end":1919,"column_start":5,"column_end":74}},{"value":"/ array view (respectively).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553252,"byte_end":553282,"line_start":1920,"line_end":1920,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553287,"byte_end":553290,"line_start":1921,"line_end":1921,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553295,"byte_end":553302,"line_start":1922,"line_end":1922,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayD};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553307,"byte_end":553339,"line_start":1923,"line_end":1923,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553344,"byte_end":553347,"line_start":1924,"line_end":1924,"column_start":5,"column_end":8}},{"value":"/ let array: ArrayD<i32> = arr2(&[[1, 2],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553352,"byte_end":553395,"line_start":1925,"line_end":1925,"column_start":5,"column_end":48}},{"value":"/                                 [3, 4]]).into_dyn();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553400,"byte_end":553456,"line_start":1926,"line_end":1926,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553461,"byte_end":553468,"line_start":1927,"line_end":1927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3452},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554398,"byte_end":554417,"line_start":1952,"line_end":1952,"column_start":12,"column_end":31},"name":"into_dimensionality","qualname":"<ArrayBase<S, D>>::into_dimensionality","value":"pub fn into_dimensionality<D2>(Self) -> Result<ArrayBase<S, D2>, ShapeError>\nwhere D2: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Convert an array or array view to another with the same type, but different dimensionality\n type. Errors if the dimensions don't agree (the number of axes must match).","sig":null,"attributes":[{"value":"/ Convert an array or array view to another with the same type, but different dimensionality","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553740,"byte_end":553834,"line_start":1936,"line_end":1936,"column_start":5,"column_end":99}},{"value":"/ type. Errors if the dimensions don't agree (the number of axes must match).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553839,"byte_end":553918,"line_start":1937,"line_end":1937,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553923,"byte_end":553926,"line_start":1938,"line_end":1938,"column_start":5,"column_end":8}},{"value":"/ Note that conversion to a dynamic dimensional array will never fail (and is equivalent to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":553931,"byte_end":554024,"line_start":1939,"line_end":1939,"column_start":5,"column_end":98}},{"value":"/ the `into_dyn` method).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554029,"byte_end":554056,"line_start":1940,"line_end":1940,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554061,"byte_end":554064,"line_start":1941,"line_end":1941,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554069,"byte_end":554076,"line_start":1942,"line_end":1942,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{ArrayD, Ix2, IxDyn};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554081,"byte_end":554119,"line_start":1943,"line_end":1943,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554124,"byte_end":554127,"line_start":1944,"line_end":1944,"column_start":5,"column_end":8}},{"value":"/ // Create a dynamic dimensionality array and convert it to an Array2","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554132,"byte_end":554204,"line_start":1945,"line_end":1945,"column_start":5,"column_end":77}},{"value":"/ // (Ix2 dimension type).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554209,"byte_end":554237,"line_start":1946,"line_end":1946,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554242,"byte_end":554245,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ let array = ArrayD::<f64>::zeros(IxDyn(&[10, 10]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554250,"byte_end":554305,"line_start":1948,"line_end":1948,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554310,"byte_end":554313,"line_start":1949,"line_end":1949,"column_start":5,"column_end":8}},{"value":"/ assert!(array.into_dimensionality::<Ix2>().is_ok());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554318,"byte_end":554374,"line_start":1950,"line_end":1950,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":554379,"byte_end":554386,"line_start":1951,"line_end":1951,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556452,"byte_end":556461,"line_start":2004,"line_end":2004,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<ArrayBase<S, D>>::broadcast","value":"pub fn broadcast<E>(&Self, E) -> Option<ArrayView<, A, E::Dim>> where\nE: IntoDimension, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Act like a larger size and/or shape array by *broadcasting*\n into a larger shape, if possible.","sig":null,"attributes":[{"value":"/ Act like a larger size and/or shape array by *broadcasting*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555398,"byte_end":555461,"line_start":1975,"line_end":1975,"column_start":5,"column_end":68}},{"value":"/ into a larger shape, if possible.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555466,"byte_end":555503,"line_start":1976,"line_end":1976,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555508,"byte_end":555511,"line_start":1977,"line_end":1977,"column_start":5,"column_end":8}},{"value":"/ Return `None` if shapes can not be broadcast together.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555516,"byte_end":555574,"line_start":1978,"line_end":1978,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555579,"byte_end":555582,"line_start":1979,"line_end":1979,"column_start":5,"column_end":8}},{"value":"/ ***Background***","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555587,"byte_end":555607,"line_start":1980,"line_end":1980,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555612,"byte_end":555615,"line_start":1981,"line_end":1981,"column_start":5,"column_end":8}},{"value":"/  * Two axes are compatible if they are equal, or one of them is 1.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555620,"byte_end":555690,"line_start":1982,"line_end":1982,"column_start":5,"column_end":75}},{"value":"/  * In this instance, only the axes of the smaller side (self) can be 1.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555695,"byte_end":555770,"line_start":1983,"line_end":1983,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555775,"byte_end":555778,"line_start":1984,"line_end":1984,"column_start":5,"column_end":8}},{"value":"/ Compare axes beginning with the *last* axis of each shape.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555783,"byte_end":555845,"line_start":1985,"line_end":1985,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555850,"byte_end":555853,"line_start":1986,"line_end":1986,"column_start":5,"column_end":8}},{"value":"/ For example (1, 2, 4) can be broadcast into (7, 6, 2, 4)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555858,"byte_end":555918,"line_start":1987,"line_end":1987,"column_start":5,"column_end":65}},{"value":"/ because its axes are either equal or 1 (or missing);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555923,"byte_end":555979,"line_start":1988,"line_end":1988,"column_start":5,"column_end":61}},{"value":"/ while (2, 2) can *not* be broadcast into (2, 4).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":555984,"byte_end":556036,"line_start":1989,"line_end":1989,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556041,"byte_end":556044,"line_start":1990,"line_end":1990,"column_start":5,"column_end":8}},{"value":"/ The implementation creates a view with strides set to zero for the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556049,"byte_end":556119,"line_start":1991,"line_end":1991,"column_start":5,"column_end":75}},{"value":"/ axes that are to be repeated.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556124,"byte_end":556157,"line_start":1992,"line_end":1992,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556162,"byte_end":556165,"line_start":1993,"line_end":1993,"column_start":5,"column_end":8}},{"value":"/ The broadcasting documentation for Numpy has more information.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556170,"byte_end":556236,"line_start":1994,"line_end":1994,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556241,"byte_end":556244,"line_start":1995,"line_end":1995,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556249,"byte_end":556256,"line_start":1996,"line_end":1996,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556261,"byte_end":556295,"line_start":1997,"line_end":1997,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556300,"byte_end":556303,"line_start":1998,"line_end":1998,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556308,"byte_end":556320,"line_start":1999,"line_end":1999,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 0.]).broadcast((10, 2)).unwrap()","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556325,"byte_end":556378,"line_start":2000,"line_end":2000,"column_start":5,"column_end":58}},{"value":"/     == aview2(&[[1., 0.]; 10])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556383,"byte_end":556417,"line_start":2001,"line_end":2001,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556422,"byte_end":556428,"line_start":2002,"line_end":2002,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":556433,"byte_end":556440,"line_start":2003,"line_end":2003,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560744,"byte_end":560753,"line_start":2116,"line_end":2116,"column_start":12,"column_end":21},"name":"swap_axes","qualname":"<ArrayBase<S, D>>::swap_axes","value":"pub fn swap_axes(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swap axes `ax` and `bx`.","sig":null,"attributes":[{"value":"/ Swap axes `ax` and `bx`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560331,"byte_end":560359,"line_start":2100,"line_end":2100,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560364,"byte_end":560367,"line_start":2101,"line_end":2101,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560372,"byte_end":560445,"line_start":2102,"line_end":2102,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560450,"byte_end":560466,"line_start":2103,"line_end":2103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560471,"byte_end":560474,"line_start":2104,"line_end":2104,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axes are out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560479,"byte_end":560524,"line_start":2105,"line_end":2105,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560529,"byte_end":560532,"line_start":2106,"line_end":2106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560537,"byte_end":560544,"line_start":2107,"line_end":2107,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560549,"byte_end":560571,"line_start":2108,"line_end":2108,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560576,"byte_end":560579,"line_start":2109,"line_end":2109,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2., 3.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560584,"byte_end":560622,"line_start":2110,"line_end":2110,"column_start":5,"column_end":43}},{"value":"/ a.swap_axes(0, 1);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560627,"byte_end":560649,"line_start":2111,"line_end":2111,"column_start":5,"column_end":27}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560654,"byte_end":560666,"line_start":2112,"line_end":2112,"column_start":5,"column_end":17}},{"value":"/     a == arr2(&[[1.], [2.], [3.]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560671,"byte_end":560709,"line_start":2113,"line_end":2113,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560714,"byte_end":560720,"line_start":2114,"line_end":2114,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560725,"byte_end":560732,"line_start":2115,"line_end":2115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561637,"byte_end":561650,"line_start":2143,"line_end":2143,"column_start":12,"column_end":25},"name":"permuted_axes","qualname":"<ArrayBase<S, D>>::permuted_axes","value":"pub fn permuted_axes<T>(Self, T) -> ArrayBase<S, D> where T: IntoDimension<Dim\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Permute the axes.","sig":null,"attributes":[{"value":"/ Permute the axes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560890,"byte_end":560911,"line_start":2121,"line_end":2121,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560916,"byte_end":560919,"line_start":2122,"line_end":2122,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":560924,"byte_end":560997,"line_start":2123,"line_end":2123,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561002,"byte_end":561018,"line_start":2124,"line_end":2124,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561023,"byte_end":561026,"line_start":2125,"line_end":2125,"column_start":5,"column_end":8}},{"value":"/ *i* in the *j*-th place in the axes sequence means `self`'s *i*-th axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561031,"byte_end":561106,"line_start":2126,"line_end":2126,"column_start":5,"column_end":80}},{"value":"/ becomes `self.permuted_axes()`'s *j*-th axis","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561111,"byte_end":561159,"line_start":2127,"line_end":2127,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561164,"byte_end":561167,"line_start":2128,"line_end":2128,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the axes are out of bounds, if an axis is missing,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561172,"byte_end":561247,"line_start":2129,"line_end":2129,"column_start":5,"column_end":80}},{"value":"/ or if an axis is repeated more than once.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561252,"byte_end":561297,"line_start":2130,"line_end":2130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561302,"byte_end":561305,"line_start":2131,"line_end":2131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561310,"byte_end":561324,"line_start":2132,"line_end":2132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561329,"byte_end":561332,"line_start":2133,"line_end":2133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561337,"byte_end":561344,"line_start":2134,"line_end":2134,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Array3};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561349,"byte_end":561381,"line_start":2135,"line_end":2135,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561386,"byte_end":561389,"line_start":2136,"line_end":2136,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[0, 1], [2, 3]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561394,"byte_end":561430,"line_start":2137,"line_end":2137,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.view().permuted_axes([1, 0]), a.t());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561435,"byte_end":561489,"line_start":2138,"line_end":2138,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561494,"byte_end":561497,"line_start":2139,"line_end":2139,"column_start":5,"column_end":8}},{"value":"/ let b = Array3::<u8>::zeros((1, 2, 3));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561502,"byte_end":561545,"line_start":2140,"line_end":2140,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(b.permuted_axes([1, 0, 2]).shape(), &[2, 1, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561550,"byte_end":561613,"line_start":2141,"line_end":2141,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":561618,"byte_end":561625,"line_start":2142,"line_end":2142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":562937,"byte_end":562950,"line_start":2177,"line_end":2177,"column_start":12,"column_end":25},"name":"reversed_axes","qualname":"<ArrayBase<S, D>>::reversed_axes","value":"pub fn reversed_axes(Self) -> ArrayBase<S, D>","parent":null,"children":[],"decl_id":null,"docs":" Transpose the array by reversing axes.","sig":null,"attributes":[{"value":"/ Transpose the array by reversing axes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":562758,"byte_end":562800,"line_start":2173,"line_end":2173,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":562805,"byte_end":562808,"line_start":2174,"line_end":2174,"column_start":5,"column_end":8}},{"value":"/ Transposition reverses the order of the axes (dimensions and strides)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":562813,"byte_end":562886,"line_start":2175,"line_end":2175,"column_start":5,"column_end":78}},{"value":"/ while retaining the same data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":562891,"byte_end":562925,"line_start":2176,"line_end":2176,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563304,"byte_end":563305,"line_start":2188,"line_end":2188,"column_start":12,"column_end":13},"name":"t","qualname":"<ArrayBase<S, D>>::t","value":"pub fn t(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a transposed view of the array.","sig":null,"attributes":[{"value":"/ Return a transposed view of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563090,"byte_end":563132,"line_start":2183,"line_end":2183,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563137,"byte_end":563140,"line_start":2184,"line_end":2184,"column_start":5,"column_end":8}},{"value":"/ This is a shorthand for `self.view().reversed_axes()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563145,"byte_end":563203,"line_start":2185,"line_end":2185,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563208,"byte_end":563211,"line_start":2186,"line_end":2186,"column_start":5,"column_end":8}},{"value":"/ See also the more general methods `.reversed_axes()` and `.swap_axes()`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563216,"byte_end":563292,"line_start":2187,"line_end":2187,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563491,"byte_end":563495,"line_start":2196,"line_end":2196,"column_start":12,"column_end":16},"name":"axes","qualname":"<ArrayBase<S, D>>::axes","value":"pub fn axes(&Self) -> Axes<, D>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the length and stride of each axis.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the length and stride of each axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563416,"byte_end":563479,"line_start":2195,"line_end":2195,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563867,"byte_end":563882,"line_start":2209,"line_end":2209,"column_start":12,"column_end":27},"name":"max_stride_axis","qualname":"<ArrayBase<S, D>>::max_stride_axis","value":"pub fn max_stride_axis(&Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return the axis with the greatest stride (by absolute value),\n preferring axes with len > 1.\n","sig":null,"attributes":[{"value":"/ Return the axis with the greatest stride (by absolute value),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563752,"byte_end":563817,"line_start":2207,"line_end":2207,"column_start":5,"column_end":70}},{"value":"/ preferring axes with len > 1.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563822,"byte_end":563855,"line_start":2208,"line_end":2208,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564063,"byte_end":564074,"line_start":2216,"line_end":2216,"column_start":12,"column_end":23},"name":"invert_axis","qualname":"<ArrayBase<S, D>>::invert_axis","value":"pub fn invert_axis(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Reverse the stride of `axis`.","sig":null,"attributes":[{"value":"/ Reverse the stride of `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563959,"byte_end":563992,"line_start":2213,"line_end":2213,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":563997,"byte_end":564000,"line_start":2214,"line_end":2214,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564005,"byte_end":564051,"line_start":2215,"line_end":2215,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565864,"byte_end":565874,"line_start":2262,"line_end":2262,"column_start":12,"column_end":22},"name":"merge_axes","qualname":"<ArrayBase<S, D>>::merge_axes","value":"pub fn merge_axes(&mut Self, Axis, Axis) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If possible, merge in the axis `take` to `into`.","sig":null,"attributes":[{"value":"/ If possible, merge in the axis `take` to `into`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564397,"byte_end":564449,"line_start":2227,"line_end":2227,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564454,"byte_end":564457,"line_start":2228,"line_end":2228,"column_start":5,"column_end":8}},{"value":"/ Returns `true` iff the axes are now merged.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564462,"byte_end":564509,"line_start":2229,"line_end":2229,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564514,"byte_end":564517,"line_start":2230,"line_end":2230,"column_start":5,"column_end":8}},{"value":"/ This method merges the axes if movement along the two original axes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564522,"byte_end":564593,"line_start":2231,"line_end":2231,"column_start":5,"column_end":76}},{"value":"/ (moving fastest along the `into` axis) can be equivalently represented","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564598,"byte_end":564672,"line_start":2232,"line_end":2232,"column_start":5,"column_end":79}},{"value":"/ as movement along one (merged) axis. Merging the axes preserves this","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564677,"byte_end":564749,"line_start":2233,"line_end":2233,"column_start":5,"column_end":77}},{"value":"/ order in the merged axis. If `take` and `into` are the same axis, then","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564754,"byte_end":564828,"line_start":2234,"line_end":2234,"column_start":5,"column_end":79}},{"value":"/ the axis is \"merged\" if its length is ≤ 1.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564833,"byte_end":564881,"line_start":2235,"line_end":2235,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564886,"byte_end":564889,"line_start":2236,"line_end":2236,"column_start":5,"column_end":8}},{"value":"/ If the return value is `true`, then the following hold:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564894,"byte_end":564953,"line_start":2237,"line_end":2237,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564958,"byte_end":564961,"line_start":2238,"line_end":2238,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `into` axis is the product of the original","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":564966,"byte_end":565036,"line_start":2239,"line_end":2239,"column_start":5,"column_end":75}},{"value":"/   lengths of the two axes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565041,"byte_end":565071,"line_start":2240,"line_end":2240,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565076,"byte_end":565079,"line_start":2241,"line_end":2241,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `take` axis is 0 if the product of the original","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565084,"byte_end":565159,"line_start":2242,"line_end":2242,"column_start":5,"column_end":80}},{"value":"/   lengths of the two axes is 0, and 1 otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565164,"byte_end":565216,"line_start":2243,"line_end":2243,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565221,"byte_end":565224,"line_start":2244,"line_end":2244,"column_start":5,"column_end":8}},{"value":"/ If the return value is `false`, then merging is not possible, and the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565229,"byte_end":565302,"line_start":2245,"line_end":2245,"column_start":5,"column_end":78}},{"value":"/ original shape and strides have been preserved.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565307,"byte_end":565358,"line_start":2246,"line_end":2246,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565363,"byte_end":565366,"line_start":2247,"line_end":2247,"column_start":5,"column_end":8}},{"value":"/ Note that the ordering constraint means that if it's possible to merge","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565371,"byte_end":565445,"line_start":2248,"line_end":2248,"column_start":5,"column_end":79}},{"value":"/ `take` into `into`, it's usually not possible to merge `into` into","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565450,"byte_end":565520,"line_start":2249,"line_end":2249,"column_start":5,"column_end":75}},{"value":"/ `take`, and vice versa.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565525,"byte_end":565552,"line_start":2250,"line_end":2250,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565557,"byte_end":565560,"line_start":2251,"line_end":2251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565565,"byte_end":565572,"line_start":2252,"line_end":2252,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565577,"byte_end":565601,"line_start":2253,"line_end":2253,"column_start":5,"column_end":29}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565606,"byte_end":565628,"line_start":2254,"line_end":2254,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565633,"byte_end":565636,"line_start":2255,"line_end":2255,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros((2, 3, 4));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565641,"byte_end":565689,"line_start":2256,"line_end":2256,"column_start":5,"column_end":53}},{"value":"/ assert!(a.merge_axes(Axis(1), Axis(2)));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565694,"byte_end":565738,"line_start":2257,"line_end":2257,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 12]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565743,"byte_end":565782,"line_start":2258,"line_end":2258,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565787,"byte_end":565794,"line_start":2259,"line_end":2259,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565799,"byte_end":565802,"line_start":2260,"line_end":2260,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an axis is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565807,"byte_end":565852,"line_start":2261,"line_end":2261,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566752,"byte_end":566763,"line_start":2287,"line_end":2287,"column_start":12,"column_end":23},"name":"insert_axis","qualname":"<ArrayBase<S, D>>::insert_axis","value":"pub fn insert_axis(Self, Axis) -> ArrayBase<S, D::Larger>","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis at `axis` and return the result.","sig":null,"attributes":[{"value":"/ Insert new array axis at `axis` and return the result.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":565996,"byte_end":566054,"line_start":2266,"line_end":2266,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566059,"byte_end":566062,"line_start":2267,"line_end":2267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566067,"byte_end":566074,"line_start":2268,"line_end":2268,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array3, Axis, arr1, arr2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566079,"byte_end":566123,"line_start":2269,"line_end":2269,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566128,"byte_end":566131,"line_start":2270,"line_end":2270,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a row vector (2-D).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566136,"byte_end":566187,"line_start":2271,"line_end":2271,"column_start":5,"column_end":56}},{"value":"/ let a = arr1(&[1, 2, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566192,"byte_end":566221,"line_start":2272,"line_end":2272,"column_start":5,"column_end":34}},{"value":"/ let row = a.insert_axis(Axis(0));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566226,"byte_end":566263,"line_start":2273,"line_end":2273,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(row, arr2(&[[1, 2, 3]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566268,"byte_end":566308,"line_start":2274,"line_end":2274,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566313,"byte_end":566316,"line_start":2275,"line_end":2275,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a column vector (2-D).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566321,"byte_end":566375,"line_start":2276,"line_end":2276,"column_start":5,"column_end":59}},{"value":"/ let b = arr1(&[1, 2, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566380,"byte_end":566409,"line_start":2277,"line_end":2277,"column_start":5,"column_end":34}},{"value":"/ let col = b.insert_axis(Axis(1));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566414,"byte_end":566451,"line_start":2278,"line_end":2278,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(col, arr2(&[[1], [2], [3]]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566456,"byte_end":566500,"line_start":2279,"line_end":2279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566505,"byte_end":566508,"line_start":2280,"line_end":2280,"column_start":5,"column_end":8}},{"value":"/ // The new axis always has length 1.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566513,"byte_end":566553,"line_start":2281,"line_end":2281,"column_start":5,"column_end":45}},{"value":"/ let b = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566558,"byte_end":566602,"line_start":2282,"line_end":2282,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(b.insert_axis(Axis(2)).shape(), &[3, 4, 1, 5]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566607,"byte_end":566669,"line_start":2283,"line_end":2283,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566674,"byte_end":566681,"line_start":2284,"line_end":2284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566686,"byte_end":566689,"line_start":2285,"line_end":2285,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":566694,"byte_end":566740,"line_start":2286,"line_end":2286,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567412,"byte_end":567423,"line_start":2303,"line_end":2303,"column_start":12,"column_end":23},"name":"remove_axis","qualname":"<ArrayBase<S, D>>::remove_axis","value":"pub fn remove_axis(Self, Axis) -> ArrayBase<S, D::Smaller> where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Remove array axis `axis` and return the result.","sig":null,"attributes":[{"value":"/ Remove array axis `axis` and return the result.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567130,"byte_end":567181,"line_start":2297,"line_end":2297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567186,"byte_end":567189,"line_start":2298,"line_end":2298,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.index_axis_move(axis, 0)` and makes most sense to use if the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567194,"byte_end":567282,"line_start":2299,"line_end":2299,"column_start":5,"column_end":93}},{"value":"/ axis to remove is of length 1.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567287,"byte_end":567321,"line_start":2300,"line_end":2300,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567326,"byte_end":567329,"line_start":2301,"line_end":2301,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds or its length is zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567334,"byte_end":567400,"line_start":2302,"line_end":2302,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3477},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567890,"byte_end":567896,"line_start":2319,"line_end":2319,"column_start":12,"column_end":18},"name":"assign","qualname":"<ArrayBase<S, D>>::assign","value":"pub fn assign<E: Dimension, S2>(&mut Self, &ArrayBase<S2, E>) where\nS: DataMut, A: Clone, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from `rhs`.","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from `rhs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567674,"byte_end":567732,"line_start":2314,"line_end":2314,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567737,"byte_end":567740,"line_start":2315,"line_end":2315,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567745,"byte_end":567817,"line_start":2316,"line_end":2316,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567822,"byte_end":567825,"line_start":2317,"line_end":2317,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":567830,"byte_end":567878,"line_start":2318,"line_end":2318,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":568408,"byte_end":568417,"line_start":2334,"line_end":2334,"column_start":12,"column_end":21},"name":"assign_to","qualname":"<ArrayBase<S, D>>::assign_to","value":"pub fn assign_to<P>(&Self, P) where S: Data, P: IntoNdProducer<Dim = D>,\nP::Item: AssignElem<A>, A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment of values cloned from `self` into array or producer `to`.","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment of values cloned from `self` into array or producer `to`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":568098,"byte_end":568192,"line_start":2328,"line_end":2328,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":568197,"byte_end":568200,"line_start":2329,"line_end":2329,"column_start":5,"column_end":8}},{"value":"/ The destination `to` can be another array or a producer of assignable elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":568205,"byte_end":568288,"line_start":2330,"line_end":2330,"column_start":5,"column_end":88}},{"value":"/ [`AssignElem`] determines how elements are assigned.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":568293,"byte_end":568349,"line_start":2331,"line_end":2331,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":568354,"byte_end":568357,"line_start":2332,"line_end":2332,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes disagree.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":568362,"byte_end":568396,"line_start":2333,"line_end":2333,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":568709,"byte_end":568713,"line_start":2346,"line_end":2346,"column_start":12,"column_end":16},"name":"fill","qualname":"<ArrayBase<S, D>>::fill","value":"pub fn fill(&mut Self, A) where S: DataMut, A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from element `x`.\n","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from element `x`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":568633,"byte_end":568697,"line_start":2345,"line_end":2345,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":570835,"byte_end":570847,"line_start":2413,"line_end":2413,"column_start":12,"column_end":24},"name":"zip_mut_with","qualname":"<ArrayBase<S, D>>::zip_mut_with","value":"pub fn zip_mut_with<B, S2, E, F>(&mut Self, &ArrayBase<S2, E>, F) where\nS: DataMut, S2: Data<Elem = B>, E: Dimension, F: FnMut(&mut A, &B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Traverse two arrays in unspecified order, in lock step,\n calling the closure `f` on each element pair.","sig":null,"attributes":[{"value":"/ Traverse two arrays in unspecified order, in lock step,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":570550,"byte_end":570609,"line_start":2406,"line_end":2406,"column_start":5,"column_end":64}},{"value":"/ calling the closure `f` on each element pair.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":570614,"byte_end":570663,"line_start":2407,"line_end":2407,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":570668,"byte_end":570671,"line_start":2408,"line_end":2408,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":570676,"byte_end":570748,"line_start":2409,"line_end":2409,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":570753,"byte_end":570756,"line_start":2410,"line_end":2410,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":570761,"byte_end":570809,"line_start":2411,"line_end":2411,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":570814,"byte_end":570823,"line_start":2412,"line_end":2412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":571609,"byte_end":571613,"line_start":2435,"line_end":2435,"column_start":12,"column_end":16},"name":"fold","qualname":"<ArrayBase<S, D>>::fold","value":"pub fn fold<'a, F, B>(&'a Self, B, F) -> B where F: FnMut(B, &'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Traverse the array elements and apply a fold,\n returning the resulting value.","sig":null,"attributes":[{"value":"/ Traverse the array elements and apply a fold,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":571452,"byte_end":571501,"line_start":2431,"line_end":2431,"column_start":5,"column_end":54}},{"value":"/ returning the resulting value.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":571506,"byte_end":571540,"line_start":2432,"line_end":2432,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":571545,"byte_end":571548,"line_start":2433,"line_end":2433,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":571553,"byte_end":571597,"line_start":2434,"line_end":2434,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572522,"byte_end":572525,"line_start":2468,"line_end":2468,"column_start":12,"column_end":15},"name":"map","qualname":"<ArrayBase<S, D>>::map","value":"pub fn map<'a, B, F>(&'a Self, F) -> Array<B, D> where F: FnMut(&'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by reference on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by reference on each element and create a new array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572024,"byte_end":572088,"line_start":2450,"line_end":2450,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572093,"byte_end":572117,"line_start":2451,"line_end":2451,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572122,"byte_end":572125,"line_start":2452,"line_end":2452,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572130,"byte_end":572174,"line_start":2453,"line_end":2453,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572179,"byte_end":572182,"line_start":2454,"line_end":2454,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572187,"byte_end":572237,"line_start":2455,"line_end":2455,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572242,"byte_end":572245,"line_start":2456,"line_end":2456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572250,"byte_end":572257,"line_start":2457,"line_end":2457,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572262,"byte_end":572284,"line_start":2458,"line_end":2458,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572289,"byte_end":572292,"line_start":2459,"line_end":2459,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572297,"byte_end":572326,"line_start":2460,"line_end":2460,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572331,"byte_end":572362,"line_start":2461,"line_end":2461,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572367,"byte_end":572379,"line_start":2462,"line_end":2462,"column_start":5,"column_end":17}},{"value":"/     a.map(|x| *x >= 1.0)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572384,"byte_end":572412,"line_start":2463,"line_end":2463,"column_start":5,"column_end":33}},{"value":"/     == arr2(&[[false, true],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572417,"byte_end":572449,"line_start":2464,"line_end":2464,"column_start":5,"column_end":37}},{"value":"/               [false, true]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572454,"byte_end":572487,"line_start":2465,"line_end":2465,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572492,"byte_end":572498,"line_start":2466,"line_end":2466,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":572503,"byte_end":572510,"line_start":2467,"line_end":2467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573275,"byte_end":573282,"line_start":2491,"line_end":2491,"column_start":12,"column_end":19},"name":"map_mut","qualname":"<ArrayBase<S, D>>::map_mut","value":"pub fn map_mut<'a, B, F>(&'a mut Self, F) -> Array<B, D> where\nF: FnMut(&'a mut A) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Call `f` on a mutable reference of each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` on a mutable reference of each element and create a new array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573040,"byte_end":573114,"line_start":2485,"line_end":2485,"column_start":5,"column_end":79}},{"value":"/ with the new values.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573119,"byte_end":573143,"line_start":2486,"line_end":2486,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573148,"byte_end":573151,"line_start":2487,"line_end":2487,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573156,"byte_end":573200,"line_start":2488,"line_end":2488,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573205,"byte_end":573208,"line_start":2489,"line_end":2489,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573213,"byte_end":573263,"line_start":2490,"line_end":2490,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574349,"byte_end":574353,"line_start":2525,"line_end":2525,"column_start":12,"column_end":16},"name":"mapv","qualname":"<ArrayBase<S, D>>::mapv","value":"pub fn mapv<B, F>(&Self, F) -> Array<B, D> where F: FnMut(A) -> B, A: Clone,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element and create a new array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573860,"byte_end":573924,"line_start":2508,"line_end":2508,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573929,"byte_end":573953,"line_start":2509,"line_end":2509,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573958,"byte_end":573961,"line_start":2510,"line_end":2510,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":573966,"byte_end":574010,"line_start":2511,"line_end":2511,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574015,"byte_end":574018,"line_start":2512,"line_end":2512,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574023,"byte_end":574073,"line_start":2513,"line_end":2513,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574078,"byte_end":574081,"line_start":2514,"line_end":2514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574086,"byte_end":574093,"line_start":2515,"line_end":2515,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574098,"byte_end":574120,"line_start":2516,"line_end":2516,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574125,"byte_end":574128,"line_start":2517,"line_end":2517,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574133,"byte_end":574162,"line_start":2518,"line_end":2518,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574167,"byte_end":574198,"line_start":2519,"line_end":2519,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574203,"byte_end":574215,"line_start":2520,"line_end":2520,"column_start":5,"column_end":17}},{"value":"/     a.mapv(f32::abs) == arr2(&[[0., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574220,"byte_end":574264,"line_start":2521,"line_end":2521,"column_start":5,"column_end":49}},{"value":"/                                [1., 2.]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574269,"byte_end":574314,"line_start":2522,"line_end":2522,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574319,"byte_end":574325,"line_start":2523,"line_end":2523,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574330,"byte_end":574337,"line_start":2524,"line_end":2524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574691,"byte_end":574700,"line_start":2538,"line_end":2538,"column_start":12,"column_end":21},"name":"mapv_into","qualname":"<ArrayBase<S, D>>::mapv_into","value":"pub fn mapv_into<F>(Self, F) -> Self where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element, update the array with the new values\n and return it.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element, update the array with the new values","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574520,"byte_end":574599,"line_start":2534,"line_end":2534,"column_start":5,"column_end":84}},{"value":"/ and return it.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574604,"byte_end":574622,"line_start":2535,"line_end":2535,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574627,"byte_end":574630,"line_start":2536,"line_end":2536,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574635,"byte_end":574679,"line_start":2537,"line_end":2537,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575518,"byte_end":575531,"line_start":2562,"line_end":2562,"column_start":12,"column_end":25},"name":"mapv_into_any","qualname":"<ArrayBase<S, D>>::mapv_into_any","value":"pub fn mapv_into_any<B, F>(Self, F) -> Array<B, D> where S: DataMut,\nF: FnMut(A) -> B, A: Clone + 'static, B: 'static","parent":null,"children":[],"decl_id":null,"docs":" Consume the array, call `f` by **v**alue on each element, and return an\n owned array with the new values. Works for **any** `F: FnMut(A)->B`.","sig":null,"attributes":[{"value":"/ Consume the array, call `f` by **v**alue on each element, and return an","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574862,"byte_end":574937,"line_start":2548,"line_end":2548,"column_start":5,"column_end":80}},{"value":"/ owned array with the new values. Works for **any** `F: FnMut(A)->B`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":574942,"byte_end":575014,"line_start":2549,"line_end":2549,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575019,"byte_end":575022,"line_start":2550,"line_end":2550,"column_start":5,"column_end":8}},{"value":"/ If `A` and `B` are the same type then the map is performed by delegating","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575027,"byte_end":575103,"line_start":2551,"line_end":2551,"column_start":5,"column_end":81}},{"value":"/ to [`mapv_into`] and then converting into an owned array. This avoids","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575108,"byte_end":575181,"line_start":2552,"line_end":2552,"column_start":5,"column_end":78}},{"value":"/ unnecessary memory allocations in [`mapv`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575186,"byte_end":575233,"line_start":2553,"line_end":2553,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575238,"byte_end":575241,"line_start":2554,"line_end":2554,"column_start":5,"column_end":8}},{"value":"/ If `A` and `B` are different types then a new array is allocated and the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575246,"byte_end":575322,"line_start":2555,"line_end":2555,"column_start":5,"column_end":81}},{"value":"/ map is performed as in [`mapv`].","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575327,"byte_end":575363,"line_start":2556,"line_end":2556,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575368,"byte_end":575371,"line_start":2557,"line_end":2557,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575376,"byte_end":575420,"line_start":2558,"line_end":2558,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575425,"byte_end":575428,"line_start":2559,"line_end":2559,"column_start":5,"column_end":8}},{"value":"/ [`mapv_into`]: ArrayBase::mapv_into","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575433,"byte_end":575472,"line_start":2560,"line_end":2560,"column_start":5,"column_end":44}},{"value":"/ [`mapv`]: ArrayBase::mapv","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":575477,"byte_end":575506,"line_start":2561,"line_end":2561,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":576749,"byte_end":576760,"line_start":2593,"line_end":2593,"column_start":12,"column_end":23},"name":"map_inplace","qualname":"<ArrayBase<S, D>>::map_inplace","value":"pub fn map_inplace<'a, F>(&'a mut Self, F) where S: DataMut, A: 'a,\nF: FnMut(&'a mut A) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by mutable reference on each element.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by mutable reference on each element.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":576598,"byte_end":576680,"line_start":2590,"line_end":2590,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":576685,"byte_end":576688,"line_start":2591,"line_end":2591,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":576693,"byte_end":576737,"line_start":2592,"line_end":2592,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577829,"byte_end":577841,"line_start":2630,"line_end":2630,"column_start":12,"column_end":24},"name":"mapv_inplace","qualname":"<ArrayBase<S, D>>::mapv_inplace","value":"pub fn mapv_inplace<F>(&mut Self, F) where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by **v**alue on each element.\n The array is updated with the new values.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by **v**alue on each element.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577203,"byte_end":577277,"line_start":2609,"line_end":2609,"column_start":5,"column_end":79}},{"value":"/ The array is updated with the new values.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577282,"byte_end":577327,"line_start":2610,"line_end":2610,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577332,"byte_end":577335,"line_start":2611,"line_end":2611,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577340,"byte_end":577384,"line_start":2612,"line_end":2612,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577389,"byte_end":577392,"line_start":2613,"line_end":2613,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577397,"byte_end":577404,"line_start":2614,"line_end":2614,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577409,"byte_end":577443,"line_start":2615,"line_end":2615,"column_start":5,"column_end":39}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577448,"byte_end":577483,"line_start":2616,"line_end":2616,"column_start":5,"column_end":40}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577488,"byte_end":577510,"line_start":2617,"line_end":2617,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577515,"byte_end":577518,"line_start":2618,"line_end":2618,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[ 0., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577523,"byte_end":577556,"line_start":2619,"line_end":2619,"column_start":5,"column_end":38}},{"value":"/                    [-1., 2.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577561,"byte_end":577596,"line_start":2620,"line_end":2620,"column_start":5,"column_end":40}},{"value":"/ a.mapv_inplace(f32::exp);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577601,"byte_end":577630,"line_start":2621,"line_end":2621,"column_start":5,"column_end":34}},{"value":"/ assert_abs_diff_eq!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577635,"byte_end":577659,"line_start":2622,"line_end":2622,"column_start":5,"column_end":29}},{"value":"/     a,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577664,"byte_end":577674,"line_start":2623,"line_end":2623,"column_start":5,"column_end":15}},{"value":"/     arr2(&[[1.00000, 2.71828],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577679,"byte_end":577713,"line_start":2624,"line_end":2624,"column_start":5,"column_end":39}},{"value":"/            [0.36788, 7.38906]]),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577718,"byte_end":577754,"line_start":2625,"line_end":2625,"column_start":5,"column_end":41}},{"value":"/     epsilon = 1e-5,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577759,"byte_end":577782,"line_start":2626,"line_end":2626,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577787,"byte_end":577793,"line_start":2627,"line_end":2627,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577798,"byte_end":577805,"line_start":2628,"line_end":2628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":577810,"byte_end":577817,"line_start":2629,"line_end":2629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578123,"byte_end":578131,"line_start":2642,"line_end":2642,"column_start":12,"column_end":20},"name":"for_each","qualname":"<ArrayBase<S, D>>::for_each","value":"pub fn for_each<'a, F>(&'a Self, F) where F: FnMut(&'a A) -> (), A: 'a,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` for each element in the array.","sig":null,"attributes":[{"value":"/ Call `f` for each element in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578011,"byte_end":578054,"line_start":2639,"line_end":2639,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578059,"byte_end":578062,"line_start":2640,"line_end":2640,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578067,"byte_end":578111,"line_start":2641,"line_end":2641,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3538},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578510,"byte_end":578515,"line_start":2656,"line_end":2656,"column_start":12,"column_end":17},"name":"visit","qualname":"<ArrayBase<S, D>>::visit","value":"pub fn visit<'a, F>(&'a Self, F) where F: FnMut(&'a A) -> (), A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Visit each element in the array by calling `f` by reference\n on each element.","sig":null,"attributes":[{"value":"/ Visit each element in the array by calling `f` by reference","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578288,"byte_end":578351,"line_start":2651,"line_end":2651,"column_start":5,"column_end":68}},{"value":"/ on each element.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578356,"byte_end":578376,"line_start":2652,"line_end":2652,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578381,"byte_end":578384,"line_start":2653,"line_end":2653,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578389,"byte_end":578433,"line_start":2654,"line_end":2654,"column_start":5,"column_end":49}},{"value":"deprecated(note = \"Renamed to .for_each()\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578438,"byte_end":578498,"line_start":2655,"line_end":2655,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578918,"byte_end":578927,"line_start":2673,"line_end":2673,"column_start":12,"column_end":21},"name":"fold_axis","qualname":"<ArrayBase<S, D>>::fold_axis","value":"pub fn fold_axis<B, F>(&Self, Axis, B, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(&B, &A) -> B, B: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Fold along an axis.","sig":null,"attributes":[{"value":"/ Fold along an axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578648,"byte_end":578671,"line_start":2665,"line_end":2665,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578676,"byte_end":578679,"line_start":2666,"line_end":2666,"column_start":5,"column_end":8}},{"value":"/ Combine the elements of each subview with the previous using the `fold`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578684,"byte_end":578759,"line_start":2667,"line_end":2667,"column_start":5,"column_end":80}},{"value":"/ function and initial value `init`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578764,"byte_end":578802,"line_start":2668,"line_end":2668,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578807,"byte_end":578810,"line_start":2669,"line_end":2669,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578815,"byte_end":578851,"line_start":2670,"line_end":2670,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578856,"byte_end":578859,"line_start":2671,"line_end":2671,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":578864,"byte_end":578906,"line_start":2672,"line_end":2672,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3545},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":579611,"byte_end":579619,"line_start":2695,"line_end":2695,"column_start":12,"column_end":20},"name":"map_axis","qualname":"<ArrayBase<S, D>>::map_axis","value":"pub fn map_axis<'a, B, F>(&'a Self, Axis, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(ArrayView1) -> B, A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":579327,"byte_end":579399,"line_start":2687,"line_end":2687,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":579404,"byte_end":579438,"line_start":2688,"line_end":2688,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":579443,"byte_end":579446,"line_start":2689,"line_end":2689,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":579451,"byte_end":579495,"line_start":2690,"line_end":2690,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":579500,"byte_end":579503,"line_start":2691,"line_end":2691,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":579508,"byte_end":579544,"line_start":2692,"line_end":2692,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":579549,"byte_end":579552,"line_start":2693,"line_end":2693,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":579557,"byte_end":579599,"line_start":2694,"line_end":2694,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3551},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580775,"byte_end":580787,"line_start":2726,"line_end":2726,"column_start":12,"column_end":24},"name":"map_axis_mut","qualname":"<ArrayBase<S, D>>::map_axis_mut","value":"pub fn map_axis_mut<'a, B, F>(&'a mut Self, Axis, F) -> Array<B, D::Smaller>\nwhere D: RemoveAxis, F: FnMut(ArrayViewMut1) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.\n 1-dimensional lanes are passed as mutable references to the reducer,\n allowing for side-effects.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580379,"byte_end":580451,"line_start":2716,"line_end":2716,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580456,"byte_end":580490,"line_start":2717,"line_end":2717,"column_start":5,"column_end":39}},{"value":"/ 1-dimensional lanes are passed as mutable references to the reducer,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580495,"byte_end":580567,"line_start":2718,"line_end":2718,"column_start":5,"column_end":77}},{"value":"/ allowing for side-effects.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580572,"byte_end":580602,"line_start":2719,"line_end":2719,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580607,"byte_end":580610,"line_start":2720,"line_end":2720,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580615,"byte_end":580659,"line_start":2721,"line_end":2721,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580664,"byte_end":580667,"line_start":2722,"line_end":2722,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580672,"byte_end":580708,"line_start":2723,"line_end":2723,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580713,"byte_end":580716,"line_start":2724,"line_end":2724,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":580721,"byte_end":580763,"line_start":2725,"line_end":2725,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582279,"byte_end":582291,"line_start":2762,"line_end":2762,"column_start":12,"column_end":24},"name":"remove_index","qualname":"<ArrayBase<S, D>>::remove_index","value":"pub fn remove_index(&mut Self, Axis, usize) where S: DataOwned + DataMut","parent":null,"children":[],"decl_id":null,"docs":" Remove the `index`th elements along `axis` and shift down elements from higher indexes.","sig":null,"attributes":[{"value":"/ Remove the `index`th elements along `axis` and shift down elements from higher indexes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":581654,"byte_end":581745,"line_start":2751,"line_end":2751,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":581750,"byte_end":581753,"line_start":2752,"line_end":2752,"column_start":5,"column_end":8}},{"value":"/ Note that this \"removes\" the elements by swapping them around to the end of the axis and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":581758,"byte_end":581850,"line_start":2753,"line_end":2753,"column_start":5,"column_end":97}},{"value":"/ shortening the length of the axis; the elements are not deinitialized or dropped by this,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":581855,"byte_end":581948,"line_start":2754,"line_end":2754,"column_start":5,"column_end":98}},{"value":"/ just moved out of view (this only matters for elements with ownership semantics). It's","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":581953,"byte_end":582043,"line_start":2755,"line_end":2755,"column_start":5,"column_end":95}},{"value":"/ similar to slicing an owned array in place.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582048,"byte_end":582095,"line_start":2756,"line_end":2756,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582100,"byte_end":582103,"line_start":2757,"line_end":2757,"column_start":5,"column_end":8}},{"value":"/ Decreases the length of `axis` by one.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582108,"byte_end":582150,"line_start":2758,"line_end":2758,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582155,"byte_end":582158,"line_start":2759,"line_end":2759,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `axis` is out of bounds<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582163,"byte_end":582210,"line_start":2760,"line_end":2760,"column_start":5,"column_end":52}},{"value":"/ ***Panics*** if not `index < self.len_of(axis)`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582215,"byte_end":582267,"line_start":2761,"line_end":2761,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583775,"byte_end":583798,"line_start":2803,"line_end":2803,"column_start":12,"column_end":35},"name":"accumulate_axis_inplace","qualname":"<ArrayBase<S, D>>::accumulate_axis_inplace","value":"pub fn accumulate_axis_inplace<F>(&mut Self, Axis, F) where\nF: FnMut(&A, &mut A) -> (), S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Iterates over pairs of consecutive elements along the axis.","sig":null,"attributes":[{"value":"/ Iterates over pairs of consecutive elements along the axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582851,"byte_end":582914,"line_start":2775,"line_end":2775,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582919,"byte_end":582922,"line_start":2776,"line_end":2776,"column_start":5,"column_end":8}},{"value":"/ The first argument to the closure is an element, and the second","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582927,"byte_end":582994,"line_start":2777,"line_end":2777,"column_start":5,"column_end":72}},{"value":"/ argument is the next element along the axis. Iteration is guaranteed to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":582999,"byte_end":583074,"line_start":2778,"line_end":2778,"column_start":5,"column_end":80}},{"value":"/ proceed in order along the specified axis, but in all other respects","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583079,"byte_end":583151,"line_start":2779,"line_end":2779,"column_start":5,"column_end":77}},{"value":"/ the iteration order is unspecified.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583156,"byte_end":583195,"line_start":2780,"line_end":2780,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583200,"byte_end":583203,"line_start":2781,"line_end":2781,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583208,"byte_end":583221,"line_start":2782,"line_end":2782,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583226,"byte_end":583229,"line_start":2783,"line_end":2783,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used to compute the cumulative sum along an","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583234,"byte_end":583306,"line_start":2784,"line_end":2784,"column_start":5,"column_end":77}},{"value":"/ axis:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583311,"byte_end":583320,"line_start":2785,"line_end":2785,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583325,"byte_end":583328,"line_start":2786,"line_end":2786,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583333,"byte_end":583340,"line_start":2787,"line_end":2787,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{array, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583345,"byte_end":583376,"line_start":2788,"line_end":2788,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583381,"byte_end":583384,"line_start":2789,"line_end":2789,"column_start":5,"column_end":8}},{"value":"/ let mut arr = array![","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583389,"byte_end":583414,"line_start":2790,"line_end":2790,"column_start":5,"column_end":30}},{"value":"/     [[1, 2], [3, 4], [5, 6]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583419,"byte_end":583452,"line_start":2791,"line_end":2791,"column_start":5,"column_end":38}},{"value":"/     [[7, 8], [9, 10], [11, 12]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583457,"byte_end":583493,"line_start":2792,"line_end":2792,"column_start":5,"column_end":41}},{"value":"/ ];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583498,"byte_end":583504,"line_start":2793,"line_end":2793,"column_start":5,"column_end":11}},{"value":"/ arr.accumulate_axis_inplace(Axis(1), |&prev, curr| *curr += prev);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583509,"byte_end":583579,"line_start":2794,"line_end":2794,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583584,"byte_end":583599,"line_start":2795,"line_end":2795,"column_start":5,"column_end":20}},{"value":"/     arr,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583604,"byte_end":583616,"line_start":2796,"line_end":2796,"column_start":5,"column_end":17}},{"value":"/     array![","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583621,"byte_end":583636,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"/         [[1, 2], [4, 6], [9, 12]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583641,"byte_end":583679,"line_start":2798,"line_end":2798,"column_start":5,"column_end":43}},{"value":"/         [[7, 8], [16, 18], [27, 30]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583684,"byte_end":583725,"line_start":2799,"line_end":2799,"column_start":5,"column_end":46}},{"value":"/     ],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583730,"byte_end":583740,"line_start":2800,"line_end":2800,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583745,"byte_end":583751,"line_start":2801,"line_end":2801,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":583756,"byte_end":583763,"line_start":2802,"line_end":2802,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586281,"byte_end":586292,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<Array<A, Ix0>>::into_scalar","value":"pub fn into_scalar(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the single element in the array without cloning it.","sig":null,"attributes":[{"value":"/ Returns the single element in the array without cloning it.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":585893,"byte_end":585956,"line_start":21,"line_end":21,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":585961,"byte_end":585964,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":585969,"byte_end":585976,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":585981,"byte_end":586013,"line_start":24,"line_end":24,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586018,"byte_end":586021,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586026,"byte_end":586065,"line_start":26,"line_end":26,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586070,"byte_end":586105,"line_start":27,"line_end":27,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586110,"byte_end":586125,"line_start":28,"line_end":28,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586130,"byte_end":586133,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586138,"byte_end":586177,"line_start":30,"line_end":30,"column_start":5,"column_end":44}},{"value":"/ let scalar: Foo = array.into_scalar();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586182,"byte_end":586224,"line_start":31,"line_end":31,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, Foo);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586229,"byte_end":586257,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":586262,"byte_end":586269,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587551,"byte_end":587563,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"into_raw_vec","qualname":"<Array<A, D>>::into_raw_vec","value":"pub fn into_raw_vec(Self) -> Vec<A>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector of the elements in the array, in the way they are\n stored internally.","sig":null,"attributes":[{"value":"/ Return a vector of the elements in the array, in the way they are","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587274,"byte_end":587343,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ stored internally.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587348,"byte_end":587370,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587375,"byte_end":587378,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If the array is in standard memory layout, the logical element order","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587383,"byte_end":587455,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ of the array (`.iter()` order) and of the returned vector will be the same.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587460,"byte_end":587539,"line_start":65,"line_end":65,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589471,"byte_end":589479,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"push_row","qualname":"<Array<A, Ix2>>::push_row","value":"pub fn push_row(&mut Self, ArrayView<, A, Ix1>) -> Result<(), ShapeError>\nwhere A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Append a row to an array","sig":null,"attributes":[{"value":"/ Append a row to an array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587735,"byte_end":587763,"line_start":75,"line_end":75,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587768,"byte_end":587771,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The elements from `row` are cloned and added as a new row in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587776,"byte_end":587851,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587856,"byte_end":587859,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ***Errors*** with a shape error if the length of the row does not match the length of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587864,"byte_end":587957,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ rows in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587962,"byte_end":587984,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587989,"byte_end":587992,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the `self` array matters for ensuring that the append is efficient.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587997,"byte_end":588089,"line_start":82,"line_end":82,"column_start":5,"column_end":97}},{"value":"/ Appending automatically changes memory layout of the array so that it is appended to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588094,"byte_end":588182,"line_start":83,"line_end":83,"column_start":5,"column_end":93}},{"value":"/ along the \"growing axis\". However, if the memory layout needs adjusting, the array must","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588187,"byte_end":588278,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ reallocate and move memory.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588283,"byte_end":588314,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588319,"byte_end":588322,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The operation leaves the existing data in place and is most efficent if one of these is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588327,"byte_end":588418,"line_start":87,"line_end":87,"column_start":5,"column_end":96}},{"value":"/ true:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588423,"byte_end":588432,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588437,"byte_end":588440,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ - The axis being appended to is the longest stride axis, i.e the array is in row major","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588445,"byte_end":588535,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/   (\"C\") layout.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588540,"byte_end":588559,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/ - The array has 0 or 1 rows (It is converted to row major)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588564,"byte_end":588626,"line_start":92,"line_end":92,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588631,"byte_end":588634,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Ensure appending is efficient by, for example, appending to an empty array and then always","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588639,"byte_end":588733,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ pushing/appending along the same axis. For pushing rows, ndarray's default layout (C order)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588738,"byte_end":588833,"line_start":95,"line_end":95,"column_start":5,"column_end":100}},{"value":"/ is efficient.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588838,"byte_end":588855,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588860,"byte_end":588863,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ When repeatedly appending to a single axis, the amortized average complexity of each","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588868,"byte_end":588956,"line_start":98,"line_end":98,"column_start":5,"column_end":93}},{"value":"/ append is O(m), where *m* is the length of the row.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":588961,"byte_end":589016,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589021,"byte_end":589024,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589029,"byte_end":589040,"line_start":101,"line_end":101,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, ArrayView, array};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589045,"byte_end":589088,"line_start":102,"line_end":102,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589093,"byte_end":589096,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ // create an empty array and append","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589101,"byte_end":589140,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/ let mut a = Array::zeros((0, 4));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589145,"byte_end":589182,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/ a.push_row(ArrayView::from(&[ 1.,  2.,  3.,  4.])).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589187,"byte_end":589251,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/ a.push_row(ArrayView::from(&[-1., -2., -3., -4.])).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589256,"byte_end":589320,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589325,"byte_end":589328,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589333,"byte_end":589348,"line_start":109,"line_end":109,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589353,"byte_end":589363,"line_start":110,"line_end":110,"column_start":5,"column_end":15}},{"value":"/     array![[ 1.,  2.,  3.,  4.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589368,"byte_end":589404,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/            [-1., -2., -3., -4.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589409,"byte_end":589447,"line_start":112,"line_end":112,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589452,"byte_end":589459,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591364,"byte_end":591375,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"push_column","qualname":"<Array<A, Ix2>>::push_column","value":"pub fn push_column(&mut Self, ArrayView<, A, Ix1>) -> Result<(), ShapeError>\nwhere A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Append a column to an array","sig":null,"attributes":[{"value":"/ Append a column to an array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589641,"byte_end":589672,"line_start":121,"line_end":121,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589677,"byte_end":589680,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The elements from `column` are cloned and added as a new column in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589685,"byte_end":589766,"line_start":123,"line_end":123,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589771,"byte_end":589774,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ***Errors*** with a shape error if the length of the column does not match the length of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589779,"byte_end":589871,"line_start":125,"line_end":125,"column_start":5,"column_end":97}},{"value":"/ the columns in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589876,"byte_end":589905,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589910,"byte_end":589913,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the `self` array matters for ensuring that the append is efficient.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":589918,"byte_end":590010,"line_start":128,"line_end":128,"column_start":5,"column_end":97}},{"value":"/ Appending automatically changes memory layout of the array so that it is appended to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590015,"byte_end":590103,"line_start":129,"line_end":129,"column_start":5,"column_end":93}},{"value":"/ along the \"growing axis\". However, if the memory layout needs adjusting, the array must","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590108,"byte_end":590199,"line_start":130,"line_end":130,"column_start":5,"column_end":96}},{"value":"/ reallocate and move memory.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590204,"byte_end":590235,"line_start":131,"line_end":131,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590240,"byte_end":590243,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The operation leaves the existing data in place and is most efficent if one of these is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590248,"byte_end":590339,"line_start":133,"line_end":133,"column_start":5,"column_end":96}},{"value":"/ true:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590344,"byte_end":590353,"line_start":134,"line_end":134,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590358,"byte_end":590361,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ - The axis being appended to is the longest stride axis, i.e the array is in column major","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590366,"byte_end":590459,"line_start":136,"line_end":136,"column_start":5,"column_end":98}},{"value":"/   (\"F\") layout.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590464,"byte_end":590483,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/ - The array has 0 or 1 columns (It is converted to column major)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590488,"byte_end":590556,"line_start":138,"line_end":138,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590561,"byte_end":590564,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Ensure appending is efficient by, for example, appending to an empty array and then always","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590569,"byte_end":590663,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ pushing/appending along the same axis. For pushing columns, column major layout (F order)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590668,"byte_end":590761,"line_start":141,"line_end":141,"column_start":5,"column_end":98}},{"value":"/ is efficient.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590766,"byte_end":590783,"line_start":142,"line_end":142,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590788,"byte_end":590791,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ When repeatedly appending to a single axis, the amortized average complexity of each append","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590796,"byte_end":590891,"line_start":144,"line_end":144,"column_start":5,"column_end":100}},{"value":"/ is O(m), where *m* is the length of the column.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590896,"byte_end":590947,"line_start":145,"line_end":145,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590952,"byte_end":590955,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590960,"byte_end":590971,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, ArrayView, array};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":590976,"byte_end":591019,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591024,"byte_end":591027,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ // create an empty array and append","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591032,"byte_end":591071,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ let mut a = Array::zeros((2, 0));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591076,"byte_end":591113,"line_start":151,"line_end":151,"column_start":5,"column_end":42}},{"value":"/ a.push_column(ArrayView::from(&[1., 2.])).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591118,"byte_end":591173,"line_start":152,"line_end":152,"column_start":5,"column_end":60}},{"value":"/ a.push_column(ArrayView::from(&[-1., -2.])).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591178,"byte_end":591235,"line_start":153,"line_end":153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591240,"byte_end":591243,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591248,"byte_end":591263,"line_start":155,"line_end":155,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591268,"byte_end":591278,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/     array![[1., -1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591283,"byte_end":591308,"line_start":157,"line_end":157,"column_start":5,"column_end":30}},{"value":"/            [2., -2.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591313,"byte_end":591340,"line_start":158,"line_end":158,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591345,"byte_end":591352,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":592250,"byte_end":592259,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"move_into","qualname":"<Array<A, D>>::move_into","value":"pub fn move_into<'a, AM>(Self, AM) where AM: Into<ArrayViewMut>, A: 'a","parent":null,"children":[],"decl_id":null,"docs":" Move all elements from self into `new_array`, which must be of the same shape but\n can have a different memory layout. The destination is overwritten completely.","sig":null,"attributes":[{"value":"/ Move all elements from self into `new_array`, which must be of the same shape but","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591593,"byte_end":591678,"line_start":171,"line_end":171,"column_start":5,"column_end":90}},{"value":"/ can have a different memory layout. The destination is overwritten completely.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591683,"byte_end":591765,"line_start":172,"line_end":172,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591770,"byte_end":591773,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The destination should be a mut reference to an array or an `ArrayViewMut` with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591778,"byte_end":591861,"line_start":174,"line_end":174,"column_start":5,"column_end":88}},{"value":"/ `A` elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591866,"byte_end":591883,"line_start":175,"line_end":175,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591888,"byte_end":591891,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the shapes don't agree.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591896,"byte_end":591939,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591944,"byte_end":591947,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591952,"byte_end":591966,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591971,"byte_end":591974,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591979,"byte_end":591986,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591991,"byte_end":592014,"line_start":182,"line_end":182,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":592019,"byte_end":592022,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ // Usage example of move_into in safe code","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":592027,"byte_end":592073,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/ let mut a = Array::default((10, 10));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":592078,"byte_end":592119,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/ let b = Array::from_shape_fn((10, 10), |(i, j)| (i + j).to_string());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":592124,"byte_end":592197,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/ b.move_into(&mut a);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":592202,"byte_end":592226,"line_start":187,"line_end":187,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":592231,"byte_end":592238,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594553,"byte_end":594569,"line_start":242,"line_end":242,"column_start":12,"column_end":28},"name":"move_into_uninit","qualname":"<Array<A, D>>::move_into_uninit","value":"pub fn move_into_uninit<'a, AM>(Self, AM) where AM: Into<ArrayViewMut>, A: 'a","parent":null,"children":[],"decl_id":null,"docs":" Move all elements from self into `new_array`, which must be of the same shape but\n can have a different memory layout. The destination is overwritten completely.","sig":null,"attributes":[{"value":"/ Move all elements from self into `new_array`, which must be of the same shape but","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":593379,"byte_end":593464,"line_start":216,"line_end":216,"column_start":5,"column_end":90}},{"value":"/ can have a different memory layout. The destination is overwritten completely.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":593469,"byte_end":593551,"line_start":217,"line_end":217,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":593556,"byte_end":593559,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The destination should be a mut reference to an array or an `ArrayViewMut` with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":593564,"byte_end":593647,"line_start":219,"line_end":219,"column_start":5,"column_end":88}},{"value":"/ `MaybeUninit<A>` elements (which are overwritten without dropping any existing value).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":593652,"byte_end":593742,"line_start":220,"line_end":220,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":593747,"byte_end":593750,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Minor implementation note: Owned arrays like `self` may be sliced in place and own elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":593755,"byte_end":593850,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ that are not part of their active view; these are dropped at the end of this function,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":593855,"byte_end":593945,"line_start":223,"line_end":223,"column_start":5,"column_end":95}},{"value":"/ after all elements in the \"active view\" are moved into `new_array`. If there is a panic in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":593950,"byte_end":594044,"line_start":224,"line_end":224,"column_start":5,"column_end":99}},{"value":"/ drop of any such element, other elements may be leaked.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594049,"byte_end":594108,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594113,"byte_end":594116,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the shapes don't agree.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594121,"byte_end":594164,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594169,"byte_end":594172,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594177,"byte_end":594191,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594196,"byte_end":594199,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594204,"byte_end":594211,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594216,"byte_end":594239,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594244,"byte_end":594247,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_iter(0..100).into_shape((10, 10)).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594252,"byte_end":594319,"line_start":234,"line_end":234,"column_start":5,"column_end":72}},{"value":"/ let mut b = Array::uninit((10, 10));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594324,"byte_end":594364,"line_start":235,"line_end":235,"column_start":5,"column_end":45}},{"value":"/ a.move_into_uninit(&mut b);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594369,"byte_end":594400,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/ unsafe {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594405,"byte_end":594417,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/     // we can now promise we have fully initialized `b`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594422,"byte_end":594482,"line_start":238,"line_end":238,"column_start":5,"column_end":65}},{"value":"/     let b = b.assume_init();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594487,"byte_end":594519,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594524,"byte_end":594529,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":594534,"byte_end":594541,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601194,"byte_end":601198,"line_start":404,"line_end":404,"column_start":12,"column_end":16},"name":"push","qualname":"<Array<A, D>>::push","value":"pub fn push(&mut Self, Axis, ArrayView<, A, D::Smaller>)\n-> Result<(), ShapeError> where A: Clone, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Append an array to the array along an axis.","sig":null,"attributes":[{"value":"/ Append an array to the array along an axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":598733,"byte_end":598780,"line_start":354,"line_end":354,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":598785,"byte_end":598788,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The elements of `array` are cloned and extend the axis `axis` in the present array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":598793,"byte_end":598880,"line_start":356,"line_end":356,"column_start":5,"column_end":92}},{"value":"/ `self` will grow in size by 1 along `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":598885,"byte_end":598932,"line_start":357,"line_end":357,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":598937,"byte_end":598940,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Append to the array, where the array being pushed to the array has one dimension less than","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":598945,"byte_end":599039,"line_start":359,"line_end":359,"column_start":5,"column_end":99}},{"value":"/ the `self` array. This method is equivalent to [append](ArrayBase::append) in this way:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599044,"byte_end":599135,"line_start":360,"line_end":360,"column_start":5,"column_end":96}},{"value":"/ `self.append(axis, array.insert_axis(axis))`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599140,"byte_end":599189,"line_start":361,"line_end":361,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599194,"byte_end":599197,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ***Errors*** with a shape error if the shape of self does not match the array-to-append;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599202,"byte_end":599294,"line_start":363,"line_end":363,"column_start":5,"column_end":97}},{"value":"/ all axes *except* the axis along which it being appended matter for this check:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599299,"byte_end":599382,"line_start":364,"line_end":364,"column_start":5,"column_end":88}},{"value":"/ the shape of `self` with `axis` removed must be the same as the shape of `array`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599387,"byte_end":599472,"line_start":365,"line_end":365,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599477,"byte_end":599480,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the `self` array matters for ensuring that the append is efficient.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599485,"byte_end":599577,"line_start":367,"line_end":367,"column_start":5,"column_end":97}},{"value":"/ Appending automatically changes memory layout of the array so that it is appended to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599582,"byte_end":599670,"line_start":368,"line_end":368,"column_start":5,"column_end":93}},{"value":"/ along the \"growing axis\". However, if the memory layout needs adjusting, the array must","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599675,"byte_end":599766,"line_start":369,"line_end":369,"column_start":5,"column_end":96}},{"value":"/ reallocate and move memory.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599771,"byte_end":599802,"line_start":370,"line_end":370,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599807,"byte_end":599810,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The operation leaves the existing data in place and is most efficent if `axis` is a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599815,"byte_end":599902,"line_start":372,"line_end":372,"column_start":5,"column_end":92}},{"value":"/ \"growing axis\" for the array, i.e. one of these is true:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599907,"byte_end":599967,"line_start":373,"line_end":373,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599972,"byte_end":599975,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ - The axis is the longest stride axis, for example the 0th axis in a C-layout or the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":599980,"byte_end":600068,"line_start":375,"line_end":375,"column_start":5,"column_end":93}},{"value":"/ *n-1*th axis in an F-layout array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600073,"byte_end":600111,"line_start":376,"line_end":376,"column_start":5,"column_end":43}},{"value":"/ - The axis has length 0 or 1 (It is converted to the new growing axis)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600116,"byte_end":600190,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600195,"byte_end":600198,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Ensure appending is efficient by for example starting from an empty array and/or always","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600203,"byte_end":600294,"line_start":379,"line_end":379,"column_start":5,"column_end":96}},{"value":"/ appending to an array along the same axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600299,"byte_end":600345,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600350,"byte_end":600353,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The amortized average complexity of the append, when appending along its growing axis, is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600358,"byte_end":600451,"line_start":382,"line_end":382,"column_start":5,"column_end":98}},{"value":"/ O(*m*) where *m* is the number of individual elements to append.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600456,"byte_end":600524,"line_start":383,"line_end":383,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600529,"byte_end":600532,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the argument `array` does not matter to the same extent.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600537,"byte_end":600618,"line_start":385,"line_end":385,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600623,"byte_end":600626,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600631,"byte_end":600642,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, ArrayView, array, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600647,"byte_end":600696,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600701,"byte_end":600704,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ // create an empty array and push rows to it","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600709,"byte_end":600757,"line_start":390,"line_end":390,"column_start":5,"column_end":53}},{"value":"/ let mut a = Array::zeros((0, 4));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600762,"byte_end":600799,"line_start":391,"line_end":391,"column_start":5,"column_end":42}},{"value":"/ let ones  = ArrayView::from(&[1.; 4]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600804,"byte_end":600846,"line_start":392,"line_end":392,"column_start":5,"column_end":47}},{"value":"/ let zeros = ArrayView::from(&[0.; 4]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600851,"byte_end":600893,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ a.push(Axis(0), ones).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600898,"byte_end":600933,"line_start":394,"line_end":394,"column_start":5,"column_end":40}},{"value":"/ a.push(Axis(0), zeros).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600938,"byte_end":600974,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/ a.push(Axis(0), ones).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":600979,"byte_end":601014,"line_start":396,"line_end":396,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601019,"byte_end":601022,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601027,"byte_end":601042,"line_start":398,"line_end":398,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601047,"byte_end":601057,"line_start":399,"line_end":399,"column_start":5,"column_end":15}},{"value":"/     array![[1., 1., 1., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601062,"byte_end":601094,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/            [0., 0., 0., 0.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601099,"byte_end":601131,"line_start":401,"line_end":401,"column_start":5,"column_end":37}},{"value":"/            [1., 1., 1., 1.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601136,"byte_end":601170,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601175,"byte_end":601182,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603921,"byte_end":603927,"line_start":465,"line_end":465,"column_start":12,"column_end":18},"name":"append","qualname":"<Array<A, D>>::append","value":"pub fn append(&mut Self, Axis, ArrayView<, A, D>) -> Result<(), ShapeError>\nwhere A: Clone, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Append an array to the array along an axis.","sig":null,"attributes":[{"value":"/ Append an array to the array along an axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601487,"byte_end":601534,"line_start":415,"line_end":415,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601539,"byte_end":601542,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ The elements of `array` are cloned and extend the axis `axis` in the present array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601547,"byte_end":601634,"line_start":417,"line_end":417,"column_start":5,"column_end":92}},{"value":"/ `self` will grow in size by `array.len_of(axis)` along `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601639,"byte_end":601705,"line_start":418,"line_end":418,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601710,"byte_end":601713,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ***Errors*** with a shape error if the shape of self does not match the array-to-append;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601718,"byte_end":601810,"line_start":420,"line_end":420,"column_start":5,"column_end":97}},{"value":"/ all axes *except* the axis along which it being appended matter for this check:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601815,"byte_end":601898,"line_start":421,"line_end":421,"column_start":5,"column_end":88}},{"value":"/ the shape of `self` with `axis` removed must be the same as the shape of `array` with","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601903,"byte_end":601992,"line_start":422,"line_end":422,"column_start":5,"column_end":94}},{"value":"/ `axis` removed.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":601997,"byte_end":602016,"line_start":423,"line_end":423,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602021,"byte_end":602024,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the `self` array matters for ensuring that the append is efficient.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602029,"byte_end":602121,"line_start":425,"line_end":425,"column_start":5,"column_end":97}},{"value":"/ Appending automatically changes memory layout of the array so that it is appended to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602126,"byte_end":602214,"line_start":426,"line_end":426,"column_start":5,"column_end":93}},{"value":"/ along the \"growing axis\". However, if the memory layout needs adjusting, the array must","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602219,"byte_end":602310,"line_start":427,"line_end":427,"column_start":5,"column_end":96}},{"value":"/ reallocate and move memory.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602315,"byte_end":602346,"line_start":428,"line_end":428,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602351,"byte_end":602354,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The operation leaves the existing data in place and is most efficent if `axis` is a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602359,"byte_end":602446,"line_start":430,"line_end":430,"column_start":5,"column_end":92}},{"value":"/ \"growing axis\" for the array, i.e. one of these is true:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602451,"byte_end":602511,"line_start":431,"line_end":431,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602516,"byte_end":602519,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ - The axis is the longest stride axis, for example the 0th axis in a C-layout or the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602524,"byte_end":602612,"line_start":433,"line_end":433,"column_start":5,"column_end":93}},{"value":"/ *n-1*th axis in an F-layout array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602617,"byte_end":602655,"line_start":434,"line_end":434,"column_start":5,"column_end":43}},{"value":"/ - The axis has length 0 or 1 (It is converted to the new growing axis)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602660,"byte_end":602734,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602739,"byte_end":602742,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Ensure appending is efficient by for example starting from an empty array and/or always","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602747,"byte_end":602838,"line_start":437,"line_end":437,"column_start":5,"column_end":96}},{"value":"/ appending to an array along the same axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602843,"byte_end":602889,"line_start":438,"line_end":438,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602894,"byte_end":602897,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The amortized average complexity of the append, when appending along its growing axis, is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":602902,"byte_end":602995,"line_start":440,"line_end":440,"column_start":5,"column_end":98}},{"value":"/ O(*m*) where *m* is the number of individual elements to append.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603000,"byte_end":603068,"line_start":441,"line_end":441,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603073,"byte_end":603076,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the argument `array` does not matter to the same extent.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603081,"byte_end":603162,"line_start":443,"line_end":443,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603167,"byte_end":603170,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603175,"byte_end":603186,"line_start":445,"line_end":445,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, ArrayView, array, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603191,"byte_end":603240,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603245,"byte_end":603248,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ // create an empty array and append two rows at a time","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603253,"byte_end":603311,"line_start":448,"line_end":448,"column_start":5,"column_end":63}},{"value":"/ let mut a = Array::zeros((0, 4));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603316,"byte_end":603353,"line_start":449,"line_end":449,"column_start":5,"column_end":42}},{"value":"/ let ones  = ArrayView::from(&[1.; 8]).into_shape((2, 4)).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603358,"byte_end":603428,"line_start":450,"line_end":450,"column_start":5,"column_end":75}},{"value":"/ let zeros = ArrayView::from(&[0.; 8]).into_shape((2, 4)).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603433,"byte_end":603503,"line_start":451,"line_end":451,"column_start":5,"column_end":75}},{"value":"/ a.append(Axis(0), ones).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603508,"byte_end":603545,"line_start":452,"line_end":452,"column_start":5,"column_end":42}},{"value":"/ a.append(Axis(0), zeros).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603550,"byte_end":603588,"line_start":453,"line_end":453,"column_start":5,"column_end":43}},{"value":"/ a.append(Axis(0), ones).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603593,"byte_end":603630,"line_start":454,"line_end":454,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603635,"byte_end":603638,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603643,"byte_end":603658,"line_start":456,"line_end":456,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603663,"byte_end":603673,"line_start":457,"line_end":457,"column_start":5,"column_end":15}},{"value":"/     array![[1., 1., 1., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603678,"byte_end":603710,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/            [1., 1., 1., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603715,"byte_end":603747,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/            [0., 0., 0., 0.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603752,"byte_end":603784,"line_start":460,"line_end":460,"column_start":5,"column_end":37}},{"value":"/            [0., 0., 0., 0.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603789,"byte_end":603821,"line_start":461,"line_end":461,"column_start":5,"column_end":37}},{"value":"/            [1., 1., 1., 1.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603826,"byte_end":603858,"line_start":462,"line_end":462,"column_start":5,"column_end":37}},{"value":"/            [1., 1., 1., 1.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603863,"byte_end":603897,"line_start":463,"line_end":463,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":603902,"byte_end":603909,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618586,"byte_end":618597,"line_start":35,"line_end":35,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ArrayBase<S, D>>::assume_init","value":"pub unsafe fn assume_init(Self)\n-> ArrayBase<<S as RawDataSubst<A>>::Output, D>","parent":null,"children":[],"decl_id":null,"docs":" **Promise** that the array's elements are all fully initialized, and convert\n the array from element type `MaybeUninit<A>` to `A`.","sig":null,"attributes":[{"value":"/ **Promise** that the array's elements are all fully initialized, and convert","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":617970,"byte_end":618050,"line_start":23,"line_end":23,"column_start":5,"column_end":85}},{"value":"/ the array from element type `MaybeUninit<A>` to `A`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618055,"byte_end":618111,"line_start":24,"line_end":24,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618116,"byte_end":618119,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ For example, it can convert an `Array<MaybeUninit<f64>, D>` to `Array<f64, D>`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618124,"byte_end":618207,"line_start":26,"line_end":26,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618212,"byte_end":618215,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618220,"byte_end":618233,"line_start":28,"line_end":28,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618238,"byte_end":618241,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Safe to use if all the array's elements have been initialized.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618246,"byte_end":618312,"line_start":30,"line_end":30,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618317,"byte_end":618320,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Note that for owned and shared ownership arrays, the promise must include all of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618325,"byte_end":618413,"line_start":32,"line_end":32,"column_start":5,"column_end":93}},{"value":"/ array's storage; it is for example possible to slice these in place, but that must","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618418,"byte_end":618504,"line_start":33,"line_end":33,"column_start":5,"column_end":91}},{"value":"/ only be done after all elements have been initialized.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":618509,"byte_end":618567,"line_start":34,"line_end":34,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3667},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_1d.rs","byte_start":619628,"byte_end":619634,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<ArrayBase<S, Ix1>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<A> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an vector with the elements of the one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return an vector with the elements of the one-dimensional array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_1d.rs","byte_start":619548,"byte_end":619616,"line_start":21,"line_end":21,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621848,"byte_end":621851,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"row","qualname":"<ArrayBase<S, Ix2>>::row","value":"pub fn row(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of row `index`.","sig":null,"attributes":[{"value":"/ Return an array view of row `index`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621582,"byte_end":621622,"line_start":17,"line_end":17,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621627,"byte_end":621630,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621635,"byte_end":621678,"line_start":19,"line_end":19,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621683,"byte_end":621686,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621691,"byte_end":621698,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621703,"byte_end":621726,"line_start":22,"line_end":22,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621731,"byte_end":621774,"line_start":23,"line_end":23,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.row(0), array![1., 2.]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621779,"byte_end":621824,"line_start":24,"line_end":24,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621829,"byte_end":621836,"line_start":25,"line_end":25,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622291,"byte_end":622298,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"row_mut","qualname":"<ArrayBase<S, Ix2>>::row_mut","value":"pub fn row_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of row `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of row `index`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621975,"byte_end":622022,"line_start":33,"line_end":33,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622027,"byte_end":622030,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622035,"byte_end":622078,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622083,"byte_end":622086,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622091,"byte_end":622098,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622103,"byte_end":622126,"line_start":38,"line_end":38,"column_start":5,"column_end":28}},{"value":"/ let mut array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622131,"byte_end":622178,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/ array.row_mut(0)[1] = 5.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622183,"byte_end":622212,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(array, array![[1., 5.], [3., 4.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622217,"byte_end":622267,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622272,"byte_end":622279,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622680,"byte_end":622685,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"nrows","qualname":"<ArrayBase<S, Ix2>>::nrows","value":"pub fn nrows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","sig":null,"attributes":[{"value":"/ Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622436,"byte_end":622517,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622522,"byte_end":622525,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622530,"byte_end":622537,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622542,"byte_end":622565,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622570,"byte_end":622613,"line_start":54,"line_end":54,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.nrows(), 2usize);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622618,"byte_end":622656,"line_start":55,"line_end":55,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622661,"byte_end":622668,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623016,"byte_end":623022,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"column","qualname":"<ArrayBase<S, Ix2>>::column","value":"pub fn column(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of column `index`.","sig":null,"attributes":[{"value":"/ Return an array view of column `index`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622744,"byte_end":622787,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622792,"byte_end":622795,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622800,"byte_end":622843,"line_start":63,"line_end":63,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622848,"byte_end":622851,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622856,"byte_end":622863,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622868,"byte_end":622891,"line_start":66,"line_end":66,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622896,"byte_end":622939,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.column(0), array![1., 3.]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622944,"byte_end":622992,"line_start":68,"line_end":68,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":622997,"byte_end":623004,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623468,"byte_end":623478,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"column_mut","qualname":"<ArrayBase<S, Ix2>>::column_mut","value":"pub fn column_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of column `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of column `index`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623146,"byte_end":623196,"line_start":77,"line_end":77,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623201,"byte_end":623204,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623209,"byte_end":623252,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623257,"byte_end":623260,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623265,"byte_end":623272,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623277,"byte_end":623300,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/ let mut array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623305,"byte_end":623352,"line_start":83,"line_end":83,"column_start":5,"column_end":52}},{"value":"/ array.column_mut(0)[1] = 5.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623357,"byte_end":623389,"line_start":84,"line_end":84,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(array, array![[1., 2.], [5., 4.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623394,"byte_end":623444,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623449,"byte_end":623456,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3679},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623863,"byte_end":623868,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"ncols","qualname":"<ArrayBase<S, Ix2>>::ncols","value":"pub fn ncols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","sig":null,"attributes":[{"value":"/ Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623616,"byte_end":623700,"line_start":94,"line_end":94,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623705,"byte_end":623708,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623713,"byte_end":623720,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623725,"byte_end":623748,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623753,"byte_end":623796,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.ncols(), 2usize);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623801,"byte_end":623839,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623844,"byte_end":623851,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624339,"byte_end":624348,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"is_square","qualname":"<ArrayBase<S, Ix2>>::is_square","value":"pub fn is_square(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the array is square, false otherwise.","sig":null,"attributes":[{"value":"/ Return true if the array is square, false otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623927,"byte_end":623983,"line_start":105,"line_end":105,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623988,"byte_end":623991,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":623996,"byte_end":624010,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/ Sqaure:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624015,"byte_end":624026,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624031,"byte_end":624038,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624043,"byte_end":624066,"line_start":110,"line_end":110,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624071,"byte_end":624114,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ assert!(array.is_square());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624119,"byte_end":624150,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624155,"byte_end":624162,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ Not sqaure:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624167,"byte_end":624182,"line_start":114,"line_end":114,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624187,"byte_end":624194,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624199,"byte_end":624222,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2., 5.], [3., 4., 6.]];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624227,"byte_end":624278,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ assert!(!array.is_square());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624283,"byte_end":624315,"line_start":118,"line_end":118,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":624320,"byte_end":624327,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3686},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625468,"byte_end":625487,"line_start":32,"line_end":32,"column_start":12,"column_end":31},"name":"insert_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::insert_axis_inplace","value":"pub fn insert_axis_inplace(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis of length 1 at `axis`, modifying the shape and\n strides in-place.","sig":null,"attributes":[{"value":"/ Insert new array axis of length 1 at `axis`, modifying the shape and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":624958,"byte_end":625030,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ strides in-place.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625035,"byte_end":625056,"line_start":18,"line_end":18,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625061,"byte_end":625064,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625069,"byte_end":625113,"line_start":20,"line_end":20,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625118,"byte_end":625121,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625126,"byte_end":625133,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr2, arr3};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625138,"byte_end":625174,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625179,"byte_end":625182,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625187,"byte_end":625244,"line_start":25,"line_end":25,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625249,"byte_end":625284,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625289,"byte_end":625292,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ a.insert_axis_inplace(Axis(1));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625297,"byte_end":625332,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a, arr3(&[[[1, 2, 3]], [[4, 5, 6]]]).into_dyn());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625337,"byte_end":625401,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625406,"byte_end":625444,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625449,"byte_end":625456,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":626190,"byte_end":626208,"line_start":53,"line_end":53,"column_start":12,"column_end":30},"name":"index_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::index_axis_inplace","value":"pub fn index_axis_inplace(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis,\n modifying the shape and strides in-place.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625672,"byte_end":625743,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ modifying the shape and strides in-place.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625748,"byte_end":625793,"line_start":39,"line_end":39,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625798,"byte_end":625801,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625806,"byte_end":625859,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625864,"byte_end":625867,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625872,"byte_end":625879,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr1, arr2};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625884,"byte_end":625920,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625925,"byte_end":625928,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625933,"byte_end":625990,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":625995,"byte_end":626030,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":626035,"byte_end":626038,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ a.index_axis_inplace(Axis(1), 1);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":626043,"byte_end":626080,"line_start":49,"line_end":49,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a, arr1(&[2, 5]).into_dyn());","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":626085,"byte_end":626129,"line_start":50,"line_end":50,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":626134,"byte_end":626166,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":626171,"byte_end":626178,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627300,"byte_end":627303,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"sum","qualname":"<ArrayBase<S, D>>::sum","value":"pub fn sum(&Self) -> A where A: Clone + Add<Output = A> + num_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627071,"byte_end":627119,"line_start":23,"line_end":23,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627124,"byte_end":627127,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627132,"byte_end":627139,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627144,"byte_end":627166,"line_start":26,"line_end":26,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627171,"byte_end":627174,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627179,"byte_end":627207,"line_start":28,"line_end":28,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627212,"byte_end":627242,"line_start":29,"line_end":29,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.sum(), 10.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627247,"byte_end":627276,"line_start":30,"line_end":30,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627281,"byte_end":627288,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628050,"byte_end":628060,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"scalar_sum","qualname":"<ArrayBase<S, D>>::scalar_sum","value":"pub fn scalar_sum(&Self) -> A where A: Clone + Add<Output = A> +\nnum_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627872,"byte_end":627920,"line_start":50,"line_end":50,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627925,"byte_end":627928,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ *This method has been renamed to `.sum()`*","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627933,"byte_end":627979,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"deprecated(note = \"renamed to `sum`\", since = \"0.15.0\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627984,"byte_end":628038,"line_start":53,"line_end":53,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628597,"byte_end":628601,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"mean","qualname":"<ArrayBase<S, D>>::mean","value":"pub fn mean(&Self) -> Option<A> where A: Clone + FromPrimitive + Add<Output =\nA> + Div<Output = A> + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the [arithmetic mean] x̅ of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [arithmetic mean] x̅ of all elements in the array:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628174,"byte_end":628241,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628246,"byte_end":628249,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628254,"byte_end":628265,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628270,"byte_end":628283,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628288,"byte_end":628312,"line_start":65,"line_end":65,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628317,"byte_end":628331,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628336,"byte_end":628343,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628348,"byte_end":628351,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `None` is returned.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628356,"byte_end":628402,"line_start":69,"line_end":69,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628407,"byte_end":628410,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628415,"byte_end":628504,"line_start":71,"line_end":71,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628509,"byte_end":628512,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ [arithmetic mean]: https://en.wikipedia.org/wiki/Arithmetic_mean","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":628517,"byte_end":628585,"line_start":73,"line_end":73,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629250,"byte_end":629257,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"product","qualname":"<ArrayBase<S, D>>::product","value":"pub fn product(&Self) -> A where A: Clone + Mul<Output = A> + num_traits::One","parent":null,"children":[],"decl_id":null,"docs":" Return the product of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the product of all elements in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629013,"byte_end":629065,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629070,"byte_end":629073,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629078,"byte_end":629085,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629090,"byte_end":629112,"line_start":91,"line_end":91,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629117,"byte_end":629120,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629125,"byte_end":629153,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629158,"byte_end":629188,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.product(), 24.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629193,"byte_end":629226,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629231,"byte_end":629238,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630977,"byte_end":630980,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"var","qualname":"<ArrayBase<S, D>>::var","value":"pub fn var(&Self, A) -> A where A: Float + FromPrimitive","parent":null,"children":[],"decl_id":null,"docs":" Return variance of elements in the array.","sig":null,"attributes":[{"value":"/ Return variance of elements in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629821,"byte_end":629866,"line_start":115,"line_end":115,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629871,"byte_end":629874,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The variance is computed using the [Welford one-pass","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629879,"byte_end":629935,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/ algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629940,"byte_end":629993,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":629998,"byte_end":630001,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630006,"byte_end":630076,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population variance, use `ddof = 0`, or to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630081,"byte_end":630153,"line_start":121,"line_end":121,"column_start":5,"column_end":77}},{"value":"/ calculate the sample variance, use `ddof = 1`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630158,"byte_end":630208,"line_start":122,"line_end":122,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630213,"byte_end":630216,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The variance is defined as:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630221,"byte_end":630252,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630257,"byte_end":630260,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630265,"byte_end":630276,"line_start":126,"line_end":126,"column_start":5,"column_end":16}},{"value":"/               1       n","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630281,"byte_end":630308,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/ variance = ――――――――   ∑ (xᵢ - x̅)²","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630313,"byte_end":630373,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/            n - ddof  i=1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630378,"byte_end":630406,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630411,"byte_end":630418,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630423,"byte_end":630426,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630431,"byte_end":630440,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630445,"byte_end":630448,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630453,"byte_end":630464,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630469,"byte_end":630482,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630487,"byte_end":630511,"line_start":136,"line_end":136,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630516,"byte_end":630530,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630535,"byte_end":630542,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630547,"byte_end":630550,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630555,"byte_end":630594,"line_start":140,"line_end":140,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630599,"byte_end":630602,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630607,"byte_end":630669,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630674,"byte_end":630677,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630682,"byte_end":630695,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630700,"byte_end":630703,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630708,"byte_end":630715,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630720,"byte_end":630743,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630748,"byte_end":630783,"line_start":148,"line_end":148,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630788,"byte_end":630791,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let a = array![1., -4.32, 1.14, 0.32];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630796,"byte_end":630838,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ let var = a.var(1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630843,"byte_end":630867,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/ assert_abs_diff_eq!(var, 6.7331, epsilon = 1e-4);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630872,"byte_end":630925,"line_start":152,"line_end":152,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630930,"byte_end":630937,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":630942,"byte_end":630965,"line_start":154,"line_end":154,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633118,"byte_end":633121,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"std","qualname":"<ArrayBase<S, D>>::std","value":"pub fn std(&Self, A) -> A where A: Float + FromPrimitive","parent":null,"children":[],"decl_id":null,"docs":" Return standard deviation of elements in the array.","sig":null,"attributes":[{"value":"/ Return standard deviation of elements in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":631838,"byte_end":631893,"line_start":180,"line_end":180,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":631898,"byte_end":631901,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is computed from the variance using","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":631906,"byte_end":631968,"line_start":182,"line_end":182,"column_start":5,"column_end":67}},{"value":"/ the [Welford one-pass algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":631973,"byte_end":632048,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632053,"byte_end":632056,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632061,"byte_end":632131,"line_start":185,"line_end":185,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population standard deviation, use `ddof = 0`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632136,"byte_end":632212,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ or to calculate the sample standard deviation, use `ddof = 1`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632217,"byte_end":632283,"line_start":187,"line_end":187,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632288,"byte_end":632291,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is defined as:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632296,"byte_end":632337,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632342,"byte_end":632345,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632350,"byte_end":632361,"line_start":191,"line_end":191,"column_start":5,"column_end":16}},{"value":"/               ⎛    1       n          ⎞","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632366,"byte_end":632413,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/ stddev = sqrt ⎜ ――――――――   ∑ (xᵢ - x̅)²⎟","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632418,"byte_end":632488,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/               ⎝ n - ddof  i=1         ⎠","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632493,"byte_end":632540,"line_start":194,"line_end":194,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632545,"byte_end":632552,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632557,"byte_end":632560,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632565,"byte_end":632574,"line_start":197,"line_end":197,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632579,"byte_end":632582,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632587,"byte_end":632598,"line_start":199,"line_end":199,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632603,"byte_end":632616,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632621,"byte_end":632645,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632650,"byte_end":632664,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632669,"byte_end":632676,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632681,"byte_end":632684,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632689,"byte_end":632728,"line_start":205,"line_end":205,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632733,"byte_end":632736,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632741,"byte_end":632803,"line_start":207,"line_end":207,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632808,"byte_end":632811,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632816,"byte_end":632829,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632834,"byte_end":632837,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632842,"byte_end":632849,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632854,"byte_end":632877,"line_start":212,"line_end":212,"column_start":5,"column_end":28}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632882,"byte_end":632917,"line_start":213,"line_end":213,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632922,"byte_end":632925,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ let a = array![1., -4.32, 1.14, 0.32];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632930,"byte_end":632972,"line_start":215,"line_end":215,"column_start":5,"column_end":47}},{"value":"/ let stddev = a.std(1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":632977,"byte_end":633004,"line_start":216,"line_end":216,"column_start":5,"column_end":32}},{"value":"/ assert_abs_diff_eq!(stddev, 2.59483, epsilon = 1e-4);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633009,"byte_end":633066,"line_start":217,"line_end":217,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633071,"byte_end":633078,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633083,"byte_end":633106,"line_start":219,"line_end":219,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633715,"byte_end":633723,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"sum_axis","qualname":"<ArrayBase<S, D>>::sum_axis","value":"pub fn sum_axis(&Self, Axis) -> Array<A, D::Smaller> where A: Clone + Zero +\nAdd<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return sum along `axis`.","sig":null,"attributes":[{"value":"/ Return sum along `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633234,"byte_end":633262,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633267,"byte_end":633270,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633275,"byte_end":633282,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633287,"byte_end":633333,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633338,"byte_end":633341,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633346,"byte_end":633378,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633383,"byte_end":633417,"line_start":233,"line_end":233,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633422,"byte_end":633434,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/     a.sum_axis(Axis(0)) == aview1(&[5., 7., 9.]) &&","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633439,"byte_end":633494,"line_start":235,"line_end":235,"column_start":5,"column_end":60}},{"value":"/     a.sum_axis(Axis(1)) == aview1(&[6., 15.]) &&","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633499,"byte_end":633551,"line_start":236,"line_end":236,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633556,"byte_end":633559,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/     a.sum_axis(Axis(0)).sum_axis(Axis(0)) == aview0(&21.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633564,"byte_end":633625,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633630,"byte_end":633636,"line_start":239,"line_end":239,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633641,"byte_end":633648,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633653,"byte_end":633656,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":633661,"byte_end":633703,"line_start":242,"line_end":242,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634912,"byte_end":634921,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"mean_axis","qualname":"<ArrayBase<S, D>>::mean_axis","value":"pub fn mean_axis(&Self, Axis) -> Option<Array<A, D::Smaller>> where A: Clone +\nZero + FromPrimitive + Add<Output = A> + Div<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return mean along `axis`.","sig":null,"attributes":[{"value":"/ Return mean along `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634265,"byte_end":634294,"line_start":260,"line_end":260,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634299,"byte_end":634302,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Return `None` if the length of the axis is zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634307,"byte_end":634359,"line_start":262,"line_end":262,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634364,"byte_end":634367,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `A::from_usize()`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634372,"byte_end":634437,"line_start":264,"line_end":264,"column_start":5,"column_end":70}},{"value":"/ fails for the axis length.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634442,"byte_end":634472,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634477,"byte_end":634480,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634485,"byte_end":634492,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634497,"byte_end":634543,"line_start":268,"line_end":268,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634548,"byte_end":634551,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634556,"byte_end":634588,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634593,"byte_end":634627,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634632,"byte_end":634644,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/     a.mean_axis(Axis(0)).unwrap() == aview1(&[2.5, 3.5, 4.5]) &&","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634649,"byte_end":634717,"line_start":273,"line_end":273,"column_start":5,"column_end":73}},{"value":"/     a.mean_axis(Axis(1)).unwrap() == aview1(&[2., 5.]) &&","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634722,"byte_end":634783,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634788,"byte_end":634791,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/     a.mean_axis(Axis(0)).unwrap().mean_axis(Axis(0)).unwrap() == aview0(&3.5)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634796,"byte_end":634877,"line_start":276,"line_end":276,"column_start":5,"column_end":86}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634882,"byte_end":634888,"line_start":277,"line_end":277,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":634893,"byte_end":634900,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636732,"byte_end":636740,"line_start":338,"line_end":338,"column_start":12,"column_end":20},"name":"var_axis","qualname":"<ArrayBase<S, D>>::var_axis","value":"pub fn var_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return variance along `axis`.","sig":null,"attributes":[{"value":"/ Return variance along `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635436,"byte_end":635469,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635474,"byte_end":635477,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ The variance is computed using the [Welford one-pass","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635482,"byte_end":635538,"line_start":297,"line_end":297,"column_start":5,"column_end":61}},{"value":"/ algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635543,"byte_end":635596,"line_start":298,"line_end":298,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635601,"byte_end":635604,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635609,"byte_end":635679,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population variance, use `ddof = 0`, or to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635684,"byte_end":635756,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ calculate the sample variance, use `ddof = 1`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635761,"byte_end":635811,"line_start":302,"line_end":302,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635816,"byte_end":635819,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ The variance is defined as:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635824,"byte_end":635855,"line_start":304,"line_end":304,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635860,"byte_end":635863,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635868,"byte_end":635879,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/               1       n","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635884,"byte_end":635911,"line_start":307,"line_end":307,"column_start":5,"column_end":32}},{"value":"/ variance = ――――――――   ∑ (xᵢ - x̅)²","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635916,"byte_end":635976,"line_start":308,"line_end":308,"column_start":5,"column_end":43}},{"value":"/            n - ddof  i=1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":635981,"byte_end":636009,"line_start":309,"line_end":309,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636014,"byte_end":636021,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636026,"byte_end":636029,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636034,"byte_end":636043,"line_start":312,"line_end":312,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636048,"byte_end":636051,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636056,"byte_end":636067,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636072,"byte_end":636085,"line_start":315,"line_end":315,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636090,"byte_end":636114,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636119,"byte_end":636133,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636138,"byte_end":636145,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636150,"byte_end":636153,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636158,"byte_end":636196,"line_start":320,"line_end":320,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636201,"byte_end":636204,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636209,"byte_end":636282,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636287,"byte_end":636357,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636362,"byte_end":636395,"line_start":324,"line_end":324,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636400,"byte_end":636403,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636408,"byte_end":636421,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636426,"byte_end":636429,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636434,"byte_end":636441,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636446,"byte_end":636484,"line_start":329,"line_end":329,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636489,"byte_end":636492,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636497,"byte_end":636525,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636530,"byte_end":636558,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636563,"byte_end":636593,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ let var = a.var_axis(Axis(0), 1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636598,"byte_end":636636,"line_start":334,"line_end":334,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(var, aview1(&[4., 4.]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636641,"byte_end":636680,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636685,"byte_end":636692,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":636697,"byte_end":636720,"line_start":337,"line_end":337,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":639275,"byte_end":639283,"line_start":407,"line_end":407,"column_start":12,"column_end":20},"name":"std_axis","qualname":"<ArrayBase<S, D>>::std_axis","value":"pub fn std_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return standard deviation along `axis`.","sig":null,"attributes":[{"value":"/ Return standard deviation along `axis`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":637856,"byte_end":637899,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":637904,"byte_end":637907,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is computed from the variance using","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":637912,"byte_end":637974,"line_start":366,"line_end":366,"column_start":5,"column_end":67}},{"value":"/ the [Welford one-pass algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":637979,"byte_end":638054,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638059,"byte_end":638062,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638067,"byte_end":638137,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population standard deviation, use `ddof = 0`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638142,"byte_end":638218,"line_start":370,"line_end":370,"column_start":5,"column_end":81}},{"value":"/ or to calculate the sample standard deviation, use `ddof = 1`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638223,"byte_end":638289,"line_start":371,"line_end":371,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638294,"byte_end":638297,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is defined as:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638302,"byte_end":638343,"line_start":373,"line_end":373,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638348,"byte_end":638351,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638356,"byte_end":638367,"line_start":375,"line_end":375,"column_start":5,"column_end":16}},{"value":"/               ⎛    1       n          ⎞","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638372,"byte_end":638419,"line_start":376,"line_end":376,"column_start":5,"column_end":48}},{"value":"/ stddev = sqrt ⎜ ――――――――   ∑ (xᵢ - x̅)²⎟","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638424,"byte_end":638494,"line_start":377,"line_end":377,"column_start":5,"column_end":49}},{"value":"/               ⎝ n - ddof  i=1         ⎠","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638499,"byte_end":638546,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638551,"byte_end":638558,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638563,"byte_end":638566,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638571,"byte_end":638580,"line_start":381,"line_end":381,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638585,"byte_end":638588,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638593,"byte_end":638604,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638609,"byte_end":638622,"line_start":384,"line_end":384,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638627,"byte_end":638651,"line_start":385,"line_end":385,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638656,"byte_end":638670,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638675,"byte_end":638682,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638687,"byte_end":638690,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638695,"byte_end":638733,"line_start":389,"line_end":389,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638738,"byte_end":638741,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638746,"byte_end":638819,"line_start":391,"line_end":391,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638824,"byte_end":638894,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638899,"byte_end":638932,"line_start":393,"line_end":393,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638937,"byte_end":638940,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638945,"byte_end":638958,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638963,"byte_end":638966,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638971,"byte_end":638978,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":638983,"byte_end":639021,"line_start":398,"line_end":398,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":639026,"byte_end":639029,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":639034,"byte_end":639062,"line_start":400,"line_end":400,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":639067,"byte_end":639095,"line_start":401,"line_end":401,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":639100,"byte_end":639130,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ let stddev = a.std_axis(Axis(0), 1.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":639135,"byte_end":639176,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stddev, aview1(&[2., 2.]));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":639181,"byte_end":639223,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":639228,"byte_end":639235,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":639240,"byte_end":639263,"line_start":406,"line_end":406,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":3721},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3726}],"decl_id":null,"docs":" Linear algebra.\n","sig":null,"attributes":[{"value":"/ Linear algebra.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/mod.rs","byte_start":639828,"byte_end":639847,"line_start":9,"line_end":9,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":642231,"byte_end":642234,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix1>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform dot product or matrix multiplication of arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform dot product or matrix multiplication of arrays `self` and `rhs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641347,"byte_end":641423,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641428,"byte_end":641431,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641436,"byte_end":641505,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641510,"byte_end":641513,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is one-dimensional, then the operation is a vector dot","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641518,"byte_end":641585,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ product, which is the sum of the elementwise products (no conjugation","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641590,"byte_end":641663,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ of complex operands, and thus not their inner product). In this case,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641668,"byte_end":641741,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `self` and `rhs` must be the same length.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641746,"byte_end":641791,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641796,"byte_end":641799,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is two-dimensional, then the operation is matrix","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641804,"byte_end":641865,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/ multiplication, where `self` is treated as a row vector. In this case,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641870,"byte_end":641944,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ if `self` is shape *M*, then `rhs` is shape *M* × *N* and the result is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641949,"byte_end":642025,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ shape *N*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":642030,"byte_end":642044,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":642049,"byte_end":642052,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the array shapes are incompatible.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":642057,"byte_end":642113,"line_start":64,"line_end":64,"column_start":5,"column_end":61}},{"value":"/ *Note:* If enabled, uses blas `dot` for elements of `f32, f64` when memory","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":642118,"byte_end":642196,"line_start":65,"line_end":65,"column_start":5,"column_end":83}},{"value":"/ layout allows.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":642201,"byte_end":642219,"line_start":66,"line_end":66,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":3748},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645439,"byte_end":645442,"line_start":169,"line_end":169,"column_start":11,"column_end":14},"name":"Dot","qualname":"::linalg::impl_linalg::Dot","value":"Dot<Rhs>","parent":null,"children":[{"krate":0,"index":3750},{"krate":0,"index":3751}],"decl_id":null,"docs":" Matrix Multiplication","sig":null,"attributes":[{"value":"/ Matrix Multiplication","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645312,"byte_end":645337,"line_start":165,"line_end":165,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645338,"byte_end":645341,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ For two-dimensional arrays, the dot method computes the matrix","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645342,"byte_end":645408,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/ multiplication.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645409,"byte_end":645428,"line_start":168,"line_end":168,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":3750},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645561,"byte_end":645567,"line_start":173,"line_end":173,"column_start":10,"column_end":16},"name":"Output","qualname":"::linalg::impl_linalg::Dot::Output","value":"type Output;","parent":{"krate":0,"index":3748},"children":[],"decl_id":null,"docs":" The result of the operation.","sig":null,"attributes":[{"value":"/ The result of the operation.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645454,"byte_end":645486,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645491,"byte_end":645494,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ For two-dimensional arrays: a rectangular array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645499,"byte_end":645551,"line_start":172,"line_end":172,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645576,"byte_end":645579,"line_start":174,"line_end":174,"column_start":8,"column_end":11},"name":"dot","qualname":"::linalg::impl_linalg::Dot::dot","value":"pub fn dot(&Self, &Rhs) -> Self::Output","parent":{"krate":0,"index":3748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647955,"byte_end":647958,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix2>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform matrix multiplication of rectangular arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform matrix multiplication of rectangular arrays `self` and `rhs`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":646910,"byte_end":646983,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":646988,"byte_end":646991,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":646996,"byte_end":647065,"line_start":226,"line_end":226,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647070,"byte_end":647073,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If Rhs is two-dimensional, they array shapes must agree in the way that","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647078,"byte_end":647153,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ if `self` is *M* × *N*, then `rhs` is *N* × *K*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647158,"byte_end":647212,"line_start":229,"line_end":229,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647217,"byte_end":647220,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Return a result array with shape *M* × *K*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647225,"byte_end":647273,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647278,"byte_end":647281,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible or the number of elements in the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647286,"byte_end":647360,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ result would overflow `isize`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647365,"byte_end":647399,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647404,"byte_end":647407,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ *Note:* If enabled, uses blas `gemv/gemm` for elements of `f32, f64`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647412,"byte_end":647484,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ when memory layout allows. The default matrixmultiply backend","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647489,"byte_end":647554,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/ is otherwise used for `f32, f64` for all memory layouts.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647559,"byte_end":647619,"line_start":238,"line_end":238,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647624,"byte_end":647627,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647632,"byte_end":647639,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647644,"byte_end":647666,"line_start":241,"line_end":241,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647671,"byte_end":647674,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647679,"byte_end":647707,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/                [0., 1.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647712,"byte_end":647742,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/ let b = arr2(&[[1., 2.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647747,"byte_end":647775,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/                [2., 3.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647780,"byte_end":647810,"line_start":246,"line_end":246,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647815,"byte_end":647818,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647823,"byte_end":647835,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/     a.dot(&b) == arr2(&[[5., 8.],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647840,"byte_end":647877,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/                         [2., 3.]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647882,"byte_end":647920,"line_start":250,"line_end":250,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647925,"byte_end":647931,"line_start":251,"line_end":251,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":647936,"byte_end":647943,"line_start":252,"line_end":252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":651048,"byte_end":651058,"line_start":355,"line_end":355,"column_start":12,"column_end":22},"name":"scaled_add","qualname":"<ArrayBase<S, D>>::scaled_add","value":"pub fn scaled_add<S2, E>(&mut Self, A, &ArrayBase<S2, E>) where S: DataMut,\nS2: Data<Elem = A>, A: LinalgScalar, E: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Perform the operation `self += alpha * rhs` efficiently, where\n `alpha` is a scalar and `rhs` is another array. This operation is\n also known as `axpy` in BLAS.","sig":null,"attributes":[{"value":"/ Perform the operation `self += alpha * rhs` efficiently, where","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650712,"byte_end":650778,"line_start":348,"line_end":348,"column_start":5,"column_end":71}},{"value":"/ `alpha` is a scalar and `rhs` is another array. This operation is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650783,"byte_end":650852,"line_start":349,"line_end":349,"column_start":5,"column_end":74}},{"value":"/ also known as `axpy` in BLAS.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650857,"byte_end":650890,"line_start":350,"line_end":350,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650895,"byte_end":650898,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650903,"byte_end":650975,"line_start":352,"line_end":352,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650980,"byte_end":650983,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650988,"byte_end":651036,"line_start":354,"line_end":354,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":3795},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659919,"byte_end":659934,"line_start":631,"line_end":631,"column_start":8,"column_end":23},"name":"general_mat_mul","qualname":"::linalg::impl_linalg::general_mat_mul","value":"pub fn general_mat_mul<A, S1, S2,\n                       S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix2>, A,\n                           &mut ArrayBase<S3, Ix2>) where S1: Data<Elem = A>,\nS2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-matrix multiplication.","sig":null,"attributes":[{"value":"/ General matrix-matrix multiplication.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659454,"byte_end":659495,"line_start":620,"line_end":620,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659496,"byte_end":659499,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ Compute C ← α A B + β C","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659500,"byte_end":659531,"line_start":622,"line_end":622,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659532,"byte_end":659535,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ The array shapes must agree in the way that","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659536,"byte_end":659583,"line_start":624,"line_end":624,"column_start":1,"column_end":48}},{"value":"/ if `a` is *M* × *N*, then `b` is *N* × *K* and `c` is *M* × *K*.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659584,"byte_end":659655,"line_start":625,"line_end":625,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659656,"byte_end":659659,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659660,"byte_end":659715,"line_start":627,"line_end":627,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemm` for elements of `f32, f64` when memory","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659716,"byte_end":659795,"line_start":628,"line_end":628,"column_start":1,"column_end":80}},{"value":"/ layout allows.  The default matrixmultiply backend is otherwise used for","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659796,"byte_end":659872,"line_start":629,"line_end":629,"column_start":1,"column_end":77}},{"value":"/ `f32, f64` for all memory layouts.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":659873,"byte_end":659911,"line_start":630,"line_end":630,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":3800},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660858,"byte_end":660877,"line_start":663,"line_end":663,"column_start":8,"column_end":27},"name":"general_mat_vec_mul","qualname":"::linalg::impl_linalg::general_mat_vec_mul","value":"pub fn general_mat_vec_mul<A, S1, S2,\n                           S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix1>, A,\n                               &mut ArrayBase<S3, Ix1>) where S1: Data<Elem =\nA>, S2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-vector multiplication.","sig":null,"attributes":[{"value":"/ General matrix-vector multiplication.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660439,"byte_end":660480,"line_start":652,"line_end":652,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660481,"byte_end":660484,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ Compute y ← α A x + β y","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660485,"byte_end":660516,"line_start":654,"line_end":654,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660517,"byte_end":660520,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ where A is a *M* × *N* matrix and x is an *N*-element column vector and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660521,"byte_end":660597,"line_start":656,"line_end":656,"column_start":1,"column_end":76}},{"value":"/ y an *M*-element column vector (one dimensional arrays).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660598,"byte_end":660658,"line_start":657,"line_end":657,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660659,"byte_end":660662,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660663,"byte_end":660718,"line_start":659,"line_end":659,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemv` for elements of `f32, f64` when memory","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660719,"byte_end":660798,"line_start":660,"line_end":660,"column_start":1,"column_end":80}},{"value":"/ layout allows.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660799,"byte_end":660817,"line_start":661,"line_end":661,"column_start":1,"column_end":19}},{"value":"allow(clippy :: collapsible_if)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":660818,"byte_end":660850,"line_start":662,"line_end":662,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":3811},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":665083,"byte_end":665087,"line_start":775,"line_end":775,"column_start":8,"column_end":12},"name":"kron","qualname":"::linalg::impl_linalg::kron","value":"pub fn kron<A, S1, S2>(&ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix2>)\n-> Array<A, Ix2> where S1: Data<Elem = A>, S2: Data<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" Kronecker product of 2D matrices.","sig":null,"attributes":[{"value":"/ Kronecker product of 2D matrices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":664896,"byte_end":664933,"line_start":771,"line_end":771,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":664934,"byte_end":664937,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ The kronecker product of a LxN matrix A and a MxR matrix B is a (L*M)x(N*R)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":664938,"byte_end":665017,"line_start":773,"line_end":773,"column_start":1,"column_end":80}},{"value":"/ matrix K formed by the block multiplication A_ij * B.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":665018,"byte_end":665075,"line_start":774,"line_end":774,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":3830},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671824,"byte_end":671837,"line_start":34,"line_end":34,"column_start":11,"column_end":24},"name":"ScalarOperand","qualname":"::impl_ops::ScalarOperand","value":"ScalarOperand: 'static + Clone","parent":null,"children":[],"decl_id":null,"docs":" Elements that can be used as direct operands in arithmetic with arrays.","sig":null,"attributes":[{"value":"/ Elements that can be used as direct operands in arithmetic with arrays.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":670741,"byte_end":670816,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":670817,"byte_end":670820,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ For example, `f64` is a `ScalarOperand` which means that for an array `a`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":670821,"byte_end":670899,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ arithmetic like `a + 1.0`, and, `a * 2.`, and `a += 3.` are allowed.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":670900,"byte_end":670972,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":670973,"byte_end":670976,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In the description below, let `A` be an array or array view,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":670977,"byte_end":671041,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ let `B` be an array with owned data,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671042,"byte_end":671082,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ and let `C` be an array with mutable data.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671083,"byte_end":671129,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671130,"byte_end":671133,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `ScalarOperand` determines for which scalars `K` operations `&A @ K`, and `B @ K`,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671134,"byte_end":671220,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/ and `C @= K` are defined, as ***right hand side operands***, for applicable","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671221,"byte_end":671300,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ arithmetic operators (denoted `@`).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671301,"byte_end":671340,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671341,"byte_end":671344,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ***Left hand side*** scalar operands are not related to this trait","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671345,"byte_end":671415,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ (they need one `impl` per concrete scalar type); but they are still","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671416,"byte_end":671487,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ implemented for the same types, allowing operations","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671488,"byte_end":671543,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/ `K @ &A`, and `K @ B` for primitive numeric types `K`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671544,"byte_end":671602,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671603,"byte_end":671606,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait ***does not*** limit which elements can be stored in an array in general.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671607,"byte_end":671695,"line_start":31,"line_end":31,"column_start":1,"column_end":89}},{"value":"/ Non-`ScalarOperand` types can still participate in arithmetic as array elements in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671696,"byte_end":671782,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ in array-array operations.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671783,"byte_end":671813,"line_start":33,"line_end":33,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3924},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689553,"byte_end":689563,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayView>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-only array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-only array view borrowing its data from a slice.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688654,"byte_end":688720,"line_start":23,"line_end":23,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688725,"byte_end":688728,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Checks whether `shape` are compatible with the slice's","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688733,"byte_end":688791,"line_start":25,"line_end":25,"column_start":5,"column_end":63}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688796,"byte_end":688845,"line_start":26,"line_end":26,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688850,"byte_end":688853,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688858,"byte_end":688865,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688870,"byte_end":688897,"line_start":29,"line_end":29,"column_start":5,"column_end":32}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688902,"byte_end":688924,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688929,"byte_end":688959,"line_start":31,"line_end":31,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688964,"byte_end":688967,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ // advanced example where we are even specifying exact strides to use (which is optional).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688972,"byte_end":689066,"line_start":33,"line_end":33,"column_start":5,"column_end":99}},{"value":"/ let s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689071,"byte_end":689126,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/ let a = ArrayView::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689131,"byte_end":689194,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/                               &s).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689199,"byte_end":689246,"line_start":36,"line_end":36,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689251,"byte_end":689254,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689259,"byte_end":689271,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[0, 2],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689276,"byte_end":689304,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689309,"byte_end":689337,"line_start":40,"line_end":40,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689342,"byte_end":689372,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689377,"byte_end":689405,"line_start":42,"line_end":42,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689410,"byte_end":689438,"line_start":43,"line_end":43,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689443,"byte_end":689474,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689479,"byte_end":689485,"line_start":45,"line_end":45,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689490,"byte_end":689529,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":689534,"byte_end":689541,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692410,"byte_end":692424,"line_start":107,"line_end":107,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayView>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayView<A, D>` from shape information and a raw pointer to\n the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayView<A, D>` from shape information and a raw pointer to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690174,"byte_end":690249,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ the elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690254,"byte_end":690271,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690276,"byte_end":690279,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690284,"byte_end":690296,"line_start":66,"line_end":66,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690301,"byte_end":690304,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690309,"byte_end":690373,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690378,"byte_end":690381,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690386,"byte_end":690460,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be not mutably","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690465,"byte_end":690533,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/   aliased for the duration of `'a`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690538,"byte_end":690577,"line_start":72,"line_end":72,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690582,"byte_end":690585,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690590,"byte_end":690654,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690659,"byte_end":690693,"line_start":75,"line_end":75,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690698,"byte_end":690701,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690706,"byte_end":690777,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690782,"byte_end":690853,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690858,"byte_end":690932,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690937,"byte_end":690940,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690945,"byte_end":690966,"line_start":81,"line_end":81,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690971,"byte_end":690974,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":690979,"byte_end":691054,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691059,"byte_end":691134,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691139,"byte_end":691217,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691222,"byte_end":691300,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691305,"byte_end":691371,"line_start":87,"line_end":87,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691376,"byte_end":691379,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691384,"byte_end":691459,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691464,"byte_end":691539,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691544,"byte_end":691619,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691624,"byte_end":691693,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691698,"byte_end":691701,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691706,"byte_end":691779,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691784,"byte_end":691859,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691864,"byte_end":691942,"line_start":96,"line_end":96,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":691947,"byte_end":692022,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692027,"byte_end":692030,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692035,"byte_end":692107,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692112,"byte_end":692115,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692120,"byte_end":692155,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692160,"byte_end":692163,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692168,"byte_end":692247,"line_start":103,"line_end":103,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692252,"byte_end":692286,"line_start":104,"line_end":104,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692291,"byte_end":692294,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692299,"byte_end":692391,"line_start":106,"line_end":106,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3933},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693561,"byte_end":693571,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayViewMut>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a mut [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-write array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-write array view borrowing its data from a slice.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692697,"byte_end":692764,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692769,"byte_end":692772,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Checks whether `dim` and `strides` are compatible with the slice's","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692777,"byte_end":692847,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692852,"byte_end":692901,"line_start":123,"line_end":123,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692906,"byte_end":692909,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692914,"byte_end":692921,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayViewMut;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692926,"byte_end":692956,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692961,"byte_end":692983,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692988,"byte_end":693018,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693023,"byte_end":693026,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693031,"byte_end":693090,"line_start":130,"line_end":130,"column_start":5,"column_end":64}},{"value":"/ let mut a = ArrayViewMut::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693095,"byte_end":693165,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/                                      &mut s).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693170,"byte_end":693228,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693233,"byte_end":693236,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ a[[0, 0, 0]] = 1;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693241,"byte_end":693262,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/ assert!(","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693267,"byte_end":693279,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1, 2],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693284,"byte_end":693312,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693317,"byte_end":693345,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693350,"byte_end":693380,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693385,"byte_end":693413,"line_start":139,"line_end":139,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693418,"byte_end":693446,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693451,"byte_end":693482,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693487,"byte_end":693493,"line_start":142,"line_end":142,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693498,"byte_end":693537,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":693542,"byte_end":693549,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696421,"byte_end":696435,"line_start":204,"line_end":204,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayViewMut>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayViewMut<A, D>` from shape information and a\n raw pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayViewMut<A, D>` from shape information and a","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694194,"byte_end":694257,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/ raw pointer to the elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694262,"byte_end":694294,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694299,"byte_end":694302,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694307,"byte_end":694319,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694324,"byte_end":694327,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694332,"byte_end":694396,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694401,"byte_end":694404,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694409,"byte_end":694483,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be aliased for the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694488,"byte_end":694560,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/   duration of `'a`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694565,"byte_end":694588,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694593,"byte_end":694596,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694601,"byte_end":694665,"line_start":171,"line_end":171,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694670,"byte_end":694704,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694709,"byte_end":694712,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694717,"byte_end":694788,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694793,"byte_end":694864,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694869,"byte_end":694943,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694948,"byte_end":694951,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694956,"byte_end":694977,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694982,"byte_end":694985,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":694990,"byte_end":695065,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695070,"byte_end":695145,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695150,"byte_end":695228,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695233,"byte_end":695311,"line_start":183,"line_end":183,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695316,"byte_end":695382,"line_start":184,"line_end":184,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695387,"byte_end":695390,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695395,"byte_end":695470,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695475,"byte_end":695550,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695555,"byte_end":695630,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695635,"byte_end":695704,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695709,"byte_end":695712,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695717,"byte_end":695790,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695795,"byte_end":695870,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695875,"byte_end":695953,"line_start":193,"line_end":193,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":695958,"byte_end":696033,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696038,"byte_end":696041,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696046,"byte_end":696118,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696123,"byte_end":696126,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696131,"byte_end":696166,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696171,"byte_end":696174,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696179,"byte_end":696258,"line_start":200,"line_end":200,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696263,"byte_end":696297,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696302,"byte_end":696305,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696310,"byte_end":696402,"line_start":203,"line_end":203,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696724,"byte_end":696732,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayViewMut>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayViewMut where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696607,"byte_end":696685,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696690,"byte_end":696712,"line_start":212,"line_end":212,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699558,"byte_end":699566,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayView>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayView where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699444,"byte_end":699519,"line_start":27,"line_end":27,"column_start":5,"column_end":80}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699524,"byte_end":699546,"line_start":28,"line_end":28,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":700018,"byte_end":700026,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<ArrayView>::to_slice","value":"pub fn to_slice(&Self) -> Option<&'a [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699711,"byte_end":699795,"line_start":36,"line_end":36,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699800,"byte_end":699828,"line_start":37,"line_end":37,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699833,"byte_end":699836,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note that while the method is similar to [`ArrayBase::as_slice()`], this method transfers","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699841,"byte_end":699934,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ the view's lifetime to the slice, so it is a bit more powerful.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699939,"byte_end":700006,"line_start":40,"line_end":40,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":700537,"byte_end":700558,"line_start":55,"line_end":55,"column_start":12,"column_end":33},"name":"to_slice_memory_order","qualname":"<ArrayView>::to_slice_memory_order","value":"pub fn to_slice_memory_order(&Self) -> Option<&'a [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":700231,"byte_end":700293,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":700298,"byte_end":700326,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":700331,"byte_end":700334,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that while the method is similar to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":700339,"byte_end":700383,"line_start":52,"line_end":52,"column_start":5,"column_end":49}},{"value":"/ [`ArrayBase::as_slice_memory_order()`], this method transfers the view's","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":700388,"byte_end":700464,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ lifetime to the slice, so it is a bit more powerful.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":700469,"byte_end":700525,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701840,"byte_end":701851,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayView>::into_scalar","value":"pub fn into_scalar(Self) -> &'a A","parent":null,"children":[],"decl_id":null,"docs":" Consume the view and return a reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the view and return a reference to the single element in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701274,"byte_end":701353,"line_start":79,"line_end":79,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701358,"byte_end":701361,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701366,"byte_end":701441,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701446,"byte_end":701481,"line_start":82,"line_end":82,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701486,"byte_end":701489,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701494,"byte_end":701501,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701506,"byte_end":701538,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701543,"byte_end":701546,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701551,"byte_end":701590,"line_start":87,"line_end":87,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701595,"byte_end":701630,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701635,"byte_end":701650,"line_start":89,"line_end":89,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701655,"byte_end":701658,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701663,"byte_end":701702,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ let view = array.view();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701707,"byte_end":701735,"line_start":92,"line_end":92,"column_start":5,"column_end":33}},{"value":"/ let scalar: &Foo = view.into_scalar();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701740,"byte_end":701782,"line_start":93,"line_end":93,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, &Foo);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701787,"byte_end":701816,"line_start":94,"line_end":94,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701821,"byte_end":701828,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702589,"byte_end":702600,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayViewMut>::into_scalar","value":"pub fn into_scalar(Self) -> &'a mut A","parent":null,"children":[],"decl_id":null,"docs":" Consume the mutable view and return a mutable reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the mutable view and return a mutable reference to the single element in the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702062,"byte_end":702157,"line_start":105,"line_end":105,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702162,"byte_end":702165,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702170,"byte_end":702245,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702250,"byte_end":702285,"line_start":108,"line_end":108,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702290,"byte_end":702293,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702298,"byte_end":702305,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702310,"byte_end":702342,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702347,"byte_end":702350,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut array: Array0<f64> = arr0(5.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702355,"byte_end":702397,"line_start":113,"line_end":113,"column_start":5,"column_end":47}},{"value":"/ let view = array.view_mut();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702402,"byte_end":702434,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/ let scalar = view.into_scalar();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702439,"byte_end":702475,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ *scalar = 7.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702480,"byte_end":702497,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(scalar, &7.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702502,"byte_end":702530,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(array[()], 7.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702535,"byte_end":702565,"line_start":118,"line_end":118,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702570,"byte_end":702577,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3991},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703040,"byte_end":703050,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<ArrayViewMut>::into_slice","value":"pub fn into_slice(Self) -> Option<&'a mut [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702765,"byte_end":702849,"line_start":130,"line_end":130,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702854,"byte_end":702882,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702887,"byte_end":702890,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Note that while this is similar to [`ArrayBase::as_slice_mut()`], this method transfers the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702895,"byte_end":702990,"line_start":133,"line_end":133,"column_start":5,"column_end":100}},{"value":"/ view's lifetime to the slice.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702995,"byte_end":703028,"line_start":134,"line_end":134,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3992},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703402,"byte_end":703425,"line_start":145,"line_end":145,"column_start":12,"column_end":35},"name":"into_slice_memory_order","qualname":"<ArrayViewMut>::into_slice_memory_order","value":"pub fn into_slice_memory_order(Self) -> Option<&'a mut [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703128,"byte_end":703190,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703195,"byte_end":703223,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703228,"byte_end":703231,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Note that while this is similar to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703236,"byte_end":703274,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`ArrayBase::as_slice_memory_order_mut()`], this method transfers the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703279,"byte_end":703352,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ view's lifetime to the slice.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703357,"byte_end":703390,"line_start":144,"line_end":144,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3993},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703870,"byte_end":703884,"line_start":155,"line_end":155,"column_start":12,"column_end":26},"name":"into_cell_view","qualname":"<ArrayViewMut>::into_cell_view","value":"pub fn into_cell_view(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Return a shared view of the array with elements as if they were embedded in cells.","sig":null,"attributes":[{"value":"/ Return a shared view of the array with elements as if they were embedded in cells.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703516,"byte_end":703602,"line_start":149,"line_end":149,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703607,"byte_end":703610,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The cell view itself can be copied and accessed without exclusivity.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703615,"byte_end":703687,"line_start":151,"line_end":151,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703692,"byte_end":703695,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The view acts \"as if\" the elements are temporarily in cells, and elements","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703700,"byte_end":703777,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ can be changed through shared references using the regular cell methods.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":703782,"byte_end":703858,"line_start":154,"line_end":154,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":706009,"byte_end":706024,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayView>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIter where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":705861,"byte_end":705904,"line_start":205,"line_end":205,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":705944,"byte_end":705997,"line_start":207,"line_end":207,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4014},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":708082,"byte_end":708097,"line_start":273,"line_end":273,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayViewMut>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIterMut where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":707934,"byte_end":707977,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":708017,"byte_end":708070,"line_start":272,"line_end":272,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":4019},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710096,"byte_end":710107,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"IndexLonger","qualname":"::impl_views::indexing::IndexLonger","value":"IndexLonger<I>","parent":null,"children":[{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024}],"decl_id":null,"docs":" Extra indexing methods for array views","sig":null,"attributes":[{"value":"/ Extra indexing methods for array views","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":708682,"byte_end":708724,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":708725,"byte_end":708728,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ These methods are very similar to regular indexing or calling of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":708729,"byte_end":708801,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ `get`/`get_mut` methods that we can use on any array or array view. The","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":708802,"byte_end":708877,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ difference here is in the length of lifetime in the resulting reference.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":708878,"byte_end":708954,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":708955,"byte_end":708958,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note** that the `ArrayView` (read-only) and `ArrayViewMut` (read-write) differ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":708959,"byte_end":709043,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/ in how they are allowed implement this trait -- `ArrayView`'s implementation","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709044,"byte_end":709124,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ is usual. If you put in a `ArrayView<'a, T, D>` here, you get references","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709125,"byte_end":709201,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ `&'a T` out.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709202,"byte_end":709218,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709219,"byte_end":709222,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For `ArrayViewMut` to obey the borrowing rules we have to consume the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709223,"byte_end":709296,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ view if we call any of these methods. (The equivalent of reborrow is","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709297,"byte_end":709369,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ `.view_mut()` for read-write array views, but if you can use that,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709370,"byte_end":709440,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ then the regular indexing / `get_mut` should suffice, too.)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709441,"byte_end":709504,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709505,"byte_end":709508,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709509,"byte_end":709516,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use ndarray::IndexLonger;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709517,"byte_end":709546,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709547,"byte_end":709574,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709575,"byte_end":709578,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let data = [0.; 256];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709579,"byte_end":709604,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ let long_life_ref = {","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709605,"byte_end":709630,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/     // make a 16 × 16 array view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709631,"byte_end":709668,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/     let view = ArrayView::from(&data[..]).into_shape((16, 16)).unwrap();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709669,"byte_end":709745,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709746,"byte_end":709749,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     // index the view and with `IndexLonger`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709750,"byte_end":709799,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/     // Note here that we get a reference with a life that is derived from","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709800,"byte_end":709877,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/     // `data`, the base data, instead of being derived from the view","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709878,"byte_end":709950,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/     IndexLonger::index(&view, [0, 1])","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709951,"byte_end":709992,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":709993,"byte_end":709999,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710000,"byte_end":710003,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // view goes out of scope","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710004,"byte_end":710033,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710034,"byte_end":710037,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(long_life_ref, &0.);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710038,"byte_end":710073,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710074,"byte_end":710077,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710078,"byte_end":710085,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":4021},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710221,"byte_end":710227,"line_start":52,"line_end":52,"column_start":10,"column_end":16},"name":"Output","qualname":"::impl_views::indexing::IndexLonger::Output","value":"type Output;","parent":{"krate":0,"index":4019},"children":[],"decl_id":null,"docs":" The type of the reference to the element that is produced, including\n its lifetime.\n","sig":null,"attributes":[{"value":"/ The type of the reference to the element that is produced, including","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710117,"byte_end":710189,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ its lifetime.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710194,"byte_end":710211,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4022},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710671,"byte_end":710676,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"index","qualname":"::impl_views::indexing::IndexLonger::index","value":"pub fn index(Self, I) -> Self::Output","parent":{"krate":0,"index":4019},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710233,"byte_end":710283,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710288,"byte_end":710291,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method is like `Index::index` but with a longer lifetime (matching","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710296,"byte_end":710371,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710376,"byte_end":710451,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710456,"byte_end":710474,"line_start":57,"line_end":57,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710479,"byte_end":710482,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] which works for all arrays and array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710487,"byte_end":710558,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ views.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710563,"byte_end":710573,"line_start":60,"line_end":60,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710578,"byte_end":710581,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [1]: ArrayBase::get","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710586,"byte_end":710609,"line_start":62,"line_end":62,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710614,"byte_end":710617,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710622,"byte_end":710663,"line_start":64,"line_end":64,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4023},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711208,"byte_end":711211,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"get","qualname":"::impl_views::indexing::IndexLonger::get","value":"pub fn get(Self, I) -> Option<Self::Output>","parent":{"krate":0,"index":4019},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710715,"byte_end":710765,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710770,"byte_end":710773,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method is like `ArrayBase::get` but with a longer lifetime (matching","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710778,"byte_end":710855,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710860,"byte_end":710935,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710940,"byte_end":710958,"line_start":71,"line_end":71,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710963,"byte_end":710966,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] (and [`get_mut`][2]) which works for all arrays and array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":710971,"byte_end":711063,"line_start":73,"line_end":73,"column_start":5,"column_end":97}},{"value":"/ views.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711068,"byte_end":711078,"line_start":74,"line_end":74,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711083,"byte_end":711086,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [1]: ArrayBase::get","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711091,"byte_end":711114,"line_start":76,"line_end":76,"column_start":5,"column_end":28}},{"value":"/ [2]: ArrayBase::get_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711119,"byte_end":711146,"line_start":77,"line_end":77,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711151,"byte_end":711154,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711159,"byte_end":711200,"line_start":79,"line_end":79,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4024},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711788,"byte_end":711792,"line_start":97,"line_end":97,"column_start":15,"column_end":19},"name":"uget","qualname":"::impl_views::indexing::IndexLonger::uget","value":"pub unsafe fn uget(Self, I) -> Self::Output","parent":{"krate":0,"index":4019},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view without boundary check","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view without boundary check","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711258,"byte_end":711330,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711335,"byte_end":711338,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method is like `elem` with a longer lifetime (matching the array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711343,"byte_end":711416,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ view); which we can't do for general arrays.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711421,"byte_end":711469,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711474,"byte_end":711477,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ See also [the `uget` method][1] which works for all arrays and array","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711482,"byte_end":711554,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ views.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711559,"byte_end":711569,"line_start":88,"line_end":88,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711574,"byte_end":711577,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [1]: ArrayBase::uget","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711582,"byte_end":711606,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711611,"byte_end":711614,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711619,"byte_end":711680,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711685,"byte_end":711688,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711693,"byte_end":711705,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711710,"byte_end":711713,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the index is in-bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":711718,"byte_end":711773,"line_start":96,"line_end":96,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719505,"byte_end":719513,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayView>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one view strictly before the\n split and one view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one view strictly before the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715744,"byte_end":715821,"line_start":18,"line_end":18,"column_start":5,"column_end":82}},{"value":"/ split and one view after the split.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715826,"byte_end":715865,"line_start":19,"line_end":19,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715870,"byte_end":715873,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715878,"byte_end":715931,"line_start":21,"line_end":21,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715936,"byte_end":715939,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ **Examples:**","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715944,"byte_end":715961,"line_start":23,"line_end":23,"column_start":5,"column_end":22}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715966,"byte_end":715977,"line_start":24,"line_end":24,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715982,"byte_end":716012,"line_start":25,"line_end":25,"column_start":5,"column_end":35}},{"value":"/ let a = aview2(&[[0, 1, 2, 3],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716017,"byte_end":716051,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/                  [4, 5, 6, 7],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716056,"byte_end":716090,"line_start":27,"line_end":27,"column_start":5,"column_end":39}},{"value":"/                  [8, 9, 0, 1]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716095,"byte_end":716131,"line_start":28,"line_end":28,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716136,"byte_end":716139,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716144,"byte_end":716151,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ The array view `a` has two axes and shape 3 × 4:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716156,"byte_end":716209,"line_start":31,"line_end":31,"column_start":5,"column_end":57}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716214,"byte_end":716225,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716230,"byte_end":716260,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/         ┌─────┬─────┬─────┬─────┐ 0","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716265,"byte_end":716354,"line_start":34,"line_end":34,"column_start":5,"column_end":44}},{"value":"/       │ │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716359,"byte_end":716424,"line_start":35,"line_end":35,"column_start":5,"column_end":42}},{"value":"/       ▼ ├─────┼─────┼─────┼─────┤ 1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716429,"byte_end":716520,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/  Axis(0)│ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716525,"byte_end":716588,"line_start":37,"line_end":37,"column_start":5,"column_end":42}},{"value":"/         ├─────┼─────┼─────┼─────┤ 2","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716593,"byte_end":716682,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716687,"byte_end":716750,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘ 3 ↑","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716755,"byte_end":716848,"line_start":40,"line_end":40,"column_start":5,"column_end":46}},{"value":"/         0     1     2     3     4 ← possible split_at indices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716853,"byte_end":716921,"line_start":41,"line_end":41,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716926,"byte_end":716933,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716938,"byte_end":716941,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Row indices increase along `Axis(0)`, and column indices increase along","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":716946,"byte_end":717021,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ `Axis(1)`. Note that we split “before” an element index, and that","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717026,"byte_end":717099,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ both 0 and the endpoint are valid split indices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717104,"byte_end":717156,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717161,"byte_end":717164,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ **Example 1**: Split `a` along the first axis, in this case the rows, at","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717169,"byte_end":717245,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ index 2.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717250,"byte_end":717266,"line_start":49,"line_end":49,"column_start":5,"column_end":21}},{"value":"/ This produces views v1 and v2 of shapes 2 × 4 and 1 × 4:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717271,"byte_end":717333,"line_start":50,"line_end":50,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717338,"byte_end":717341,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717346,"byte_end":717357,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717362,"byte_end":717392,"line_start":53,"line_end":53,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717397,"byte_end":717432,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/ let (v1, v2) = a.split_at(Axis(0), 2);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717437,"byte_end":717479,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717484,"byte_end":717491,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717496,"byte_end":717507,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/         ┌─────┬─────┬─────┬─────┐       0  ↓ indices","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717512,"byte_end":717620,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/         │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │            along Axis(0)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717625,"byte_end":717713,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/         ├─────┼─────┼─────┼─────┤ v1    1","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717718,"byte_end":717813,"line_start":60,"line_end":60,"column_start":5,"column_end":50}},{"value":"/         │ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717818,"byte_end":717881,"line_start":61,"line_end":61,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717886,"byte_end":717973,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/         ┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄       2","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":717978,"byte_end":718073,"line_start":63,"line_end":63,"column_start":5,"column_end":50}},{"value":"/         ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718078,"byte_end":718165,"line_start":64,"line_end":64,"column_start":5,"column_end":42}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │ v2","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718170,"byte_end":718236,"line_start":65,"line_end":65,"column_start":5,"column_end":45}},{"value":"/         └─────┴─────┴─────┴─────┘       3","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718241,"byte_end":718336,"line_start":66,"line_end":66,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718341,"byte_end":718348,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718353,"byte_end":718356,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ **Example 2**: Split `a` along the second axis, in this case the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718361,"byte_end":718429,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ columns, at index 2.<br>","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718434,"byte_end":718462,"line_start":70,"line_end":70,"column_start":5,"column_end":33}},{"value":"/ This produces views u1 and u2 of shapes 3 × 2 and 3 × 2:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718467,"byte_end":718530,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718535,"byte_end":718538,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718543,"byte_end":718554,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718559,"byte_end":718589,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718594,"byte_end":718629,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ let (u1, u2) = a.split_at(Axis(1), 2);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718634,"byte_end":718676,"line_start":76,"line_end":76,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718681,"byte_end":718684,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718689,"byte_end":718696,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718701,"byte_end":718712,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/              u1             u2","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718717,"byte_end":718751,"line_start":80,"line_end":80,"column_start":5,"column_end":39}},{"value":"/         ┌─────┬─────┐┊┌─────┬─────┐","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718756,"byte_end":718849,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/         │ a₀₀ │ a₀₁ │┊│ a₀₂ │ a₀₃ │","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718854,"byte_end":718923,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":718928,"byte_end":719021,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/         │ a₁₀ │ a₁₁ │┊│ a₁₂ │ a₁₃ │","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719026,"byte_end":719095,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719100,"byte_end":719193,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │┊│ a₂₂ │ a₂₃ │","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719198,"byte_end":719267,"line_start":86,"line_end":86,"column_start":5,"column_end":44}},{"value":"/         └─────┴─────┘┊└─────┴─────┘","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719272,"byte_end":719365,"line_start":87,"line_end":87,"column_start":5,"column_end":44}},{"value":"/         0     1      2      3     4  indices →","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719370,"byte_end":719422,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/                                      along Axis(1)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719427,"byte_end":719481,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719486,"byte_end":719493,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4059},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720447,"byte_end":720460,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"split_complex","qualname":"<ArrayView>::split_complex","value":"pub fn split_complex(Self) -> Complex<ArrayView>","parent":null,"children":[],"decl_id":null,"docs":" Splits the view into views of the real and imaginary components of the\n elements.","sig":null,"attributes":[{"value":"/ Splits the view into views of the real and imaginary components of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719809,"byte_end":719883,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719888,"byte_end":719901,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719906,"byte_end":719909,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719914,"byte_end":719921,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use ndarray::prelude::*;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719926,"byte_end":719954,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/ use num_complex::{Complex, Complex64};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719959,"byte_end":720001,"line_start":108,"line_end":108,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720006,"byte_end":720009,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let arr = array![","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720014,"byte_end":720035,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     [Complex64::new(1., 2.), Complex64::new(3., 4.)],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720040,"byte_end":720097,"line_start":111,"line_end":111,"column_start":5,"column_end":62}},{"value":"/     [Complex64::new(5., 6.), Complex64::new(7., 8.)],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720102,"byte_end":720159,"line_start":112,"line_end":112,"column_start":5,"column_end":62}},{"value":"/     [Complex64::new(9., 10.), Complex64::new(11., 12.)],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720164,"byte_end":720224,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/ ];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720229,"byte_end":720235,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/ let Complex { re, im } = arr.view().split_complex();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720240,"byte_end":720296,"line_start":115,"line_end":115,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(re, array![[1., 3.], [5., 7.], [9., 11.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720301,"byte_end":720359,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(im, array![[2., 4.], [6., 8.], [10., 12.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720364,"byte_end":720423,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720428,"byte_end":720435,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4064},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721055,"byte_end":721063,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayViewMut>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one mutable view strictly\n before the split and one mutable view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one mutable view strictly","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720840,"byte_end":720914,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ before the split and one mutable view after the split.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720919,"byte_end":720977,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720982,"byte_end":720985,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720990,"byte_end":721043,"line_start":138,"line_end":138,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4065},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722094,"byte_end":722110,"line_start":163,"line_end":163,"column_start":12,"column_end":28},"name":"multi_slice_move","qualname":"<ArrayViewMut>::multi_slice_move","value":"pub fn multi_slice_move<M>(Self, M) -> M::Output where M: MultiSliceArg","parent":null,"children":[],"decl_id":null,"docs":" Split the view into multiple disjoint slices.","sig":null,"attributes":[{"value":"/ Split the view into multiple disjoint slices.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721299,"byte_end":721348,"line_start":146,"line_end":146,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721353,"byte_end":721356,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`.multi_slice_mut()`], but `.multi_slice_move()`","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721361,"byte_end":721433,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ consumes `self` and produces views with lifetimes matching that of","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721438,"byte_end":721508,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ `self`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721513,"byte_end":721524,"line_start":150,"line_end":150,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721529,"byte_end":721532,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation. See also","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721537,"byte_end":721599,"line_start":152,"line_end":152,"column_start":5,"column_end":67}},{"value":"/ [`MultiSliceArg`], [`s!`], [`SliceArg`](crate::SliceArg), and","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721604,"byte_end":721669,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/ [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721674,"byte_end":721710,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721715,"byte_end":721718,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`.multi_slice_mut()`]: ArrayBase::multi_slice_mut","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721723,"byte_end":721777,"line_start":156,"line_end":156,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721782,"byte_end":721785,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the following occur:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721790,"byte_end":721835,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721840,"byte_end":721843,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * if any of the views would intersect (i.e. if any element would appear in multiple slices)","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721848,"byte_end":721943,"line_start":160,"line_end":160,"column_start":5,"column_end":100}},{"value":"/ * if an index is out of bounds or step size is zero","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":721948,"byte_end":722003,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/ * if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722008,"byte_end":722082,"line_start":162,"line_end":162,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4071},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":723162,"byte_end":723175,"line_start":198,"line_end":198,"column_start":12,"column_end":25},"name":"split_complex","qualname":"<ArrayViewMut>::split_complex","value":"pub fn split_complex(Self) -> Complex<ArrayViewMut>","parent":null,"children":[],"decl_id":null,"docs":" Splits the view into views of the real and imaginary components of the\n elements.","sig":null,"attributes":[{"value":"/ Splits the view into views of the real and imaginary components of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722316,"byte_end":722390,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722395,"byte_end":722408,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722413,"byte_end":722416,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722421,"byte_end":722428,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use ndarray::prelude::*;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722433,"byte_end":722461,"line_start":179,"line_end":179,"column_start":5,"column_end":33}},{"value":"/ use num_complex::{Complex, Complex64};","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722466,"byte_end":722508,"line_start":180,"line_end":180,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722513,"byte_end":722516,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let mut arr = array![","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722521,"byte_end":722546,"line_start":182,"line_end":182,"column_start":5,"column_end":30}},{"value":"/     [Complex64::new(1., 2.), Complex64::new(3., 4.)],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722551,"byte_end":722608,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/     [Complex64::new(5., 6.), Complex64::new(7., 8.)],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722613,"byte_end":722670,"line_start":184,"line_end":184,"column_start":5,"column_end":62}},{"value":"/     [Complex64::new(9., 10.), Complex64::new(11., 12.)],","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722675,"byte_end":722735,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/ ];","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722740,"byte_end":722746,"line_start":186,"line_end":186,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722751,"byte_end":722754,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ let Complex { mut re, mut im } = arr.view_mut().split_complex();","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722759,"byte_end":722827,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(re, array![[1., 3.], [5., 7.], [9., 11.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722832,"byte_end":722890,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(im, array![[2., 4.], [6., 8.], [10., 12.]]);","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722895,"byte_end":722954,"line_start":190,"line_end":190,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722959,"byte_end":722962,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ re[[0, 1]] = 13.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722967,"byte_end":722988,"line_start":192,"line_end":192,"column_start":5,"column_end":26}},{"value":"/ im[[2, 0]] = 14.;","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722993,"byte_end":723014,"line_start":193,"line_end":193,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":723019,"byte_end":723022,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(arr[[0, 1]], Complex64::new(13., 4.));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":723027,"byte_end":723080,"line_start":195,"line_end":195,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(arr[[2, 0]], Complex64::new(9., 14.));","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":723085,"byte_end":723138,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":723143,"byte_end":723150,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":726354,"byte_end":726368,"line_start":69,"line_end":69,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayView<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayView<A, D>` from shape information and a raw pointer\n to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayView<A, D>` from shape information and a raw pointer","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724330,"byte_end":724405,"line_start":29,"line_end":29,"column_start":5,"column_end":80}},{"value":"/ to the elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724410,"byte_end":724430,"line_start":30,"line_end":30,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724435,"byte_end":724438,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724443,"byte_end":724455,"line_start":32,"line_end":32,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724460,"byte_end":724463,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724468,"byte_end":724532,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724537,"byte_end":724540,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null, and it must be safe to [`.offset()`] `ptr` by","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724545,"byte_end":724620,"line_start":36,"line_end":36,"column_start":5,"column_end":80}},{"value":"/   zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724625,"byte_end":724636,"line_start":37,"line_end":37,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724641,"byte_end":724644,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724649,"byte_end":724720,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724725,"byte_end":724796,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724801,"byte_end":724875,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724880,"byte_end":724883,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724888,"byte_end":724909,"line_start":43,"line_end":43,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724914,"byte_end":724917,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":724922,"byte_end":724997,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725002,"byte_end":725077,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725082,"byte_end":725160,"line_start":47,"line_end":47,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725165,"byte_end":725243,"line_start":48,"line_end":48,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725248,"byte_end":725314,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725319,"byte_end":725322,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725327,"byte_end":725402,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725407,"byte_end":725482,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725487,"byte_end":725562,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725567,"byte_end":725636,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725641,"byte_end":725644,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725649,"byte_end":725722,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725727,"byte_end":725802,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725807,"byte_end":725885,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725890,"byte_end":725965,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725970,"byte_end":725973,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":725978,"byte_end":726050,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":726055,"byte_end":726059,"line_start":62,"line_end":62,"column_start":5,"column_end":9}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":726064,"byte_end":726099,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":726104,"byte_end":726107,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":726112,"byte_end":726191,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":726196,"byte_end":726230,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":726235,"byte_end":726238,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":726243,"byte_end":726335,"line_start":68,"line_end":68,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727440,"byte_end":727455,"line_start":97,"line_end":97,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayView<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727072,"byte_end":727118,"line_start":88,"line_end":88,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727123,"byte_end":727126,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727131,"byte_end":727143,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727148,"byte_end":727151,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727156,"byte_end":727227,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727232,"byte_end":727307,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727312,"byte_end":727381,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727386,"byte_end":727407,"line_start":95,"line_end":95,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727412,"byte_end":727421,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727896,"byte_end":727904,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayView<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727679,"byte_end":727754,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727759,"byte_end":727818,"line_start":106,"line_end":106,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727823,"byte_end":727826,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":727831,"byte_end":727884,"line_start":108,"line_end":108,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4099},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729252,"byte_end":729256,"line_start":142,"line_end":142,"column_start":12,"column_end":16},"name":"cast","qualname":"<RawArrayView<A, D>>::cast","value":"pub fn cast<B>(Self) -> RawArrayView<B, D>","parent":null,"children":[],"decl_id":null,"docs":" Cast the raw pointer of the raw array view to a different type","sig":null,"attributes":[{"value":"/ Cast the raw pointer of the raw array view to a different type","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":728777,"byte_end":728843,"line_start":132,"line_end":132,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":728848,"byte_end":728851,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ **Panics** if element size is not compatible.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":728856,"byte_end":728905,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":728910,"byte_end":728913,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Lack of panic does not imply it is a valid cast. The cast works the same","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":728918,"byte_end":728994,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ way as regular raw pointer casts.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":728999,"byte_end":729036,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729041,"byte_end":729044,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ While this method is safe, for the same reason as regular raw pointer","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729049,"byte_end":729122,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ casts are safe, access through the produced raw view is only possible","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729127,"byte_end":729200,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ in an unsafe block or function.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729205,"byte_end":729240,"line_start":141,"line_end":141,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729720,"byte_end":729733,"line_start":159,"line_end":159,"column_start":12,"column_end":25},"name":"split_complex","qualname":"<RawArrayView<Complex<T>, D>>::split_complex","value":"pub fn split_complex(Self) -> Complex<RawArrayView<T, D>>","parent":null,"children":[],"decl_id":null,"docs":" Splits the view into views of the real and imaginary components of the\n elements.\n","sig":null,"attributes":[{"value":"/ Splits the view into views of the real and imaginary components of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729616,"byte_end":729690,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729695,"byte_end":729708,"line_start":158,"line_end":158,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734918,"byte_end":734932,"line_start":278,"line_end":278,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayViewMut<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayViewMut<A, D>` from shape information and a raw\n pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayViewMut<A, D>` from shape information and a raw","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":732891,"byte_end":732961,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ pointer to the elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":732966,"byte_end":732994,"line_start":239,"line_end":239,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":732999,"byte_end":733002,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733007,"byte_end":733019,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733024,"byte_end":733027,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733032,"byte_end":733096,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733101,"byte_end":733104,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null, and it must be safe to [`.offset()`] `ptr` by","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733109,"byte_end":733184,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/   zero.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733189,"byte_end":733200,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733205,"byte_end":733208,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733213,"byte_end":733284,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733289,"byte_end":733360,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733365,"byte_end":733439,"line_start":250,"line_end":250,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733444,"byte_end":733447,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733452,"byte_end":733473,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733478,"byte_end":733481,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733486,"byte_end":733561,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733566,"byte_end":733641,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733646,"byte_end":733724,"line_start":256,"line_end":256,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733729,"byte_end":733807,"line_start":257,"line_end":257,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733812,"byte_end":733878,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733883,"byte_end":733886,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733891,"byte_end":733966,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":733971,"byte_end":734046,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734051,"byte_end":734126,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734131,"byte_end":734200,"line_start":263,"line_end":263,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734205,"byte_end":734208,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734213,"byte_end":734286,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734291,"byte_end":734366,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734371,"byte_end":734449,"line_start":267,"line_end":267,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734454,"byte_end":734529,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734534,"byte_end":734537,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734542,"byte_end":734614,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734619,"byte_end":734623,"line_start":271,"line_end":271,"column_start":5,"column_end":9}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734628,"byte_end":734663,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734668,"byte_end":734671,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734676,"byte_end":734755,"line_start":274,"line_end":274,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734760,"byte_end":734794,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734799,"byte_end":734802,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":734807,"byte_end":734899,"line_start":277,"line_end":277,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4113},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736209,"byte_end":736224,"line_start":312,"line_end":312,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayViewMut<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":735841,"byte_end":735887,"line_start":303,"line_end":303,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":735892,"byte_end":735895,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":735900,"byte_end":735912,"line_start":305,"line_end":305,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":735917,"byte_end":735920,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":735925,"byte_end":735996,"line_start":307,"line_end":307,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736001,"byte_end":736076,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736081,"byte_end":736150,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736155,"byte_end":736176,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736181,"byte_end":736190,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4115},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736814,"byte_end":736833,"line_start":329,"line_end":329,"column_start":19,"column_end":38},"name":"deref_into_view_mut","qualname":"<RawArrayViewMut<A, D>>::deref_into_view_mut","value":"pub unsafe fn deref_into_view_mut<'a>(Self) -> ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" Converts to a mutable view of the array.","sig":null,"attributes":[{"value":"/ Converts to a mutable view of the array.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736448,"byte_end":736492,"line_start":320,"line_end":320,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736497,"byte_end":736500,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736505,"byte_end":736517,"line_start":322,"line_end":322,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736522,"byte_end":736525,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736530,"byte_end":736601,"line_start":324,"line_end":324,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736606,"byte_end":736681,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736686,"byte_end":736755,"line_start":326,"line_end":326,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736760,"byte_end":736781,"line_start":327,"line_end":327,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":736786,"byte_end":736795,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4117},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737280,"byte_end":737288,"line_start":341,"line_end":341,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayViewMut<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737063,"byte_end":737138,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737143,"byte_end":737202,"line_start":338,"line_end":338,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737207,"byte_end":737210,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737215,"byte_end":737268,"line_start":340,"line_end":340,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4118},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":738074,"byte_end":738078,"line_start":361,"line_end":361,"column_start":12,"column_end":16},"name":"cast","qualname":"<RawArrayViewMut<A, D>>::cast","value":"pub fn cast<B>(Self) -> RawArrayViewMut<B, D>","parent":null,"children":[],"decl_id":null,"docs":" Cast the raw pointer of the raw array view to a different type","sig":null,"attributes":[{"value":"/ Cast the raw pointer of the raw array view to a different type","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737599,"byte_end":737665,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737670,"byte_end":737673,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ **Panics** if element size is not compatible.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737678,"byte_end":737727,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737732,"byte_end":737735,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Lack of panic does not imply it is a valid cast. The cast works the same","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737740,"byte_end":737816,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ way as regular raw pointer casts.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737821,"byte_end":737858,"line_start":356,"line_end":356,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737863,"byte_end":737866,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ While this method is safe, for the same reason as regular raw pointer","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737871,"byte_end":737944,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ casts are safe, access through the produced raw view is only possible","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":737949,"byte_end":738022,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ in an unsafe block or function.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":738027,"byte_end":738062,"line_start":360,"line_end":360,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4123},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":738551,"byte_end":738564,"line_start":378,"line_end":378,"column_start":12,"column_end":25},"name":"split_complex","qualname":"<RawArrayViewMut<Complex<T>, D>>::split_complex","value":"pub fn split_complex(Self) -> Complex<RawArrayViewMut<T, D>>","parent":null,"children":[],"decl_id":null,"docs":" Splits the view into views of the real and imaginary components of the\n elements.\n","sig":null,"attributes":[{"value":"/ Splits the view into views of the real and imaginary components of the","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":738447,"byte_end":738521,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":738526,"byte_end":738539,"line_start":377,"line_end":377,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4130},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":739489,"byte_end":739496,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowArray>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the view (borrowed) variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the view (borrowed) variant.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":739413,"byte_end":739477,"line_start":18,"line_end":18,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":739619,"byte_end":739627,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowArray>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the owned variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the owned variant.","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":739553,"byte_end":739607,"line_start":23,"line_end":23,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":69338,"byte_end":69351,"line_start":38,"line_end":38,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":74330,"byte_end":74339,"line_start":192,"line_end":192,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":74782,"byte_end":74791,"line_start":206,"line_end":206,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":75661,"byte_end":75670,"line_start":234,"line_end":234,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":76122,"byte_end":76131,"line_start":248,"line_end":248,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":76582,"byte_end":76591,"line_start":261,"line_end":261,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":77037,"byte_end":77046,"line_start":275,"line_end":275,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":91988,"byte_end":91997,"line_start":43,"line_end":43,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":92546,"byte_end":92555,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":93144,"byte_end":93153,"line_start":87,"line_end":87,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":94044,"byte_end":94053,"line_start":118,"line_end":118,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":94626,"byte_end":94635,"line_start":144,"line_end":144,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":94731,"byte_end":94740,"line_start":152,"line_end":152,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":95044,"byte_end":95053,"line_start":164,"line_end":164,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":95469,"byte_end":95478,"line_start":182,"line_end":182,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":96581,"byte_end":96590,"line_start":231,"line_end":231,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":96797,"byte_end":96809,"line_start":243,"line_end":243,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":97021,"byte_end":97030,"line_start":255,"line_end":255,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":97971,"byte_end":97980,"line_start":286,"line_end":286,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":98110,"byte_end":98119,"line_start":294,"line_end":294,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":98504,"byte_end":98513,"line_start":307,"line_end":307,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":99165,"byte_end":99174,"line_start":327,"line_end":327,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":99502,"byte_end":99514,"line_start":339,"line_end":339,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100186,"byte_end":100198,"line_start":359,"line_end":359,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100435,"byte_end":100443,"line_start":370,"line_end":370,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101170,"byte_end":101171,"line_start":405,"line_end":405,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101779,"byte_end":101788,"line_start":424,"line_end":424,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":102699,"byte_end":102708,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":105631,"byte_end":105640,"line_start":135,"line_end":135,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":106135,"byte_end":106144,"line_start":156,"line_end":156,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":107001,"byte_end":107010,"line_start":177,"line_end":177,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":107056,"byte_end":107065,"line_start":178,"line_end":178,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112578,"byte_end":112589,"line_start":170,"line_end":170,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112856,"byte_end":112867,"line_start":184,"line_end":184,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":113032,"byte_end":113043,"line_start":190,"line_end":190,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":4173}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":113306,"byte_end":113317,"line_start":204,"line_end":204,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":113582,"byte_end":113593,"line_start":219,"line_end":219,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":113756,"byte_end":113768,"line_start":225,"line_end":225,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":4174}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":114080,"byte_end":114092,"line_start":239,"line_end":239,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":115097,"byte_end":115109,"line_start":275,"line_end":275,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":116638,"byte_end":116650,"line_start":322,"line_end":322,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":116705,"byte_end":116717,"line_start":324,"line_end":324,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":116914,"byte_end":116923,"line_start":331,"line_end":331,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":4175}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":117334,"byte_end":117343,"line_start":348,"line_end":348,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":117601,"byte_end":117610,"line_start":363,"line_end":363,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":118011,"byte_end":118020,"line_start":384,"line_end":384,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":118060,"byte_end":118069,"line_start":386,"line_end":386,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":118952,"byte_end":118960,"line_start":416,"line_end":416,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":119220,"byte_end":119228,"line_start":430,"line_end":430,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":119635,"byte_end":119643,"line_start":449,"line_end":449,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":119809,"byte_end":119817,"line_start":455,"line_end":455,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120087,"byte_end":120095,"line_start":469,"line_end":469,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120365,"byte_end":120373,"line_start":484,"line_end":484,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120779,"byte_end":120787,"line_start":503,"line_end":503,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122294,"byte_end":122306,"line_start":539,"line_end":539,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122347,"byte_end":122355,"line_start":540,"line_end":540,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122396,"byte_end":122405,"line_start":542,"line_end":542,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122663,"byte_end":122675,"line_start":554,"line_end":554,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122938,"byte_end":122945,"line_start":566,"line_end":566,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":4178}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":123511,"byte_end":123518,"line_start":588,"line_end":588,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":124176,"byte_end":124183,"line_start":616,"line_end":616,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":125491,"byte_end":125498,"line_start":656,"line_end":656,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126569,"byte_end":126576,"line_start":690,"line_end":690,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127286,"byte_end":127295,"line_start":711,"line_end":711,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127449,"byte_end":127461,"line_start":719,"line_end":719,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127674,"byte_end":127685,"line_start":727,"line_end":727,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127856,"byte_end":127867,"line_start":735,"line_end":735,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":128046,"byte_end":128054,"line_start":743,"line_end":743,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":128225,"byte_end":128233,"line_start":751,"line_end":751,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":128412,"byte_end":128419,"line_start":759,"line_end":759,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135913,"byte_end":135919,"line_start":220,"line_end":220,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":137039,"byte_end":137045,"line_start":250,"line_end":250,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":139843,"byte_end":139853,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140787,"byte_end":140796,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140922,"byte_end":140932,"line_start":66,"line_end":66,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":141074,"byte_end":141084,"line_start":74,"line_end":74,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":141111,"byte_end":141121,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":141747,"byte_end":141757,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/geomspace.rs","byte_start":143744,"byte_end":143753,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/geomspace.rs","byte_start":144349,"byte_end":144358,"line_start":48,"line_end":48,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/geomspace.rs","byte_start":144800,"byte_end":144809,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":149510,"byte_end":149521,"line_start":53,"line_end":53,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151150,"byte_end":151161,"line_start":112,"line_end":112,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151213,"byte_end":151220,"line_start":114,"line_end":114,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151860,"byte_end":151868,"line_start":147,"line_end":147,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":4334}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":152793,"byte_end":152800,"line_start":175,"line_end":175,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":4335},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":154837,"byte_end":154849,"line_start":271,"line_end":271,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":155652,"byte_end":155664,"line_start":303,"line_end":303,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":203402,"byte_end":203413,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":204277,"byte_end":204288,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":205603,"byte_end":205617,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":206487,"byte_end":206501,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":208966,"byte_end":208974,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":209778,"byte_end":209786,"line_start":60,"line_end":60,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":210065,"byte_end":210073,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":210153,"byte_end":210161,"line_start":77,"line_end":77,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":210933,"byte_end":210938,"line_start":100,"line_end":100,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":211134,"byte_end":211142,"line_start":112,"line_end":112,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":211366,"byte_end":211374,"line_start":125,"line_end":125,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":212829,"byte_end":212834,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":213878,"byte_end":213883,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":214466,"byte_end":214474,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":215151,"byte_end":215159,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":215887,"byte_end":215894,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":217369,"byte_end":217376,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":158484,"byte_end":158492,"line_start":44,"line_end":44,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":158939,"byte_end":158947,"line_start":59,"line_end":59,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":160416,"byte_end":160424,"line_start":106,"line_end":106,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":160916,"byte_end":160924,"line_start":124,"line_end":124,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":162771,"byte_end":162783,"line_start":201,"line_end":201,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":162996,"byte_end":163008,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":163476,"byte_end":163488,"line_start":229,"line_end":229,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":163858,"byte_end":163870,"line_start":243,"line_end":243,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":164560,"byte_end":164564,"line_start":279,"line_end":279,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":164917,"byte_end":164924,"line_start":294,"line_end":294,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166227,"byte_end":166242,"line_start":346,"line_end":346,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166871,"byte_end":166882,"line_start":365,"line_end":365,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":167025,"byte_end":167039,"line_start":374,"line_end":374,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":167212,"byte_end":167216,"line_start":383,"line_end":383,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":168992,"byte_end":168996,"line_start":456,"line_end":456,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":169470,"byte_end":169474,"line_start":474,"line_end":474,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":169640,"byte_end":169651,"line_start":483,"line_end":483,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":170153,"byte_end":170164,"line_start":502,"line_end":502,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":170305,"byte_end":170312,"line_start":511,"line_end":511,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":172096,"byte_end":172103,"line_start":584,"line_end":584,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":172585,"byte_end":172592,"line_start":602,"line_end":602,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":172758,"byte_end":172773,"line_start":611,"line_end":611,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":173257,"byte_end":173272,"line_start":630,"line_end":630,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":173654,"byte_end":173669,"line_start":644,"line_end":644,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":173808,"byte_end":173822,"line_start":653,"line_end":653,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":174328,"byte_end":174342,"line_start":672,"line_end":672,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":174958,"byte_end":174967,"line_start":704,"line_end":704,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175364,"byte_end":175373,"line_start":720,"line_end":720,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175991,"byte_end":176003,"line_start":744,"line_end":744,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":176406,"byte_end":176418,"line_start":760,"line_end":760,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":177301,"byte_end":177313,"line_start":801,"line_end":801,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":179612,"byte_end":179624,"line_start":873,"line_end":873,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180076,"byte_end":180088,"line_start":895,"line_end":895,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180404,"byte_end":180416,"line_start":910,"line_end":910,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181335,"byte_end":181343,"line_start":949,"line_end":949,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":182326,"byte_end":182334,"line_start":983,"line_end":983,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":182657,"byte_end":182665,"line_start":998,"line_end":998,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":182869,"byte_end":182877,"line_start":1007,"line_end":1007,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183682,"byte_end":183693,"line_start":1035,"line_end":1035,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184688,"byte_end":184699,"line_start":1069,"line_end":1069,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":185025,"byte_end":185036,"line_start":1084,"line_end":1084,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":185240,"byte_end":185251,"line_start":1093,"line_end":1093,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":185391,"byte_end":185399,"line_start":1102,"line_end":1102,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":187025,"byte_end":187036,"line_start":1159,"line_end":1159,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":4555}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":191176,"byte_end":191190,"line_start":1299,"line_end":1299,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":195067,"byte_end":195084,"line_start":1413,"line_end":1413,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196538,"byte_end":196546,"line_start":1456,"line_end":1456,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196612,"byte_end":196621,"line_start":1458,"line_end":1458,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196687,"byte_end":196695,"line_start":1460,"line_end":1460,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196744,"byte_end":196748,"line_start":1461,"line_end":1461,"column_start":43,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196804,"byte_end":196811,"line_start":1462,"line_end":1462,"column_start":43,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196871,"byte_end":196877,"line_start":1463,"line_end":1463,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196958,"byte_end":196961,"line_start":1464,"line_end":1464,"column_start":50,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197042,"byte_end":197046,"line_start":1465,"line_end":1465,"column_start":47,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197103,"byte_end":197110,"line_start":1466,"line_end":1466,"column_start":47,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197165,"byte_end":197170,"line_start":1467,"line_end":1467,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197295,"byte_end":197306,"line_start":1469,"line_end":1469,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197367,"byte_end":197379,"line_start":1470,"line_end":1470,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197443,"byte_end":197451,"line_start":1471,"line_end":1471,"column_start":39,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/layout/layoutfmt.rs","byte_start":226168,"byte_end":226174,"line_start":15,"line_end":15,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/layout/mod.rs","byte_start":218638,"byte_end":218644,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227702,"byte_end":227703,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linspace.rs","byte_start":229232,"byte_end":229240,"line_start":21,"line_end":21,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linspace.rs","byte_start":229781,"byte_end":229789,"line_start":46,"line_end":46,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linspace.rs","byte_start":230176,"byte_end":230184,"line_start":63,"line_end":63,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/logspace.rs","byte_start":232325,"byte_end":232333,"line_start":23,"line_end":23,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/logspace.rs","byte_start":232939,"byte_end":232947,"line_start":49,"line_end":49,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/logspace.rs","byte_start":233399,"byte_end":233407,"line_start":67,"line_end":67,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236548,"byte_end":236556,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236937,"byte_end":236945,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237073,"byte_end":237081,"line_start":37,"line_end":37,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237195,"byte_end":237203,"line_start":42,"line_end":42,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237322,"byte_end":237330,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237461,"byte_end":237469,"line_start":58,"line_end":58,"column_start":16,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237524,"byte_end":237532,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237966,"byte_end":237974,"line_start":75,"line_end":75,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":238115,"byte_end":238123,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243450,"byte_end":243455,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/partial.rs","byte_start":245414,"byte_end":245421,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/partial.rs","byte_start":247256,"byte_end":247263,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/partial.rs","byte_start":247303,"byte_end":247310,"line_start":80,"line_end":80,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":247989,"byte_end":247994,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248294,"byte_end":248305,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248771,"byte_end":248778,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":250051,"byte_end":250056,"line_start":99,"line_end":99,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":250265,"byte_end":250276,"line_start":109,"line_end":109,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":250596,"byte_end":250597,"line_start":124,"line_end":124,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251134,"byte_end":251139,"line_start":147,"line_end":147,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251624,"byte_end":251629,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252351,"byte_end":252352,"line_start":203,"line_end":203,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254654,"byte_end":254659,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257910,"byte_end":257923,"line_start":132,"line_end":132,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":258394,"byte_end":258407,"line_start":149,"line_end":149,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":261273,"byte_end":261278,"line_start":238,"line_end":238,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":261458,"byte_end":261471,"line_start":249,"line_end":249,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":261670,"byte_end":261683,"line_start":260,"line_end":260,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262274,"byte_end":262287,"line_start":285,"line_end":285,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":264177,"byte_end":264186,"line_start":359,"line_end":359,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":4949}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":265490,"byte_end":265499,"line_start":409,"line_end":409,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266180,"byte_end":266189,"line_start":438,"line_end":438,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268790,"byte_end":268799,"line_start":519,"line_end":519,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":269271,"byte_end":269280,"line_start":537,"line_end":537,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":270786,"byte_end":270795,"line_start":587,"line_end":587,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":271037,"byte_end":271046,"line_start":599,"line_end":599,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":271432,"byte_end":271441,"line_start":614,"line_end":614,"column_start":29,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":271550,"byte_end":271559,"line_start":622,"line_end":622,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/split_at.rs","byte_start":284780,"byte_end":284781,"line_start":18,"line_end":18,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/split_at.rs","byte_start":285091,"byte_end":285103,"line_start":33,"line_end":33,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/split_at.rs","byte_start":285273,"byte_end":285288,"line_start":42,"line_end":42,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/low_level_util.rs","byte_start":294218,"byte_end":294230,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/low_level_util.rs","byte_start":294409,"byte_end":294421,"line_start":25,"line_end":25,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332877,"byte_end":332878,"line_start":23,"line_end":23,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":337715,"byte_end":337724,"line_start":191,"line_end":191,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":5145},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":338819,"byte_end":338831,"line_start":244,"line_end":244,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":5146},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":339930,"byte_end":339942,"line_start":297,"line_end":297,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":5147},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":341031,"byte_end":341046,"line_start":350,"line_end":350,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":5148},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":297138,"byte_end":297147,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":297336,"byte_end":297345,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":5150}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301169,"byte_end":301172,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301843,"byte_end":301846,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302743,"byte_end":302746,"line_start":260,"line_end":260,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":303931,"byte_end":303934,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":308495,"byte_end":308498,"line_start":436,"line_end":436,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327266,"byte_end":327275,"line_start":930,"line_end":930,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384889,"byte_end":384904,"line_start":64,"line_end":64,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385482,"byte_end":385486,"line_start":87,"line_end":87,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":386458,"byte_end":386462,"line_start":126,"line_end":126,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388600,"byte_end":388604,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/broadcast.rs","byte_start":390281,"byte_end":390282,"line_start":45,"line_end":45,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395108,"byte_end":395110,"line_start":47,"line_end":47,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":2438}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395245,"byte_end":395246,"line_start":55,"line_end":55,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395396,"byte_end":395405,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395550,"byte_end":395553,"line_start":74,"line_end":74,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398948,"byte_end":398951,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":399449,"byte_end":399452,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2473}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":399577,"byte_end":399580,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":414580,"byte_end":414583,"line_start":393,"line_end":393,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":6161},{"krate":0,"index":2597},{"krate":0,"index":6163}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":415467,"byte_end":415470,"line_start":435,"line_end":435,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":6164},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":6166}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":417963,"byte_end":417966,"line_start":549,"line_end":549,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":6167},{"krate":0,"index":2647},{"krate":0,"index":6169}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":421629,"byte_end":421632,"line_start":704,"line_end":704,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":6170},{"krate":0,"index":2665},{"krate":0,"index":6172}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":426609,"byte_end":426614,"line_start":874,"line_end":874,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2681},{"krate":0,"index":6220}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":427693,"byte_end":427696,"line_start":927,"line_end":927,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2683},{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":427878,"byte_end":427881,"line_start":934,"line_end":934,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":428321,"byte_end":428330,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2704}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":428676,"byte_end":428685,"line_start":29,"line_end":29,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429085,"byte_end":429094,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429211,"byte_end":429220,"line_start":50,"line_end":50,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429517,"byte_end":429526,"line_start":62,"line_end":62,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429768,"byte_end":429777,"line_start":73,"line_end":73,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2720},{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429973,"byte_end":429982,"line_start":83,"line_end":83,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430190,"byte_end":430199,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430240,"byte_end":430249,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430685,"byte_end":430694,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2734}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":431110,"byte_end":431119,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":432444,"byte_end":432453,"line_start":161,"line_end":161,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":432582,"byte_end":432591,"line_start":168,"line_end":168,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":432721,"byte_end":432730,"line_start":175,"line_end":175,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2750},{"krate":0,"index":2751}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":432910,"byte_end":432919,"line_start":185,"line_end":185,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433063,"byte_end":433072,"line_start":194,"line_end":194,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433187,"byte_end":433196,"line_start":202,"line_end":202,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433519,"byte_end":433522,"line_start":218,"line_end":218,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433698,"byte_end":433703,"line_start":225,"line_end":225,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434764,"byte_end":434765,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2797},{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":436951,"byte_end":436953,"line_start":101,"line_end":101,"column_start":30,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":437270,"byte_end":437272,"line_start":112,"line_end":112,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ops.rs","byte_start":441861,"byte_end":441864,"line_start":30,"line_end":30,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ops.rs","byte_start":443628,"byte_end":443633,"line_start":88,"line_end":88,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444370,"byte_end":444373,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444540,"byte_end":444543,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":455807,"byte_end":455814,"line_start":9,"line_end":9,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2898},{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":455988,"byte_end":455995,"line_start":21,"line_end":21,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":456176,"byte_end":456183,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":456351,"byte_end":456358,"line_start":43,"line_end":43,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":456549,"byte_end":456556,"line_start":55,"line_end":55,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":456754,"byte_end":456761,"line_start":67,"line_end":67,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457204,"byte_end":457211,"line_start":86,"line_end":86,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457320,"byte_end":457327,"line_start":91,"line_end":91,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2926}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457443,"byte_end":457450,"line_start":96,"line_end":96,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457504,"byte_end":457511,"line_start":98,"line_end":98,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457620,"byte_end":457627,"line_start":103,"line_end":103,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2934}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457743,"byte_end":457750,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/mod.rs","byte_start":353389,"byte_end":353390,"line_start":321,"line_end":321,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2972},{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51113,"byte_end":51125,"line_start":1430,"line_end":1430,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51532,"byte_end":51543,"line_start":1446,"line_end":1446,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51949,"byte_end":51957,"line_start":1463,"line_end":1463,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52320,"byte_end":52327,"line_start":1481,"line_end":1481,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_clone.rs","byte_start":459845,"byte_end":459854,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3156},{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_clone.rs","byte_start":460744,"byte_end":460753,"line_start":38,"line_end":38,"column_start":48,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_internal_constructors.rs","byte_start":461214,"byte_end":461223,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_internal_constructors.rs","byte_start":461906,"byte_end":461915,"line_start":39,"line_end":39,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3172}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":463975,"byte_end":463984,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468905,"byte_end":468914,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472197,"byte_end":472206,"line_start":301,"line_end":301,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3223},{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3229},{"krate":0,"index":3231},{"krate":0,"index":3235},{"krate":0,"index":3238},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3248},{"krate":0,"index":3250},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485860,"byte_end":485869,"line_start":674,"line_end":674,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488031,"byte_end":488040,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3354},{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3370},{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3377},{"krate":0,"index":3380},{"krate":0,"index":3383},{"krate":0,"index":3386},{"krate":0,"index":3388},{"krate":0,"index":3390},{"krate":0,"index":3392},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3447},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3454},{"krate":0,"index":3459},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3481},{"krate":0,"index":3483},{"krate":0,"index":3485},{"krate":0,"index":3490},{"krate":0,"index":3497},{"krate":0,"index":3501},{"krate":0,"index":3506},{"krate":0,"index":3510},{"krate":0,"index":3514},{"krate":0,"index":3518},{"krate":0,"index":3522},{"krate":0,"index":3524},{"krate":0,"index":3528},{"krate":0,"index":3531},{"krate":0,"index":3534},{"krate":0,"index":3538},{"krate":0,"index":3541},{"krate":0,"index":3545},{"krate":0,"index":3551},{"krate":0,"index":3557},{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":585873,"byte_end":585878,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587232,"byte_end":587237,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587715,"byte_end":587720,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3591},{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591552,"byte_end":591557,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3601},{"krate":0,"index":3604},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":610774,"byte_end":610786,"line_start":625,"line_end":625,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":617879,"byte_end":617888,"line_start":18,"line_end":18,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3645}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":53163,"byte_end":53172,"line_start":1512,"line_end":1512,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3658}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_1d.rs","byte_start":619492,"byte_end":619501,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3667},{"krate":0,"index":3668}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621526,"byte_end":621535,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":624903,"byte_end":624912,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3686},{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627002,"byte_end":627011,"line_start":18,"line_end":18,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3705},{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3719}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641294,"byte_end":641303,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3742},{"krate":0,"index":3744},{"krate":0,"index":3746}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645661,"byte_end":645670,"line_start":177,"line_end":177,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3756},{"krate":0,"index":3757}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":646294,"byte_end":646303,"line_start":198,"line_end":198,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3763}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":646857,"byte_end":646866,"line_start":220,"line_end":220,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3767}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":648132,"byte_end":648141,"line_start":261,"line_end":261,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3773},{"krate":0,"index":3774}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650034,"byte_end":650043,"line_start":321,"line_end":321,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3781},{"krate":0,"index":3782}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650643,"byte_end":650652,"line_start":343,"line_end":343,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3787}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":672336,"byte_end":672343,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":672375,"byte_end":672382,"line_start":51,"line_end":51,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":683444,"byte_end":683453,"line_start":368,"line_end":368,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3880},{"krate":0,"index":3881}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":684255,"byte_end":684264,"line_start":398,"line_end":398,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3894},{"krate":0,"index":3895}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688604,"byte_end":688613,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":3926},{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692644,"byte_end":692656,"line_start":116,"line_end":116,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3933},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3938}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696927,"byte_end":696936,"line_start":222,"line_end":222,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3944},{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":697771,"byte_end":697783,"line_start":245,"line_end":245,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3950},{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699394,"byte_end":699403,"line_start":23,"line_end":23,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3974},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701246,"byte_end":701255,"line_start":78,"line_end":78,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3982}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702031,"byte_end":702043,"line_start":104,"line_end":104,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702712,"byte_end":702724,"line_start":126,"line_end":126,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":705445,"byte_end":705454,"line_start":187,"line_end":187,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":706168,"byte_end":706180,"line_start":216,"line_end":216,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":713310,"byte_end":713322,"line_start":145,"line_end":145,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715694,"byte_end":715703,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4054}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719750,"byte_end":719759,"line_start":99,"line_end":99,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4059}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720787,"byte_end":720799,"line_start":131,"line_end":131,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4064},{"krate":0,"index":4065}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722254,"byte_end":722266,"line_start":171,"line_end":171,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4071}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":723746,"byte_end":723758,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4092},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4096},{"krate":0,"index":4098},{"krate":0,"index":4099}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729558,"byte_end":729570,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4104}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":732310,"byte_end":732325,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4115},{"krate":0,"index":4117},{"krate":0,"index":4118}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":738386,"byte_end":738401,"line_start":372,"line_end":372,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Inherent","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":739364,"byte_end":739372,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":739728,"byte_end":739736,"line_start":29,"line_end":29,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4136}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":740080,"byte_end":740088,"line_start":42,"line_end":42,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":740440,"byte_end":740448,"line_start":55,"line_end":55,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4146}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":741009,"byte_end":741017,"line_start":75,"line_end":75,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":157754,"byte_end":157758,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1006}},{"kind":"Mod","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":8177,"byte_end":8184,"line_start":225,"line_end":225,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3027}},{"kind":"Mod","span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":55003,"byte_end":55009,"line_start":1584,"line_end":1584,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3721}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":69338,"byte_end":69351,"line_start":38,"line_end":38,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":74330,"byte_end":74339,"line_start":192,"line_end":192,"column_start":61,"column_end":70},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":74782,"byte_end":74791,"line_start":206,"line_end":206,"column_start":57,"column_end":66},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":75661,"byte_end":75670,"line_start":234,"line_end":234,"column_start":63,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":6970}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":76122,"byte_end":76131,"line_start":248,"line_end":248,"column_start":63,"column_end":72},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":6972}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":76582,"byte_end":76591,"line_start":261,"line_end":261,"column_start":63,"column_end":72},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":6964}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arrayformat.rs","byte_start":77037,"byte_end":77046,"line_start":275,"line_end":275,"column_start":59,"column_end":68},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":6962}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":91988,"byte_end":91997,"line_start":43,"line_end":43,"column_start":28,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":92546,"byte_end":92555,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":2366}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":93144,"byte_end":93153,"line_start":87,"line_end":87,"column_start":54,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":94044,"byte_end":94053,"line_start":118,"line_end":118,"column_start":62,"column_end":71},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":94626,"byte_end":94635,"line_start":144,"line_end":144,"column_start":19,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":94731,"byte_end":94740,"line_start":152,"line_end":152,"column_start":31,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":95044,"byte_end":95053,"line_start":164,"line_end":164,"column_start":29,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":95469,"byte_end":95478,"line_start":182,"line_end":182,"column_start":32,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":96581,"byte_end":96590,"line_start":231,"line_end":231,"column_start":33,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3112},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":96797,"byte_end":96809,"line_start":243,"line_end":243,"column_start":33,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":97021,"byte_end":97030,"line_start":255,"line_end":255,"column_start":31,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":7141}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":97971,"byte_end":97980,"line_start":286,"line_end":286,"column_start":28,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":98110,"byte_end":98119,"line_start":294,"line_end":294,"column_start":28,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":98504,"byte_end":98513,"line_start":307,"line_end":307,"column_start":48,"column_end":57},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3112},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":99165,"byte_end":99174,"line_start":327,"line_end":327,"column_start":49,"column_end":58},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3112},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":99502,"byte_end":99514,"line_start":339,"line_end":339,"column_start":52,"column_end":64},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100186,"byte_end":100198,"line_start":359,"line_end":359,"column_start":53,"column_end":65},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":100435,"byte_end":100443,"line_start":370,"line_end":370,"column_start":34,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3102},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101072,"byte_end":101076,"line_start":400,"line_end":400,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":408}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101170,"byte_end":101171,"line_start":405,"line_end":405,"column_start":45,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":416},"to":{"krate":0,"index":408}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/arraytraits.rs","byte_start":101779,"byte_end":101788,"line_start":424,"line_end":424,"column_start":27,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":102699,"byte_end":102708,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":105631,"byte_end":105640,"line_start":135,"line_end":135,"column_start":19,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4163},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":106135,"byte_end":106144,"line_start":156,"line_end":156,"column_start":18,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4163},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":107001,"byte_end":107010,"line_start":177,"line_end":177,"column_start":25,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4163},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_repr.rs","byte_start":107056,"byte_end":107065,"line_start":178,"line_end":178,"column_start":25,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4163},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108299,"byte_end":108304,"line_start":33,"line_end":33,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":108854,"byte_end":108861,"line_start":54,"line_end":54,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":481},"to":{"krate":0,"index":485}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":109858,"byte_end":109865,"line_start":82,"line_end":82,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":481},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":110548,"byte_end":110555,"line_start":105,"line_end":105,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":481},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112092,"byte_end":112096,"line_start":150,"line_end":150,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":492},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112099,"byte_end":112109,"line_start":150,"line_end":150,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":485},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112578,"byte_end":112589,"line_start":170,"line_end":170,"column_start":28,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":112856,"byte_end":112867,"line_start":184,"line_end":184,"column_start":33,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":113032,"byte_end":113043,"line_start":190,"line_end":190,"column_start":28,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":113306,"byte_end":113317,"line_start":204,"line_end":204,"column_start":31,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":485}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":113582,"byte_end":113593,"line_start":219,"line_end":219,"column_start":33,"column_end":44},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":113756,"byte_end":113768,"line_start":225,"line_end":225,"column_start":28,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":114080,"byte_end":114092,"line_start":239,"line_end":239,"column_start":31,"column_end":43},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":485}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":115097,"byte_end":115109,"line_start":275,"line_end":275,"column_start":25,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":116638,"byte_end":116650,"line_start":322,"line_end":322,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":116705,"byte_end":116717,"line_start":324,"line_end":324,"column_start":33,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":116914,"byte_end":116923,"line_start":331,"line_end":331,"column_start":28,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4163},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":117334,"byte_end":117343,"line_start":348,"line_end":348,"column_start":31,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4163},"to":{"krate":0,"index":485}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":117601,"byte_end":117610,"line_start":363,"line_end":363,"column_start":25,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4163},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":118011,"byte_end":118020,"line_start":384,"line_end":384,"column_start":28,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4163},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":118060,"byte_end":118069,"line_start":386,"line_end":386,"column_start":33,"column_end":42},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4163},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":118952,"byte_end":118960,"line_start":416,"line_end":416,"column_start":32,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":119220,"byte_end":119228,"line_start":430,"line_end":430,"column_start":29,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":119635,"byte_end":119643,"line_start":449,"line_end":449,"column_start":37,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":119809,"byte_end":119817,"line_start":455,"line_end":455,"column_start":32,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120087,"byte_end":120095,"line_start":469,"line_end":469,"column_start":35,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":485}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120365,"byte_end":120373,"line_start":484,"line_end":484,"column_start":29,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":120779,"byte_end":120787,"line_start":503,"line_end":503,"column_start":32,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":121571,"byte_end":121575,"line_start":518,"line_end":518,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":492},"to":{"krate":0,"index":608}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122232,"byte_end":122237,"line_start":537,"line_end":537,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":612}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122240,"byte_end":122244,"line_start":537,"line_end":537,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":492},"to":{"krate":0,"index":612}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122247,"byte_end":122259,"line_start":537,"line_end":537,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":489},"to":{"krate":0,"index":612}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122294,"byte_end":122306,"line_start":539,"line_end":539,"column_start":31,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":612}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122347,"byte_end":122355,"line_start":540,"line_end":540,"column_start":35,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":612}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122396,"byte_end":122405,"line_start":542,"line_end":542,"column_start":30,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4163},"to":{"krate":0,"index":608}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122663,"byte_end":122675,"line_start":554,"line_end":554,"column_start":30,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":608}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":122938,"byte_end":122945,"line_start":566,"line_end":566,"column_start":32,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3136},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":123511,"byte_end":123518,"line_start":588,"line_end":588,"column_start":35,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3136},"to":{"krate":0,"index":485}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":124176,"byte_end":124183,"line_start":616,"line_end":616,"column_start":37,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3136},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":125491,"byte_end":125498,"line_start":656,"line_end":656,"column_start":29,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3136},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126569,"byte_end":126576,"line_start":690,"line_end":690,"column_start":32,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3136},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":126867,"byte_end":126874,"line_start":698,"line_end":698,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":481},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127286,"byte_end":127295,"line_start":711,"line_end":711,"column_start":32,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4163},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127449,"byte_end":127461,"line_start":719,"line_end":719,"column_start":32,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127674,"byte_end":127685,"line_start":727,"line_end":727,"column_start":32,"column_end":43},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":127856,"byte_end":127867,"line_start":735,"line_end":735,"column_start":32,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":128046,"byte_end":128054,"line_start":743,"line_end":743,"column_start":44,"column_end":52},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":128225,"byte_end":128233,"line_start":751,"line_end":751,"column_start":44,"column_end":52},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/data_traits.rs","byte_start":128412,"byte_end":128419,"line_start":759,"line_end":759,"column_start":44,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3136},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":135913,"byte_end":135919,"line_start":220,"line_end":220,"column_start":29,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/free_functions.rs","byte_start":137039,"byte_end":137045,"line_start":250,"line_end":250,"column_start":32,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":139843,"byte_end":139853,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140787,"byte_end":140796,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4285},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":140922,"byte_end":140932,"line_start":66,"line_end":66,"column_start":20,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4281},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":141074,"byte_end":141084,"line_start":74,"line_end":74,"column_start":16,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4281},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":141111,"byte_end":141121,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4281},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/error.rs","byte_start":141747,"byte_end":141757,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4281},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/geomspace.rs","byte_start":143744,"byte_end":143753,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":798},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/geomspace.rs","byte_start":144349,"byte_end":144358,"line_start":48,"line_end":48,"column_start":33,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":798},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/geomspace.rs","byte_start":144800,"byte_end":144809,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":798},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":149510,"byte_end":149521,"line_start":53,"line_end":53,"column_start":22,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4304},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151150,"byte_end":151161,"line_start":112,"line_end":112,"column_start":31,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4304},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151213,"byte_end":151220,"line_start":114,"line_end":114,"column_start":26,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4311},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":151860,"byte_end":151868,"line_start":147,"line_end":147,"column_start":20,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4323},"to":{"krate":0,"index":2094}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":152793,"byte_end":152800,"line_start":175,"line_end":175,"column_start":42,"column_end":49},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4311},"to":{"krate":0,"index":2080}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":154837,"byte_end":154849,"line_start":271,"line_end":271,"column_start":22,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4336},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/indexes.rs","byte_start":155652,"byte_end":155664,"line_start":303,"line_end":303,"column_start":31,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4336},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":203402,"byte_end":203413,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":204277,"byte_end":204288,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":900},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":205603,"byte_end":205617,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/chunks.rs","byte_start":206487,"byte_end":206501,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":927},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":208966,"byte_end":208974,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":209778,"byte_end":209786,"line_start":60,"line_end":60,"column_start":36,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":961},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":210065,"byte_end":210073,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":961},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":210153,"byte_end":210161,"line_start":77,"line_end":77,"column_start":21,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":961},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":210933,"byte_end":210938,"line_start":100,"line_end":100,"column_start":29,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3105},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":211134,"byte_end":211142,"line_start":112,"line_end":112,"column_start":29,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3102},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/into_iter.rs","byte_start":211366,"byte_end":211374,"line_start":125,"line_end":125,"column_start":29,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3108},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":212829,"byte_end":212834,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":213878,"byte_end":213883,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":214466,"byte_end":214474,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/lanes.rs","byte_start":215151,"byte_end":215159,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1057},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":215887,"byte_end":215894,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/windows.rs","byte_start":217369,"byte_end":217376,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":158484,"byte_end":158492,"line_start":44,"line_end":44,"column_start":23,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":158939,"byte_end":158947,"line_start":59,"line_end":59,"column_start":36,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":160416,"byte_end":160424,"line_start":106,"line_end":106,"column_start":49,"column_end":57},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":160916,"byte_end":160924,"line_start":124,"line_end":124,"column_start":33,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":162771,"byte_end":162783,"line_start":201,"line_end":201,"column_start":27,"column_end":39},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":162996,"byte_end":163008,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":163476,"byte_end":163488,"line_start":229,"line_end":229,"column_start":37,"column_end":49},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":163858,"byte_end":163870,"line_start":243,"line_end":243,"column_start":38,"column_end":50},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":164560,"byte_end":164564,"line_start":279,"line_end":279,"column_start":16,"column_end":20},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":164917,"byte_end":164924,"line_start":294,"line_end":294,"column_start":16,"column_end":23},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166227,"byte_end":166242,"line_start":346,"line_end":346,"column_start":27,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":166871,"byte_end":166882,"line_start":365,"line_end":365,"column_start":16,"column_end":27},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":167025,"byte_end":167039,"line_start":374,"line_end":374,"column_start":16,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":167212,"byte_end":167216,"line_start":383,"line_end":383,"column_start":40,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1217},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":168992,"byte_end":168996,"line_start":456,"line_end":456,"column_start":37,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1217},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":169470,"byte_end":169474,"line_start":474,"line_end":474,"column_start":38,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1217},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":169640,"byte_end":169651,"line_start":483,"line_end":483,"column_start":40,"column_end":51},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4505},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":170153,"byte_end":170164,"line_start":502,"line_end":502,"column_start":38,"column_end":49},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4505},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":170305,"byte_end":170312,"line_start":511,"line_end":511,"column_start":40,"column_end":47},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":172096,"byte_end":172103,"line_start":584,"line_end":584,"column_start":37,"column_end":44},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":172585,"byte_end":172592,"line_start":602,"line_end":602,"column_start":38,"column_end":45},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":172758,"byte_end":172773,"line_start":611,"line_end":611,"column_start":40,"column_end":55},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":173257,"byte_end":173272,"line_start":630,"line_end":630,"column_start":37,"column_end":52},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":173654,"byte_end":173669,"line_start":644,"line_end":644,"column_start":38,"column_end":53},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":173808,"byte_end":173822,"line_start":653,"line_end":653,"column_start":40,"column_end":54},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":174328,"byte_end":174342,"line_start":672,"line_end":672,"column_start":38,"column_end":52},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":174958,"byte_end":174967,"line_start":704,"line_end":704,"column_start":29,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1388},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175364,"byte_end":175373,"line_start":720,"line_end":720,"column_start":38,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1388},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":175991,"byte_end":176003,"line_start":744,"line_end":744,"column_start":29,"column_end":41},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":176406,"byte_end":176418,"line_start":760,"line_end":760,"column_start":38,"column_end":50},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":177301,"byte_end":177313,"line_start":801,"line_end":801,"column_start":23,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":179612,"byte_end":179624,"line_start":873,"line_end":873,"column_start":25,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180076,"byte_end":180088,"line_start":895,"line_end":895,"column_start":36,"column_end":48},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":180404,"byte_end":180416,"line_start":910,"line_end":910,"column_start":34,"column_end":46},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":181335,"byte_end":181343,"line_start":949,"line_end":949,"column_start":27,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":182326,"byte_end":182334,"line_start":983,"line_end":983,"column_start":29,"column_end":37},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":182657,"byte_end":182665,"line_start":998,"line_end":998,"column_start":40,"column_end":48},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":182869,"byte_end":182877,"line_start":1007,"line_end":1007,"column_start":38,"column_end":46},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":183682,"byte_end":183693,"line_start":1035,"line_end":1035,"column_start":27,"column_end":38},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":184688,"byte_end":184699,"line_start":1069,"line_end":1069,"column_start":29,"column_end":40},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":185025,"byte_end":185036,"line_start":1084,"line_end":1084,"column_start":40,"column_end":51},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":185240,"byte_end":185251,"line_start":1093,"line_end":1093,"column_start":38,"column_end":49},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":185391,"byte_end":185399,"line_start":1102,"line_end":1102,"column_start":42,"column_end":50},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4538},"to":{"krate":0,"index":2080}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":187025,"byte_end":187036,"line_start":1159,"line_end":1159,"column_start":42,"column_end":53},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":2080}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":191176,"byte_end":191190,"line_start":1299,"line_end":1299,"column_start":27,"column_end":41},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":195067,"byte_end":195084,"line_start":1413,"line_end":1413,"column_start":27,"column_end":44},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196538,"byte_end":196546,"line_start":1456,"line_end":1456,"column_start":36,"column_end":44},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1674},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196612,"byte_end":196621,"line_start":1458,"line_end":1458,"column_start":36,"column_end":45},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":798},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196687,"byte_end":196695,"line_start":1460,"line_end":1460,"column_start":36,"column_end":44},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1696},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196744,"byte_end":196748,"line_start":1461,"line_end":1461,"column_start":43,"column_end":47},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1217},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196804,"byte_end":196811,"line_start":1462,"line_end":1462,"column_start":43,"column_end":50},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1228},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196871,"byte_end":196877,"line_start":1463,"line_end":1463,"column_start":47,"column_end":53},"kind":{"Impl":{"id":169}},"from":{"krate":2,"index":33915},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":196958,"byte_end":196961,"line_start":1464,"line_end":1464,"column_start":50,"column_end":53},"kind":{"Impl":{"id":170}},"from":{"krate":2,"index":34014},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197042,"byte_end":197046,"line_start":1465,"line_end":1465,"column_start":47,"column_end":51},"kind":{"Impl":{"id":171}},"from":{"krate":2,"index":7511},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197103,"byte_end":197110,"line_start":1466,"line_end":1466,"column_start":47,"column_end":54},"kind":{"Impl":{"id":172}},"from":{"krate":2,"index":7535},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197165,"byte_end":197170,"line_start":1467,"line_end":1467,"column_start":45,"column_end":50},"kind":{"Impl":{"id":173}},"from":{"krate":2,"index":33366},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197295,"byte_end":197306,"line_start":1469,"line_end":1469,"column_start":36,"column_end":47},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4304},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197367,"byte_end":197379,"line_start":1470,"line_end":1470,"column_start":36,"column_end":48},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4336},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/iterators/mod.rs","byte_start":197443,"byte_end":197451,"line_start":1471,"line_end":1471,"column_start":39,"column_end":47},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":961},"to":{"krate":0,"index":1576}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/layout/layoutfmt.rs","byte_start":226168,"byte_end":226174,"line_start":15,"line_end":15,"column_start":21,"column_end":27},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4705},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/layout/mod.rs","byte_start":218638,"byte_end":218644,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227546,"byte_end":227550,"line_start":28,"line_end":28,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":1666}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227557,"byte_end":227561,"line_start":29,"line_end":29,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":19,"index":301},"to":{"krate":0,"index":1666}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227568,"byte_end":227571,"line_start":30,"line_end":30,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":19,"index":311},"to":{"krate":0,"index":1666}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227578,"byte_end":227581,"line_start":31,"line_end":31,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2146},"to":{"krate":0,"index":1666}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227603,"byte_end":227606,"line_start":32,"line_end":32,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2151},"to":{"krate":0,"index":1666}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227628,"byte_end":227631,"line_start":33,"line_end":33,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2156},"to":{"krate":0,"index":1666}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227653,"byte_end":227656,"line_start":34,"line_end":34,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2161},"to":{"krate":0,"index":1666}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":227702,"byte_end":227703,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1668},"to":{"krate":0,"index":1666}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228298,"byte_end":228303,"line_start":60,"line_end":60,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":19,"index":234},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228310,"byte_end":228319,"line_start":61,"line_end":61,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2177},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228326,"byte_end":228335,"line_start":62,"line_end":62,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228342,"byte_end":228351,"line_start":63,"line_end":63,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228358,"byte_end":228367,"line_start":64,"line_end":64,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2189},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228374,"byte_end":228383,"line_start":65,"line_end":65,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2193},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228395,"byte_end":228402,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":6958},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228414,"byte_end":228419,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":6953},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228431,"byte_end":228439,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":6970},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228451,"byte_end":228459,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":6972},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228466,"byte_end":228479,"line_start":70,"line_end":70,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":3830},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228486,"byte_end":228498,"line_start":71,"line_end":71,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":1666},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228505,"byte_end":228509,"line_start":72,"line_end":72,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg_traits.rs","byte_start":228516,"byte_end":228520,"line_start":73,"line_end":73,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linspace.rs","byte_start":229232,"byte_end":229240,"line_start":21,"line_end":21,"column_start":22,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linspace.rs","byte_start":229781,"byte_end":229789,"line_start":46,"line_end":46,"column_start":33,"column_end":41},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linspace.rs","byte_start":230176,"byte_end":230184,"line_start":63,"line_end":63,"column_start":31,"column_end":39},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/logspace.rs","byte_start":232325,"byte_end":232333,"line_start":23,"line_end":23,"column_start":22,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1696},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/logspace.rs","byte_start":232939,"byte_end":232947,"line_start":49,"line_end":49,"column_start":33,"column_end":41},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1696},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/logspace.rs","byte_start":233399,"byte_end":233407,"line_start":67,"line_end":67,"column_start":31,"column_end":39},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1696},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236548,"byte_end":236556,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":236937,"byte_end":236945,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237073,"byte_end":237081,"line_start":37,"line_end":37,"column_start":22,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237195,"byte_end":237203,"line_start":42,"line_end":42,"column_start":19,"column_end":27},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237322,"byte_end":237330,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237461,"byte_end":237469,"line_start":58,"line_end":58,"column_start":16,"column_end":24},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237524,"byte_end":237532,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":1841}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":237966,"byte_end":237974,"line_start":75,"line_end":75,"column_start":17,"column_end":25},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/math_cell.rs","byte_start":238115,"byte_end":238123,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/order.rs","byte_start":243450,"byte_end":243455,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/partial.rs","byte_start":245414,"byte_end":245421,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/partial.rs","byte_start":247256,"byte_end":247263,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1779},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/partial.rs","byte_start":247303,"byte_end":247310,"line_start":80,"line_end":80,"column_start":18,"column_end":25},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1779},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":247989,"byte_end":247994,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248294,"byte_end":248305,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":248771,"byte_end":248778,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":250051,"byte_end":250056,"line_start":99,"line_end":99,"column_start":21,"column_end":26},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4734},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":250265,"byte_end":250276,"line_start":109,"line_end":109,"column_start":24,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4752},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":250596,"byte_end":250597,"line_start":124,"line_end":124,"column_start":26,"column_end":27},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1822},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251134,"byte_end":251139,"line_start":147,"line_end":147,"column_start":26,"column_end":31},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4734},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":251624,"byte_end":251629,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/shape_builder.rs","byte_start":252351,"byte_end":252352,"line_start":203,"line_end":203,"column_start":22,"column_end":23},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1845},"to":{"krate":0,"index":1841}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":254654,"byte_end":254659,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":257910,"byte_end":257923,"line_start":132,"line_end":132,"column_start":6,"column_end":19},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":258394,"byte_end":258407,"line_start":149,"line_end":149,"column_start":23,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4807},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":261273,"byte_end":261278,"line_start":238,"line_end":238,"column_start":26,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4781},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":261458,"byte_end":261471,"line_start":249,"line_end":249,"column_start":26,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4807},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":261670,"byte_end":261683,"line_start":260,"line_end":260,"column_start":22,"column_end":35},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4807},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262274,"byte_end":262287,"line_start":285,"line_end":285,"column_start":24,"column_end":37},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4807},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":262862,"byte_end":262867,"line_start":299,"line_end":299,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":1900}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":264177,"byte_end":264186,"line_start":359,"line_end":359,"column_start":47,"column_end":56},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4951},"to":{"krate":0,"index":1900}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":265490,"byte_end":265499,"line_start":409,"line_end":409,"column_start":30,"column_end":39},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4951},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":266180,"byte_end":266189,"line_start":438,"line_end":438,"column_start":20,"column_end":29},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":268790,"byte_end":268799,"line_start":519,"line_end":519,"column_start":54,"column_end":63},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4951},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":269271,"byte_end":269280,"line_start":537,"line_end":537,"column_start":49,"column_end":58},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4951},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":270786,"byte_end":270795,"line_start":587,"line_end":587,"column_start":47,"column_end":56},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4951},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":271037,"byte_end":271046,"line_start":599,"line_end":599,"column_start":9,"column_end":18},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4951},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":271432,"byte_end":271441,"line_start":614,"line_end":614,"column_start":29,"column_end":38},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4951},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/slice.rs","byte_start":271550,"byte_end":271559,"line_start":622,"line_end":622,"column_start":30,"column_end":39},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4951},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/split_at.rs","byte_start":284516,"byte_end":284523,"line_start":9,"line_end":9,"column_start":36,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":2012},"to":{"krate":0,"index":2014}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/split_at.rs","byte_start":284780,"byte_end":284781,"line_start":18,"line_end":18,"column_start":21,"column_end":22},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2019},"to":{"krate":0,"index":2012}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/split_at.rs","byte_start":285091,"byte_end":285103,"line_start":33,"line_end":33,"column_start":28,"column_end":40},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3116},"to":{"krate":0,"index":2012}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/split_at.rs","byte_start":285273,"byte_end":285288,"line_start":42,"line_end":42,"column_start":24,"column_end":39},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3123},"to":{"krate":0,"index":2012}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/low_level_util.rs","byte_start":294218,"byte_end":294230,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/low_level_util.rs","byte_start":294409,"byte_end":294421,"line_start":25,"line_end":25,"column_start":15,"column_end":27},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2054},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":332877,"byte_end":332878,"line_start":23,"line_end":23,"column_start":28,"column_end":29},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2075},"to":{"krate":0,"index":2069}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":335244,"byte_end":335248,"line_start":99,"line_end":99,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":2094}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":337715,"byte_end":337724,"line_start":191,"line_end":191,"column_start":42,"column_end":51},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3112},"to":{"krate":0,"index":2080}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":338819,"byte_end":338831,"line_start":244,"line_end":244,"column_start":42,"column_end":54},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3116},"to":{"krate":0,"index":2080}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":339930,"byte_end":339942,"line_start":297,"line_end":297,"column_start":38,"column_end":50},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3120},"to":{"krate":0,"index":2080}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/ndproducer.rs","byte_start":341031,"byte_end":341046,"line_start":350,"line_end":350,"column_start":38,"column_end":53},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3123},"to":{"krate":0,"index":2080}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":297138,"byte_end":297147,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":297336,"byte_end":297345,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3112},"to":{"krate":0,"index":2234}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":297716,"byte_end":297721,"line_start":101,"line_end":101,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":2252}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301169,"byte_end":301172,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":301843,"byte_end":301846,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":302743,"byte_end":302746,"line_start":260,"line_end":260,"column_start":16,"column_end":19},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":303931,"byte_end":303934,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":308495,"byte_end":308498,"line_start":436,"line_end":436,"column_start":17,"column_end":20},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/zip/mod.rs","byte_start":327266,"byte_end":327275,"line_start":930,"line_end":930,"column_start":9,"column_end":18},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":384889,"byte_end":384904,"line_start":64,"line_end":64,"column_start":6,"column_end":21},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":385482,"byte_end":385486,"line_start":87,"line_end":87,"column_start":26,"column_end":30},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5739},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":386458,"byte_end":386462,"line_start":126,"line_end":126,"column_start":37,"column_end":41},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5739},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axes.rs","byte_start":386853,"byte_end":386857,"line_start":144,"line_end":144,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":2384}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/axis.rs","byte_start":388600,"byte_end":388604,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/broadcast.rs","byte_start":390281,"byte_end":390282,"line_start":45,"line_end":45,"column_start":34,"column_end":35},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2415},"to":{"krate":0,"index":2411}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395108,"byte_end":395110,"line_start":47,"line_end":47,"column_start":24,"column_end":26},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":3093},"to":{"krate":0,"index":2433}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395245,"byte_end":395246,"line_start":55,"line_end":55,"column_start":27,"column_end":28},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":2440},"to":{"krate":0,"index":2433}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395396,"byte_end":395405,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6234},"to":{"krate":0,"index":2433}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/conversion.rs","byte_start":395550,"byte_end":395553,"line_start":74,"line_end":74,"column_start":24,"column_end":27},"kind":{"Impl":{"id":356}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":2433}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":398948,"byte_end":398951,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":399449,"byte_end":399452,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6079},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dim.rs","byte_start":399577,"byte_end":399580,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6079},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403471,"byte_end":403476,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403483,"byte_end":403485,"line_start":33,"line_end":33,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":1803},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403492,"byte_end":403497,"line_start":34,"line_end":34,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":6953},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403504,"byte_end":403508,"line_start":35,"line_end":35,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403515,"byte_end":403519,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403526,"byte_end":403533,"line_start":37,"line_end":37,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2069},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403540,"byte_end":403548,"line_start":38,"line_end":38,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2366},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403578,"byte_end":403581,"line_start":39,"line_end":39,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2146},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403609,"byte_end":403618,"line_start":40,"line_end":40,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2177},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403633,"byte_end":403642,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2177},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403659,"byte_end":403662,"line_start":42,"line_end":42,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2151},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403690,"byte_end":403699,"line_start":43,"line_end":43,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403714,"byte_end":403723,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403740,"byte_end":403743,"line_start":45,"line_end":45,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2156},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403772,"byte_end":403775,"line_start":46,"line_end":46,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2156},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403803,"byte_end":403812,"line_start":47,"line_end":47,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403827,"byte_end":403836,"line_start":48,"line_end":48,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403853,"byte_end":403862,"line_start":49,"line_end":49,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403876,"byte_end":403882,"line_start":50,"line_end":50,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2411},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403907,"byte_end":403913,"line_start":51,"line_end":51,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2411},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403939,"byte_end":403945,"line_start":52,"line_end":52,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2411},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":403973,"byte_end":403979,"line_start":53,"line_end":53,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2411},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404029,"byte_end":404035,"line_start":54,"line_end":54,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2411},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404107,"byte_end":404113,"line_start":55,"line_end":55,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2838},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404126,"byte_end":404132,"line_start":56,"line_end":56,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2838},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404169,"byte_end":404175,"line_start":57,"line_end":57,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2838},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404211,"byte_end":404217,"line_start":58,"line_end":58,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2838},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404244,"byte_end":404250,"line_start":59,"line_end":59,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2838},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":404300,"byte_end":404306,"line_start":60,"line_end":60,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2838},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":414580,"byte_end":414583,"line_start":393,"line_end":393,"column_start":20,"column_end":23},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":415467,"byte_end":415470,"line_start":435,"line_end":435,"column_start":20,"column_end":23},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":417963,"byte_end":417966,"line_start":549,"line_end":549,"column_start":20,"column_end":23},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":421629,"byte_end":421632,"line_start":704,"line_end":704,"column_start":20,"column_end":23},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":426609,"byte_end":426614,"line_start":874,"line_end":874,"column_start":20,"column_end":25},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":96},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":427693,"byte_end":427696,"line_start":927,"line_end":927,"column_start":23,"column_end":26},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6079},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dimension_trait.rs","byte_start":427878,"byte_end":427881,"line_start":934,"line_end":934,"column_start":26,"column_end":29},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":6079},"to":{"krate":2,"index":2366}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":428321,"byte_end":428330,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":6221},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":428676,"byte_end":428685,"line_start":29,"line_end":29,"column_start":22,"column_end":31},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":6221},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429085,"byte_end":429094,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":6221},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429211,"byte_end":429220,"line_start":50,"line_end":50,"column_start":22,"column_end":31},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":6221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429517,"byte_end":429526,"line_start":62,"line_end":62,"column_start":22,"column_end":31},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429768,"byte_end":429777,"line_start":73,"line_end":73,"column_start":15,"column_end":24},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":429973,"byte_end":429982,"line_start":83,"line_end":83,"column_start":25,"column_end":34},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6221},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430190,"byte_end":430199,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6221},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430240,"byte_end":430249,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6221},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":430685,"byte_end":430694,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6221},"to":{"krate":2,"index":7141}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":431110,"byte_end":431119,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":432444,"byte_end":432453,"line_start":161,"line_end":161,"column_start":29,"column_end":38},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":432582,"byte_end":432591,"line_start":168,"line_end":168,"column_start":24,"column_end":33},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":432721,"byte_end":432730,"line_start":175,"line_end":175,"column_start":22,"column_end":31},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":432910,"byte_end":432919,"line_start":185,"line_end":185,"column_start":25,"column_end":34},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":2366}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433063,"byte_end":433072,"line_start":194,"line_end":194,"column_start":16,"column_end":25},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433187,"byte_end":433196,"line_start":202,"line_end":202,"column_start":19,"column_end":28},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433519,"byte_end":433522,"line_start":218,"line_end":218,"column_start":21,"column_end":24},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":2857}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/dynindeximpl.rs","byte_start":433698,"byte_end":433703,"line_start":225,"line_end":225,"column_start":6,"column_end":11},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434564,"byte_end":434569,"line_start":22,"line_end":22,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":6953},"to":{"krate":0,"index":2791}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":434764,"byte_end":434765,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":2796},"to":{"krate":0,"index":2791}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":436951,"byte_end":436953,"line_start":101,"line_end":101,"column_start":30,"column_end":32},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":3093},"to":{"krate":0,"index":2791}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ndindex.rs","byte_start":437270,"byte_end":437272,"line_start":112,"line_end":112,"column_start":32,"column_end":34},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":3093},"to":{"krate":0,"index":2791}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ops.rs","byte_start":441861,"byte_end":441864,"line_start":30,"line_end":30,"column_start":34,"column_end":37},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":82},"to":{"krate":0,"index":2838}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/ops.rs","byte_start":443628,"byte_end":443633,"line_start":88,"line_end":88,"column_start":34,"column_end":39},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":96},"to":{"krate":0,"index":2838}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444279,"byte_end":444288,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2533},"to":{"krate":0,"index":2857}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444370,"byte_end":444373,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":2857}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/remove_axis.rs","byte_start":444540,"byte_end":444543,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":2857}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":455807,"byte_end":455814,"line_start":9,"line_end":9,"column_start":26,"column_end":33},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":455988,"byte_end":455995,"line_start":21,"line_end":21,"column_start":26,"column_end":33},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":456176,"byte_end":456183,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":2366}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":456351,"byte_end":456358,"line_start":43,"line_end":43,"column_start":26,"column_end":33},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":456549,"byte_end":456556,"line_start":55,"line_end":55,"column_start":26,"column_end":33},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":456754,"byte_end":456761,"line_start":67,"line_end":67,"column_start":29,"column_end":36},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":2366}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457020,"byte_end":457025,"line_start":79,"line_end":79,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2362},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457151,"byte_end":457159,"line_start":84,"line_end":84,"column_start":45,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":2918},"to":{"krate":0,"index":2920}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457162,"byte_end":457170,"line_start":84,"line_end":84,"column_start":56,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":2366},"to":{"krate":0,"index":2920}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457204,"byte_end":457211,"line_start":86,"line_end":86,"column_start":22,"column_end":29},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":2888},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457320,"byte_end":457327,"line_start":91,"line_end":91,"column_start":22,"column_end":29},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":2888},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457443,"byte_end":457450,"line_start":96,"line_end":96,"column_start":25,"column_end":32},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":2888},"to":{"krate":0,"index":2920}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457504,"byte_end":457511,"line_start":98,"line_end":98,"column_start":22,"column_end":29},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":2892},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457620,"byte_end":457627,"line_start":103,"line_end":103,"column_start":22,"column_end":29},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":2892},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/sequence.rs","byte_start":457743,"byte_end":457750,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":2892},"to":{"krate":0,"index":2920}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/dimension/mod.rs","byte_start":353389,"byte_end":353390,"line_start":321,"line_end":321,"column_start":26,"column_end":27},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":2971},"to":{"krate":0,"index":2967}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51113,"byte_end":51125,"line_start":1430,"line_end":1430,"column_start":19,"column_end":31},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":6564},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51532,"byte_end":51543,"line_start":1446,"line_end":1446,"column_start":9,"column_end":20},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":6571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":51949,"byte_end":51957,"line_start":1463,"line_end":1463,"column_start":9,"column_end":17},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":52320,"byte_end":52327,"line_start":1481,"line_end":1481,"column_start":13,"column_end":20},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":3136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_clone.rs","byte_start":459845,"byte_end":459854,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_clone.rs","byte_start":460744,"byte_end":460753,"line_start":38,"line_end":38,"column_start":48,"column_end":57},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_internal_constructors.rs","byte_start":461214,"byte_end":461223,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_internal_constructors.rs","byte_start":461906,"byte_end":461915,"line_start":39,"line_end":39,"column_start":15,"column_end":24},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":463975,"byte_end":463984,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":468905,"byte_end":468914,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":472197,"byte_end":472206,"line_start":301,"line_end":301,"column_start":15,"column_end":24},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_constructors.rs","byte_start":485860,"byte_end":485869,"line_start":674,"line_end":674,"column_start":15,"column_end":24},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_methods.rs","byte_start":488031,"byte_end":488040,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":585873,"byte_end":585878,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":3105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587232,"byte_end":587237,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":3105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":587715,"byte_end":587720,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":3105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":591552,"byte_end":591557,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":3105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_owned_array.rs","byte_start":610774,"byte_end":610786,"line_start":625,"line_end":625,"column_start":30,"column_end":42},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":3614},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_special_element_types.rs","byte_start":617879,"byte_end":617888,"line_start":18,"line_end":18,"column_start":15,"column_end":24},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/lib.rs","byte_start":53163,"byte_end":53172,"line_start":1512,"line_end":1512,"column_start":15,"column_end":24},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_1d.rs","byte_start":619492,"byte_end":619501,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_2d.rs","byte_start":621526,"byte_end":621535,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_dyn.rs","byte_start":624903,"byte_end":624912,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/numeric/impl_numeric.rs","byte_start":627002,"byte_end":627011,"line_start":18,"line_end":18,"column_start":15,"column_end":24},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":641294,"byte_end":641303,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":645661,"byte_end":645670,"line_start":177,"line_end":177,"column_start":44,"column_end":53},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":3095},"to":{"krate":0,"index":3748}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":646294,"byte_end":646303,"line_start":198,"line_end":198,"column_start":44,"column_end":53},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":3095},"to":{"krate":0,"index":3748}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":646857,"byte_end":646866,"line_start":220,"line_end":220,"column_start":12,"column_end":21},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":648132,"byte_end":648141,"line_start":261,"line_end":261,"column_start":44,"column_end":53},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":3095},"to":{"krate":0,"index":3748}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650034,"byte_end":650043,"line_start":321,"line_end":321,"column_start":44,"column_end":53},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":3095},"to":{"krate":0,"index":3748}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/linalg/impl_linalg.rs","byte_start":650643,"byte_end":650652,"line_start":343,"line_end":343,"column_start":15,"column_end":24},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":671849,"byte_end":671854,"line_start":34,"line_end":34,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":3830}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":672336,"byte_end":672343,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":452}},"from":{"krate":21,"index":449},"to":{"krate":0,"index":3830}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":672375,"byte_end":672382,"line_start":51,"line_end":51,"column_start":24,"column_end":31},"kind":{"Impl":{"id":453}},"from":{"krate":21,"index":449},"to":{"krate":0,"index":3830}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":683444,"byte_end":683453,"line_start":368,"line_end":368,"column_start":27,"column_end":36},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":2173}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_ops.rs","byte_start":684255,"byte_end":684264,"line_start":398,"line_end":398,"column_start":27,"column_end":36},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":2198}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":688604,"byte_end":688613,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":692644,"byte_end":692656,"line_start":116,"line_end":116,"column_start":16,"column_end":28},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":696927,"byte_end":696936,"line_start":222,"line_end":222,"column_start":16,"column_end":25},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/constructors.rs","byte_start":697771,"byte_end":697783,"line_start":245,"line_end":245,"column_start":16,"column_end":28},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":699394,"byte_end":699403,"line_start":23,"line_end":23,"column_start":16,"column_end":25},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":701246,"byte_end":701255,"line_start":78,"line_end":78,"column_start":13,"column_end":22},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702031,"byte_end":702043,"line_start":104,"line_end":104,"column_start":13,"column_end":25},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":702712,"byte_end":702724,"line_start":126,"line_end":126,"column_start":16,"column_end":28},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":705445,"byte_end":705454,"line_start":187,"line_end":187,"column_start":16,"column_end":25},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/conversions.rs","byte_start":706168,"byte_end":706180,"line_start":216,"line_end":216,"column_start":16,"column_end":28},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/indexing.rs","byte_start":713310,"byte_end":713322,"line_start":145,"line_end":145,"column_start":38,"column_end":50},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":3116},"to":{"krate":0,"index":4019}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":715694,"byte_end":715703,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":719750,"byte_end":719759,"line_start":99,"line_end":99,"column_start":16,"column_end":25},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":720787,"byte_end":720799,"line_start":131,"line_end":131,"column_start":16,"column_end":28},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_views/splitting.rs","byte_start":722254,"byte_end":722266,"line_start":171,"line_end":171,"column_start":16,"column_end":28},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":723746,"byte_end":723758,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":3120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":729558,"byte_end":729570,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":3120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":732310,"byte_end":732325,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":3123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_raw_views.rs","byte_start":738386,"byte_end":738401,"line_start":372,"line_end":372,"column_start":12,"column_end":27},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":3123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":739364,"byte_end":739372,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":3108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":739728,"byte_end":739736,"line_start":29,"line_end":29,"column_start":46,"column_end":54},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":3108},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":740080,"byte_end":740088,"line_start":42,"line_end":42,"column_start":38,"column_end":46},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":3108},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":740440,"byte_end":740448,"line_start":55,"line_end":55,"column_start":48,"column_end":56},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":3108},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/rstar284/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.4/src/impl_cow.rs","byte_start":741009,"byte_end":741017,"line_start":75,"line_end":75,"column_start":49,"column_end":57},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":3108},"to":{"krate":2,"index":1997}}]}